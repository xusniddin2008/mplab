

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Tue Jun 30 16:57:57 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F716 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 212 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 217 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   102                           DATACCP equ 06h ;# 
   103  0006                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   104                           PCLATH equ 0Ah ;# 
   105  000A                     # 386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   106                           INTCON equ 0Bh ;# 
   107  000B                     # 464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   108                           PIR1 equ 0Ch ;# 
   109  000C                     # 503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   110                           TMR1 equ 0Eh ;# 
   111  000E                     # 510 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   112                           TMR1L equ 0Eh ;# 
   113  000E                     # 517 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   114                           TMR1H equ 0Fh ;# 
   115  000F                     # 524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   116                           T1CON equ 010h ;# 
   117  0010                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   118                           TMR2 equ 011h ;# 
   119  0011                     # 597 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   120                           T2CON equ 012h ;# 
   121  0012                     # 668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   122                           CCPR1 equ 015h ;# 
   123  0015                     # 675 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   124                           CCPR1L equ 015h ;# 
   125  0015                     # 682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   126                           CCPR1H equ 016h ;# 
   127  0016                     # 689 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   128                           CCP1CON equ 017h ;# 
   129  0017                     # 771 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   130                           PWM1CON equ 018h ;# 
   131  0018                     # 841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   132                           ECCPAS equ 019h ;# 
   133  0019                     # 919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   134                           ADRES equ 01Eh ;# 
   135  001E                     # 939 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   136                           ADCON0 equ 01Fh ;# 
   137  001F                     # 1035 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   138                           OPTION_REG equ 081h ;# 
   139  0081                     # 1105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   140                           TRISA equ 085h ;# 
   141  0085                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   142                           TRISB equ 086h ;# 
   143  0086                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   144                           TRISCP equ 086h ;# 
   145  0086                     # 1303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   146                           PIE1 equ 08Ch ;# 
   147  008C                     # 1342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   148                           PCON equ 08Eh ;# 
   149  008E                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   150                           PR2 equ 092h ;# 
   151  0092                     # 1391 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   152                           ADCON1 equ 09Fh ;# 
   153  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   154                           INDF equ 00h ;# 
   155  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   156                           TMR0 equ 01h ;# 
   157  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   158                           PCL equ 02h ;# 
   159  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   160                           STATUS equ 03h ;# 
   161  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   162                           FSR equ 04h ;# 
   163  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   164                           PORTA equ 05h ;# 
   165  0005                     # 212 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   166                           PORTB equ 06h ;# 
   167  0006                     # 217 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   168                           DATACCP equ 06h ;# 
   169  0006                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   170                           PCLATH equ 0Ah ;# 
   171  000A                     # 386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   172                           INTCON equ 0Bh ;# 
   173  000B                     # 464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   174                           PIR1 equ 0Ch ;# 
   175  000C                     # 503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   176                           TMR1 equ 0Eh ;# 
   177  000E                     # 510 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   178                           TMR1L equ 0Eh ;# 
   179  000E                     # 517 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   180                           TMR1H equ 0Fh ;# 
   181  000F                     # 524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   182                           T1CON equ 010h ;# 
   183  0010                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   184                           TMR2 equ 011h ;# 
   185  0011                     # 597 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   186                           T2CON equ 012h ;# 
   187  0012                     # 668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   188                           CCPR1 equ 015h ;# 
   189  0015                     # 675 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   190                           CCPR1L equ 015h ;# 
   191  0015                     # 682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   192                           CCPR1H equ 016h ;# 
   193  0016                     # 689 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   194                           CCP1CON equ 017h ;# 
   195  0017                     # 771 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   196                           PWM1CON equ 018h ;# 
   197  0018                     # 841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   198                           ECCPAS equ 019h ;# 
   199  0019                     # 919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   200                           ADRES equ 01Eh ;# 
   201  001E                     # 939 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   202                           ADCON0 equ 01Fh ;# 
   203  001F                     # 1035 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   204                           OPTION_REG equ 081h ;# 
   205  0081                     # 1105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   206                           TRISA equ 085h ;# 
   207  0085                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   208                           TRISB equ 086h ;# 
   209  0086                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   210                           TRISCP equ 086h ;# 
   211  0086                     # 1303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   212                           PIE1 equ 08Ch ;# 
   213  008C                     # 1342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   214                           PCON equ 08Eh ;# 
   215  008E                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   216                           PR2 equ 092h ;# 
   217  0092                     # 1391 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f716.h"
   218                           ADCON1 equ 09Fh ;# 
   219  009F                     	FNROOT	_main
   220                           	FNCALL	_isr,_TIM0_Callback
   221                           	FNCALL	_isr,_ledprint
   222                           	FNCALL	_ledprint,___lwdiv
   223                           	FNCALL	_ledprint,___lwmod
   224                           	FNCALL	_TIM0_Callback,_segchar
   225                           	FNCALL	intlevel1,_isr
   226                           	global	intlevel1
   227                           	FNROOT	intlevel1
   228                           	global	_q2
   229                           	global	_q1
   230                           	global	_R3
   231                           	global	_R2
   232                           	global	_R1
   233                           	global	_n_count
   234                           	global	_u
   235                           psect	nvBANK0,class=BANK0,space=1,noexec
   236                           global __pnvBANK0
   237                           __pnvBANK0:
   238  0031                     _u:
   239  0031                            ds      2
   240  0031                     
   241                           	global	_PORTAbits
   242                           _PORTAbits	set	0x5
   243  0005                     	global	_TMR0
   244                           _TMR0	set	0x1
   245  0001                     	global	_INTCON
   246                           _INTCON	set	0xB
   247  000B                     	global	_PORTB
   248                           _PORTB	set	0x6
   249  0006                     	global	_PORTA
   250                           _PORTA	set	0x5
   251  0005                     	global	_ECCPAS2
   252                           _ECCPAS2	set	0xCE
   253  00CE                     	global	_T0IF
   254                           _T0IF	set	0x5A
   255  005A                     	global	_INTF
   256                           _INTF	set	0x59
   257  0059                     	global	_OPTION_REG
   258                           _OPTION_REG	set	0x81
   259  0081                     	global	_TRISB
   260                           _TRISB	set	0x86
   261  0086                     	global	_TRISA
   262                           _TRISA	set	0x85
   263  0085                     ; #config settings
   264                           global __CFG_FOSC$HS
   265                           __CFG_FOSC$HS equ 0x0
   266  0000                     global __CFG_WDTE$OFF
   267                           __CFG_WDTE$OFF equ 0x0
   268  0000                     global __CFG_PWRTE$OFF
   269                           __CFG_PWRTE$OFF equ 0x0
   270  0000                     global __CFG_BOREN$OFF
   271                           __CFG_BOREN$OFF equ 0x0
   272  0000                     global __CFG_BODENV$40
   273                           __CFG_BODENV$40 equ 0x0
   274  0000                     global __CFG_CP$ON
   275                           __CFG_CP$ON equ 0x0
   276  0000                     	file	"C:\Users\XUSNID~1\AppData\Local\Temp\s4g8."
   277                           	line	#
   278                           psect cinit,class=CODE,delta=2
   279                           global start_initialization
   280                           start_initialization:
   281  000E                     
   282                           global __initialization
   283                           __initialization:
   284  000E                     psect	bssBANK0,class=BANK0,space=1,noexec
   285                           global __pbssBANK0
   286                           __pbssBANK0:
   287  0020                     _q2:
   288  0020                            ds      2
   289  0020                     
   290                           _q1:
   291  0022                            ds      2
   292  0022                     
   293                           _R4:
   294  0024                            ds      1
   295  0024                     
   296                           _R3:
   297  0025                            ds      1
   298  0025                     
   299                           _R2:
   300  0026                            ds      1
   301  0026                     
   302                           _R1:
   303  0027                            ds      1
   304  0027                     
   305                           _n_count:
   306  0028                            ds      1
   307  0028                     
   308                           _fl:
   309  0029                            ds      1
   310  0029                     
   311                           	file	"C:\Users\XUSNID~1\AppData\Local\Temp\s4g8."
   312                           	line	#
   313                           ; Clear objects allocated to BANK0
   314                           psect cinit,class=CODE,delta=2,merge=1
   315                           	bcf	status, 5	;RP0=0, select bank0
   316  000E  1283               	clrf	((__pbssBANK0)+0)&07Fh
   317  000F  01A0               	clrf	((__pbssBANK0)+1)&07Fh
   318  0010  01A1               	clrf	((__pbssBANK0)+2)&07Fh
   319  0011  01A2               	clrf	((__pbssBANK0)+3)&07Fh
   320  0012  01A3               	clrf	((__pbssBANK0)+4)&07Fh
   321  0013  01A4               	clrf	((__pbssBANK0)+5)&07Fh
   322  0014  01A5               	clrf	((__pbssBANK0)+6)&07Fh
   323  0015  01A6               	clrf	((__pbssBANK0)+7)&07Fh
   324  0016  01A7               	clrf	((__pbssBANK0)+8)&07Fh
   325  0017  01A8               	clrf	((__pbssBANK0)+9)&07Fh
   326  0018  01A9               psect cinit,class=CODE,delta=2,merge=1
   327                           global end_of_initialization,__end_of__initialization
   328                           
   329                           ;End of C runtime variable initialization code
   330                           
   331                           end_of_initialization:
   332  0019                     __end_of__initialization:
   333  0019                     clrf status
   334  0019  0183               ljmp _main	;jump to C main() function
   335  001A  298B               psect	cstackCOMMON,class=COMMON,space=1,noexec
   336                           global __pcstackCOMMON
   337                           __pcstackCOMMON:
   338  0070                     ?_TIM0_Callback:	; 1 bytes @ 0x0
   339  0070                     ?_isr:	; 1 bytes @ 0x0
   340  0070                     ?_main:	; 1 bytes @ 0x0
   341  0070                     ?_segchar:	; 1 bytes @ 0x0
   342  0070                     	global	?___lwmod
   343                           ?___lwmod:	; 2 bytes @ 0x0
   344  0070                     	global	segchar@seg
   345                           segchar@seg:	; 2 bytes @ 0x0
   346  0070                     	global	___lwmod@divisor
   347                           ___lwmod@divisor:	; 2 bytes @ 0x0
   348  0070                     	ds	2
   349  0070                     ??_TIM0_Callback:	; 1 bytes @ 0x2
   350  0072                     ??_segchar:	; 1 bytes @ 0x2
   351  0072                     	global	___lwmod@dividend
   352                           ___lwmod@dividend:	; 2 bytes @ 0x2
   353  0072                     	ds	2
   354  0072                     ??___lwmod:	; 1 bytes @ 0x4
   355  0074                     	ds	1
   356  0074                     	global	___lwmod@counter
   357                           ___lwmod@counter:	; 1 bytes @ 0x5
   358  0075                     	ds	1
   359  0075                     	global	?___lwdiv
   360                           ?___lwdiv:	; 2 bytes @ 0x6
   361  0076                     	global	___lwdiv@divisor
   362                           ___lwdiv@divisor:	; 2 bytes @ 0x6
   363  0076                     	ds	2
   364  0076                     	global	___lwdiv@dividend
   365                           ___lwdiv@dividend:	; 2 bytes @ 0x8
   366  0078                     	ds	2
   367  0078                     ??___lwdiv:	; 1 bytes @ 0xA
   368  007A                     	ds	1
   369  007A                     	global	___lwdiv@quotient
   370                           ___lwdiv@quotient:	; 2 bytes @ 0xB
   371  007B                     	ds	2
   372  007B                     	global	___lwdiv@counter
   373                           ___lwdiv@counter:	; 1 bytes @ 0xD
   374  007D                     	ds	1
   375  007D                     psect	cstackBANK0,class=BANK0,space=1,noexec
   376                           global __pcstackBANK0
   377                           __pcstackBANK0:
   378  002A                     ?_ledprint:	; 1 bytes @ 0x0
   379  002A                     	global	ledprint@number
   380                           ledprint@number:	; 2 bytes @ 0x0
   381  002A                     	ds	2
   382  002A                     ??_ledprint:	; 1 bytes @ 0x2
   383  002C                     	ds	1
   384  002C                     ??_isr:	; 1 bytes @ 0x3
   385  002D                     	ds	3
   386  002D                     ??_main:	; 1 bytes @ 0x6
   387  0030                     	ds	1
   388  0030                     ;!
   389                           ;!Data Sizes:
   390                           ;!    Strings     0
   391                           ;!    Constant    0
   392                           ;!    Data        0
   393                           ;!    BSS         10
   394                           ;!    Persistent  2
   395                           ;!    Stack       0
   396                           ;!
   397                           ;!Auto Spaces:
   398                           ;!    Space          Size  Autos    Used
   399                           ;!    COMMON           14     14      14
   400                           ;!    BANK0            80      7      19
   401                           ;!    BANK1            32      0       0
   402                           
   403                           ;!
   404                           ;!Pointer List with Targets:
   405                           ;!
   406                           ;!    None.
   407                           
   408                           
   409                           ;!
   410                           ;!Critical Paths under _main in COMMON
   411                           ;!
   412                           ;!    None.
   413                           ;!
   414                           ;!Critical Paths under _isr in COMMON
   415                           ;!
   416                           ;!    _ledprint->___lwdiv
   417                           ;!    ___lwdiv->___lwmod
   418                           ;!    _TIM0_Callback->_segchar
   419                           ;!
   420                           ;!Critical Paths under _main in BANK0
   421                           ;!
   422                           ;!    None.
   423                           ;!
   424                           ;!Critical Paths under _isr in BANK0
   425                           ;!
   426                           ;!    _isr->_ledprint
   427                           ;!
   428                           ;!Critical Paths under _main in BANK1
   429                           ;!
   430                           ;!    None.
   431                           ;!
   432                           ;!Critical Paths under _isr in BANK1
   433                           ;!
   434                           ;!    None.
   435                           
   436 ;;
   437 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   438 ;;
   439                           
   440                           ;!
   441                           ;!Call Graph Tables:
   442                           ;!
   443                           ;! ---------------------------------------------------------------------------------
   444                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   445                           ;! ---------------------------------------------------------------------------------
   446                           ;! (0) _main                                                 1     1      0       0
   447                           ;!                                              6 BANK0      1     1      0
   448                           ;! ---------------------------------------------------------------------------------
   449                           ;! Estimated maximum stack depth 0
   450                           ;! ---------------------------------------------------------------------------------
   451                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   452                           ;! ---------------------------------------------------------------------------------
   453                           ;! (1) _isr                                                  3     3      0    1669
   454                           ;!                                              3 BANK0      3     3      0
   455                           ;!                      _TIM0_Callback
   456                           ;!                           _ledprint
   457                           ;! ---------------------------------------------------------------------------------
   458                           ;! (2) _ledprint                                             3     1      2    1419
   459                           ;!                                              0 BANK0      3     1      2
   460                           ;!                            ___lwdiv
   461                           ;!                            ___lwmod
   462                           ;! ---------------------------------------------------------------------------------
   463                           ;! (3) ___lwmod                                              6     2      4     767
   464                           ;!                                              0 COMMON     6     2      4
   465                           ;! ---------------------------------------------------------------------------------
   466                           ;! (3) ___lwdiv                                              8     4      4     466
   467                           ;!                                              6 COMMON     8     4      4
   468                           ;!                            ___lwmod (ARG)
   469                           ;! ---------------------------------------------------------------------------------
   470                           ;! (2) _TIM0_Callback                                        2     2      0     250
   471                           ;!                                              2 COMMON     2     2      0
   472                           ;!                            _segchar
   473                           ;! ---------------------------------------------------------------------------------
   474                           ;! (3) _segchar                                              2     0      2     250
   475                           ;!                                              0 COMMON     2     0      2
   476                           ;! ---------------------------------------------------------------------------------
   477                           ;! Estimated maximum stack depth 3
   478                           ;! ---------------------------------------------------------------------------------
   479                           ;!
   480                           ;! Call Graph Graphs:
   481                           ;!
   482                           ;! _main (ROOT)
   483                           ;!
   484                           ;! _isr (ROOT)
   485                           ;!   _TIM0_Callback
   486                           ;!     _segchar
   487                           ;!   _ledprint
   488                           ;!     ___lwdiv
   489                           ;!       ___lwmod (ARG)
   490                           ;!     ___lwmod
   491                           ;!
   492                           
   493                           ;! Address spaces:
   494                           
   495                           ;!Name               Size   Autos  Total    Cost      Usage
   496                           ;!BITCOMMON            E      0       0       0        0.0%
   497                           ;!NULL                 0      0       0       0        0.0%
   498                           ;!CODE                 0      0       0       0        0.0%
   499                           ;!COMMON               E      E       E       1      100.0%
   500                           ;!BITSFR0              0      0       0       1        0.0%
   501                           ;!SFR0                 0      0       0       1        0.0%
   502                           ;!BITSFR1              0      0       0       2        0.0%
   503                           ;!SFR1                 0      0       0       2        0.0%
   504                           ;!STACK                0      0       0       2        0.0%
   505                           ;!BITBANK0            50      0       0       3        0.0%
   506                           ;!BANK0               50      7      13       4       23.8%
   507                           ;!BANK1               20      0       0       5        0.0%
   508                           ;!ABS                  0      0      21       6        0.0%
   509                           ;!BITBANK1            20      0       0       7        0.0%
   510                           ;!DATA                 0      0      21       8        0.0%
   511                           
   512                           	global	_main
   513                           
   514 ;; *************** function _main *****************
   515 ;; Defined at:
   516 ;;		line 86 in file "main.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;		None
   519 ;; Auto vars:     Size  Location     Type
   520 ;;		None
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      void 
   523 ;; Registers used:
   524 ;;		wreg, status,2, status,0
   525 ;; Tracked objects:
   526 ;;		On entry : B00/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMMON   BANK0   BANK1
   530 ;;      Params:         0       0       0
   531 ;;      Locals:         0       0       0
   532 ;;      Temps:          0       1       0
   533 ;;      Totals:         0       1       0
   534 ;;Total ram usage:        1 bytes
   535 ;; Hardware stack levels required when called:    3
   536 ;; This function calls:
   537 ;;		Nothing
   538 ;; This function is called by:
   539 ;;		Startup code after reset
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   543                           	file	"main.c"
   544                           	line	86
   545                           global __pmaintext
   546                           __pmaintext:	;psect for function _main
   547  018B                     psect	maintext
   548                           	file	"main.c"
   549                           	line	86
   550                           	global	__size_of_main
   551                           	__size_of_main	equ	__end_of_main-_main
   552  0037                     	
   553                           _main:	
   554  018B                     ;incstack = 0
   555                           	opt	stack 5
   556                           ; Regs used in _main: [wreg+status,2+status,0]
   557                           	line	88
   558                           	
   559                           l926:	
   560  018B                     ;main.c: 88: TRISA = 0x00;
   561                           	bsf	status, 5	;RP0=1, select bank1
   562  018B  1683               	clrf	(133)^080h	;volatile
   563  018C  0185               	line	89
   564                           	
   565                           l928:	
   566  018D                     ;main.c: 89: PORTA = 0xFF;
   567                           	movlw	low(0FFh)
   568  018D  30FF               	bcf	status, 5	;RP0=0, select bank0
   569  018E  1283               	movwf	(5)	;volatile
   570  018F  0085               	line	90
   571                           	
   572                           l930:	
   573  0190                     ;main.c: 90: TRISB = 0b00000001;
   574                           	movlw	low(01h)
   575  0190  3001               	bsf	status, 5	;RP0=1, select bank1
   576  0191  1683               	movwf	(134)^080h	;volatile
   577  0192  0086               	line	91
   578                           ;main.c: 91: PORTB = 0b00000000;
   579                           	bcf	status, 5	;RP0=0, select bank0
   580  0193  1283               	clrf	(6)	;volatile
   581  0194  0186               	line	92
   582                           	
   583                           l932:	
   584  0195                     ;main.c: 92: OPTION_REG=0b01001011;
   585                           	movlw	low(04Bh)
   586  0195  304B               	bsf	status, 5	;RP0=1, select bank1
   587  0196  1683               	movwf	(129)^080h	;volatile
   588  0197  0081               	line	94
   589                           	
   590                           l934:	
   591  0198                     ;main.c: 94: INTCON=0b11111000;
   592                           	movlw	low(0F8h)
   593  0198  30F8               	movwf	(11)	;volatile
   594  0199  008B               	line	96
   595                           	
   596                           l936:	
   597  019A                     ;main.c: 96: TMR0=200;
   598                           	movlw	low(0C8h)
   599  019A  30C8               	bcf	status, 5	;RP0=0, select bank0
   600  019B  1283               	movwf	(1)	;volatile
   601  019C  0081               	line	97
   602                           	
   603                           l938:	
   604  019D                     ;main.c: 97: ECCPAS2 = 0;
   605                           	bcf	(206/8),(206)&7	;volatile
   606  019D  1319               	goto	l940
   607  019E  299F               	line	105
   608                           ;main.c: 105: while(1)
   609                           	
   610                           l45:	
   611  019F                     	line	108
   612                           	
   613                           l940:	
   614  019F                     ;main.c: 106: {;main.c: 108: for(u=999;u>0;u--)
   615                           	movlw	0E7h
   616  019F  30E7               	movwf	(_u)
   617  01A0  00B1               	movlw	03h
   618  01A1  3003               	movwf	((_u))+1
   619  01A2  00B2               	
   620                           l942:	
   621  01A3                     	movf	((_u)),w
   622  01A3  0831               iorwf	((_u+1)),w
   623  01A4  0432               	btfss	status,2
   624  01A5  1D03               	goto	u451
   625  01A6  29A8               	goto	u450
   626  01A7  29A9               u451:
   627  01A8                     	goto	l946
   628  01A8  29AB               u450:
   629  01A9                     	goto	l940
   630  01A9  299F               	
   631                           l944:	
   632  01AA                     	goto	l940
   633  01AA  299F               	line	109
   634                           	
   635                           l46:	
   636  01AB                     	line	114
   637                           	
   638                           l946:	
   639  01AB                     ;main.c: 109: {;main.c: 114: _delay((unsigned long)((127)*(4000000/4000000.0)));
   640                           	opt asmopt_push
   641                           opt asmopt_off
   642                           	movlw	41
   643  01AB  3029               	bcf	status, 5	;RP0=0, select bank0
   644  01AC  1283               movwf	((??_main+0)+0),f
   645  01AD  00B0               	u477:
   646  01AE                     decfsz	(??_main+0)+0,f
   647  01AE  0BB0               	goto	u477
   648  01AF  29AE               	nop2
   649  01B0  29B1               opt asmopt_pop
   650                           
   651                           	line	108
   652                           	movlw	01h
   653  01B1  3001               	bcf	status, 5	;RP0=0, select bank0
   654  01B2  1283               	subwf	(_u),f
   655  01B3  02B1               	movlw	0
   656  01B4  3000               	skipc
   657  01B5  1C03               	decf	(_u+1),f
   658  01B6  03B2               	subwf	(_u+1),f
   659  01B7  02B2               	
   660                           l948:	
   661  01B8                     	movf	((_u)),w
   662  01B8  0831               iorwf	((_u+1)),w
   663  01B9  0432               	btfss	status,2
   664  01BA  1D03               	goto	u461
   665  01BB  29BD               	goto	u460
   666  01BC  29BE               u461:
   667  01BD                     	goto	l946
   668  01BD  29AB               u460:
   669  01BE                     	goto	l940
   670  01BE  299F               	
   671                           l47:	
   672  01BF                     	goto	l940
   673  01BF  299F               	line	117
   674                           	
   675                           l48:	
   676  01C0                     	line	105
   677                           	goto	l940
   678  01C0  299F               	
   679                           l49:	
   680  01C1                     	line	121
   681                           ;main.c: 116: };main.c: 117: };main.c: 118: return;
   682                           	
   683                           l50:	
   684  01C1                     	global	start
   685                           	ljmp	start
   686  01C1  280D               	opt stack 0
   687                           GLOBAL	__end_of_main
   688                           	__end_of_main:
   689  01C2                     	signat	_main,89
   690                           	global	_isr
   691                           
   692 ;; *************** function _isr *****************
   693 ;; Defined at:
   694 ;;		line 66 in file "main.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;		None
   697 ;; Auto vars:     Size  Location     Type
   698 ;;		None
   699 ;; Return value:  Size  Location     Type
   700 ;;                  1    wreg      void 
   701 ;; Registers used:
   702 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMMON   BANK0   BANK1
   708 ;;      Params:         0       0       0
   709 ;;      Locals:         0       0       0
   710 ;;      Temps:          0       3       0
   711 ;;      Totals:         0       3       0
   712 ;;Total ram usage:        3 bytes
   713 ;; Hardware stack levels used:    1
   714 ;; Hardware stack levels required when called:    2
   715 ;; This function calls:
   716 ;;		_TIM0_Callback
   717 ;;		_ledprint
   718 ;; This function is called by:
   719 ;;		Interrupt level 1
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
   723                           	line	66
   724                           global __ptext1
   725                           __ptext1:	;psect for function _isr
   726  01C2                     psect	text1
   727                           	file	"main.c"
   728                           	line	66
   729                           	global	__size_of_isr
   730                           	__size_of_isr	equ	__end_of_isr-_isr
   731  0021                     	
   732                           _isr:	
   733  01C2                     ;incstack = 0
   734                           	opt	stack 5
   735                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   736                           psect	intentry,class=CODE,delta=2
   737                           global __pintentry
   738                           __pintentry:
   739  0004                     global interrupt_function
   740                           interrupt_function:
   741  0004                     	global saved_w
   742                           	saved_w	set	btemp+0
   743  007E                     	movwf	saved_w
   744  0004  00FE               	swapf	status,w
   745  0005  0E03               	bcf	status, 5	;RP0=0, select bank0
   746  0006  1283               	movwf	(??_isr+0)
   747  0007  00AD               	movf	fsr0,w
   748  0008  0804               	movwf	(??_isr+1)
   749  0009  00AE               	movf	pclath,w
   750  000A  080A               	movwf	(??_isr+2)
   751  000B  00AF               	ljmp	_isr
   752  000C  29C2               psect	text1
   753                           	line	68
   754                           	
   755                           i1l912:	
   756  01C2                     ;main.c: 68: if (INTF==1)
   757                           	btfss	(89/8),(89)&7	;volatile
   758  01C2  1C8B               	goto	u43_21
   759  01C3  29C5               	goto	u43_20
   760  01C4  29C6               u43_21:
   761  01C5                     	goto	i1l920
   762  01C5  29D2               u43_20:
   763  01C6                     	line	70
   764                           	
   765                           i1l914:	
   766  01C6                     ;main.c: 69: {;main.c: 70: ledprint(u);
   767                           	movf	(_u+1),w
   768  01C6  0832               	movwf	(ledprint@number+1)
   769  01C7  00AB               	movf	(_u),w
   770  01C8  0831               	movwf	(ledprint@number)
   771  01C9  00AA               	fcall	_ledprint
   772  01CA  2074               	line	71
   773                           	
   774                           i1l916:	
   775  01CB                     ;main.c: 71: u=999;
   776                           	movlw	0E7h
   777  01CB  30E7               	bcf	status, 5	;RP0=0, select bank0
   778  01CC  1283               	movwf	(_u)
   779  01CD  00B1               	movlw	03h
   780  01CE  3003               	movwf	((_u))+1
   781  01CF  00B2               	line	72
   782                           	
   783                           i1l918:	
   784  01D0                     ;main.c: 72: INTF=0;
   785                           	bcf	(89/8),(89)&7	;volatile
   786  01D0  108B               	goto	i1l920
   787  01D1  29D2               	line	75
   788                           	
   789                           i1l38:	
   790  01D2                     	line	76
   791                           	
   792                           i1l920:	
   793  01D2                     ;main.c: 75: };main.c: 76: if(T0IF)
   794                           	btfss	(90/8),(90)&7	;volatile
   795  01D2  1D0B               	goto	u44_21
   796  01D3  29D5               	goto	u44_20
   797  01D4  29D6               u44_21:
   798  01D5                     	goto	i1l40
   799  01D5  29D9               u44_20:
   800  01D6                     	line	78
   801                           	
   802                           i1l922:	
   803  01D6                     ;main.c: 77: {;main.c: 78: TIM0_Callback();
   804                           	fcall	_TIM0_Callback
   805  01D6  201B               	line	79
   806                           	
   807                           i1l924:	
   808  01D7                     ;main.c: 79: T0IF=0;
   809                           	bcf	(90/8),(90)&7	;volatile
   810  01D7  110B               	goto	i1l40
   811  01D8  29D9               	line	80
   812                           	
   813                           i1l39:	
   814  01D9                     	line	82
   815                           	
   816                           i1l40:	
   817  01D9                     	bcf	status, 5	;RP0=0, select bank0
   818  01D9  1283               	movf	(??_isr+2),w
   819  01DA  082F               	movwf	pclath
   820  01DB  008A               	movf	(??_isr+1),w
   821  01DC  082E               	movwf	fsr0
   822  01DD  0084               	swapf	(??_isr+0)^00h,w
   823  01DE  0E2D               	movwf	status
   824  01DF  0083               	swapf	saved_w,f
   825  01E0  0EFE               	swapf	saved_w,w
   826  01E1  0E7E               	retfie
   827  01E2  0009               	opt stack 0
   828                           GLOBAL	__end_of_isr
   829                           	__end_of_isr:
   830  01E3                     	signat	_isr,89
   831                           	global	_ledprint
   832                           
   833 ;; *************** function _ledprint *****************
   834 ;; Defined at:
   835 ;;		line 46 in file "led.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;  number          2    0[BANK0 ] unsigned int 
   838 ;; Auto vars:     Size  Location     Type
   839 ;;		None
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		wreg, status,2, status,0, pclath, cstack
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMMON   BANK0   BANK1
   849 ;;      Params:         0       2       0
   850 ;;      Locals:         0       0       0
   851 ;;      Temps:          0       1       0
   852 ;;      Totals:         0       3       0
   853 ;;Total ram usage:        3 bytes
   854 ;; Hardware stack levels used:    1
   855 ;; Hardware stack levels required when called:    1
   856 ;; This function calls:
   857 ;;		___lwdiv
   858 ;;		___lwmod
   859 ;; This function is called by:
   860 ;;		_isr
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
   864                           	file	"led.c"
   865                           	line	46
   866                           global __ptext2
   867                           __ptext2:	;psect for function _ledprint
   868  0074                     psect	text2
   869                           	file	"led.c"
   870                           	line	46
   871                           	global	__size_of_ledprint
   872                           	__size_of_ledprint	equ	__end_of_ledprint-_ledprint
   873  0050                     	
   874                           _ledprint:	
   875  0074                     ;incstack = 0
   876                           	opt	stack 5
   877                           ; Regs used in _ledprint: [wreg+status,2+status,0+pclath+cstack]
   878                           	line	48
   879                           	
   880                           i1l870:	
   881  0074                     ;led.c: 48: q1 = number;
   882                           	bcf	status, 5	;RP0=0, select bank0
   883  0074  1283               	movf	(ledprint@number+1),w
   884  0075  082B               	movwf	(_q1+1)
   885  0076  00A3               	movf	(ledprint@number),w
   886  0077  082A               	movwf	(_q1)
   887  0078  00A2               	line	49
   888                           	
   889                           i1l872:	
   890  0079                     ;led.c: 49: q2 = number%10;
   891                           	movlw	0Ah
   892  0079  300A               	movwf	(___lwmod@divisor)
   893  007A  00F0               	movlw	0
   894  007B  3000               	movwf	((___lwmod@divisor))+1
   895  007C  00F1               	movf	(ledprint@number+1),w
   896  007D  082B               	movwf	(___lwmod@dividend+1)
   897  007E  00F3               	movf	(ledprint@number),w
   898  007F  082A               	movwf	(___lwmod@dividend)
   899  0080  00F2               	fcall	___lwmod
   900  0081  210F               	movf	(1+(?___lwmod)),w
   901  0082  0871               	bcf	status, 5	;RP0=0, select bank0
   902  0083  1283               	movwf	(_q2+1)
   903  0084  00A1               	movf	(0+(?___lwmod)),w
   904  0085  0870               	movwf	(_q2)
   905  0086  00A0               	line	50
   906                           	
   907                           i1l874:	
   908  0087                     ;led.c: 50: R1 = number%10;
   909                           	movlw	0Ah
   910  0087  300A               	movwf	(___lwmod@divisor)
   911  0088  00F0               	movlw	0
   912  0089  3000               	movwf	((___lwmod@divisor))+1
   913  008A  00F1               	movf	(ledprint@number+1),w
   914  008B  082B               	movwf	(___lwmod@dividend+1)
   915  008C  00F3               	movf	(ledprint@number),w
   916  008D  082A               	movwf	(___lwmod@dividend)
   917  008E  00F2               	fcall	___lwmod
   918  008F  210F               	movf	(0+(?___lwmod)),w
   919  0090  0870               	bcf	status, 5	;RP0=0, select bank0
   920  0091  1283               	movwf	(??_ledprint+0)+0
   921  0092  00AC               	movf	(??_ledprint+0)+0,w
   922  0093  082C               	movwf	(_R1)
   923  0094  00A7               	line	51
   924                           	
   925                           i1l876:	
   926  0095                     ;led.c: 51: R2 = number%100/10;
   927                           	movlw	0Ah
   928  0095  300A               	movwf	(___lwdiv@divisor)
   929  0096  00F6               	movlw	0
   930  0097  3000               	movwf	((___lwdiv@divisor))+1
   931  0098  00F7               	movf	(ledprint@number+1),w
   932  0099  082B               	movwf	(___lwmod@dividend+1)
   933  009A  00F3               	movf	(ledprint@number),w
   934  009B  082A               	movwf	(___lwmod@dividend)
   935  009C  00F2               	movlw	064h
   936  009D  3064               	movwf	(___lwmod@divisor)
   937  009E  00F0               	movlw	0
   938  009F  3000               	movwf	((___lwmod@divisor))+1
   939  00A0  00F1               	fcall	___lwmod
   940  00A1  210F               	movf	(1+(?___lwmod)),w
   941  00A2  0871               	movwf	(___lwdiv@dividend+1)
   942  00A3  00F9               	movf	(0+(?___lwmod)),w
   943  00A4  0870               	movwf	(___lwdiv@dividend)
   944  00A5  00F8               	fcall	___lwdiv
   945  00A6  20C4               	movf	(0+(?___lwdiv)),w
   946  00A7  0876               	bcf	status, 5	;RP0=0, select bank0
   947  00A8  1283               	movwf	(??_ledprint+0)+0
   948  00A9  00AC               	movf	(??_ledprint+0)+0,w
   949  00AA  082C               	movwf	(_R2)
   950  00AB  00A6               	line	52
   951                           	
   952                           i1l878:	
   953  00AC                     ;led.c: 52: R3 = number%1000/100;
   954                           	movlw	064h
   955  00AC  3064               	movwf	(___lwdiv@divisor)
   956  00AD  00F6               	movlw	0
   957  00AE  3000               	movwf	((___lwdiv@divisor))+1
   958  00AF  00F7               	movf	(ledprint@number+1),w
   959  00B0  082B               	movwf	(___lwmod@dividend+1)
   960  00B1  00F3               	movf	(ledprint@number),w
   961  00B2  082A               	movwf	(___lwmod@dividend)
   962  00B3  00F2               	movlw	0E8h
   963  00B4  30E8               	movwf	(___lwmod@divisor)
   964  00B5  00F0               	movlw	03h
   965  00B6  3003               	movwf	((___lwmod@divisor))+1
   966  00B7  00F1               	fcall	___lwmod
   967  00B8  210F               	movf	(1+(?___lwmod)),w
   968  00B9  0871               	movwf	(___lwdiv@dividend+1)
   969  00BA  00F9               	movf	(0+(?___lwmod)),w
   970  00BB  0870               	movwf	(___lwdiv@dividend)
   971  00BC  00F8               	fcall	___lwdiv
   972  00BD  20C4               	movf	(0+(?___lwdiv)),w
   973  00BE  0876               	bcf	status, 5	;RP0=0, select bank0
   974  00BF  1283               	movwf	(??_ledprint+0)+0
   975  00C0  00AC               	movf	(??_ledprint+0)+0,w
   976  00C1  082C               	movwf	(_R3)
   977  00C2  00A5               	line	53
   978                           	
   979                           i1l86:	
   980  00C3                     	return
   981  00C3  0008               	opt stack 0
   982                           GLOBAL	__end_of_ledprint
   983                           	__end_of_ledprint:
   984  00C4                     	signat	_ledprint,4217
   985                           	global	___lwmod
   986                           
   987 ;; *************** function ___lwmod *****************
   988 ;; Defined at:
   989 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  divisor         2    0[COMMON] unsigned int 
   992 ;;  dividend        2    2[COMMON] unsigned int 
   993 ;; Auto vars:     Size  Location     Type
   994 ;;  counter         1    5[COMMON] unsigned char 
   995 ;; Return value:  Size  Location     Type
   996 ;;                  2    0[COMMON] unsigned int 
   997 ;; Registers used:
   998 ;;		wreg, status,2, status,0
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMMON   BANK0   BANK1
  1004 ;;      Params:         4       0       0
  1005 ;;      Locals:         1       0       0
  1006 ;;      Temps:          1       0       0
  1007 ;;      Totals:         6       0       0
  1008 ;;Total ram usage:        6 bytes
  1009 ;; Hardware stack levels used:    1
  1010 ;; This function calls:
  1011 ;;		Nothing
  1012 ;; This function is called by:
  1013 ;;		_ledprint
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           psect	text3,local,class=CODE,delta=2,merge=1,group=1
  1017                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  1018                           	line	5
  1019                           global __ptext3
  1020                           __ptext3:	;psect for function ___lwmod
  1021  010F                     psect	text3
  1022                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  1023                           	line	5
  1024                           	global	__size_of___lwmod
  1025                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  1026  0041                     	
  1027                           ___lwmod:	
  1028  010F                     ;incstack = 0
  1029                           	opt	stack 5
  1030                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1031                           	line	12
  1032                           	
  1033                           i1l848:	
  1034  010F                     	movf	((___lwmod@divisor)),w
  1035  010F  0870               iorwf	((___lwmod@divisor+1)),w
  1036  0110  0471               	btfsc	status,2
  1037  0111  1903               	goto	u31_21
  1038  0112  2914               	goto	u31_20
  1039  0113  2915               u31_21:
  1040  0114                     	goto	i1l866
  1041  0114  294A               u31_20:
  1042  0115                     	line	13
  1043                           	
  1044                           i1l850:	
  1045  0115                     	clrf	(___lwmod@counter)
  1046  0115  01F5               	incf	(___lwmod@counter),f
  1047  0116  0AF5               	line	14
  1048                           	goto	i1l856
  1049  0117  2924               	
  1050                           i1l376:	
  1051  0118                     	line	15
  1052                           	
  1053                           i1l852:	
  1054  0118                     	movlw	01h
  1055  0118  3001               	
  1056                           u32_25:
  1057  0119                     	clrc
  1058  0119  1003               	rlf	(___lwmod@divisor),f
  1059  011A  0DF0               	rlf	(___lwmod@divisor+1),f
  1060  011B  0DF1               	addlw	-1
  1061  011C  3EFF               	skipz
  1062  011D  1D03               	goto	u32_25
  1063  011E  2919               	line	16
  1064                           	
  1065                           i1l854:	
  1066  011F                     	movlw	low(01h)
  1067  011F  3001               	movwf	(??___lwmod+0)+0
  1068  0120  00F4               	movf	(??___lwmod+0)+0,w
  1069  0121  0874               	addwf	(___lwmod@counter),f
  1070  0122  07F5               	goto	i1l856
  1071  0123  2924               	line	17
  1072                           	
  1073                           i1l375:	
  1074  0124                     	line	14
  1075                           	
  1076                           i1l856:	
  1077  0124                     	btfss	(___lwmod@divisor+1),(15)&7
  1078  0124  1FF1               	goto	u33_21
  1079  0125  2927               	goto	u33_20
  1080  0126  2928               u33_21:
  1081  0127                     	goto	i1l852
  1082  0127  2918               u33_20:
  1083  0128                     	goto	i1l858
  1084  0128  292A               	
  1085                           i1l377:	
  1086  0129                     	goto	i1l858
  1087  0129  292A               	line	18
  1088                           	
  1089                           i1l378:	
  1090  012A                     	line	19
  1091                           	
  1092                           i1l858:	
  1093  012A                     	movf	(___lwmod@divisor+1),w
  1094  012A  0871               	subwf	(___lwmod@dividend+1),w
  1095  012B  0273               	skipz
  1096  012C  1D03               	goto	u34_25
  1097  012D  2930               	movf	(___lwmod@divisor),w
  1098  012E  0870               	subwf	(___lwmod@dividend),w
  1099  012F  0272               u34_25:
  1100  0130                     	skipc
  1101  0130  1C03               	goto	u34_21
  1102  0131  2933               	goto	u34_20
  1103  0132  2934               u34_21:
  1104  0133                     	goto	i1l862
  1105  0133  293B               u34_20:
  1106  0134                     	line	20
  1107                           	
  1108                           i1l860:	
  1109  0134                     	movf	(___lwmod@divisor),w
  1110  0134  0870               	subwf	(___lwmod@dividend),f
  1111  0135  02F2               	movf	(___lwmod@divisor+1),w
  1112  0136  0871               	skipc
  1113  0137  1C03               	decf	(___lwmod@dividend+1),f
  1114  0138  03F3               	subwf	(___lwmod@dividend+1),f
  1115  0139  02F3               	goto	i1l862
  1116  013A  293B               	
  1117                           i1l379:	
  1118  013B                     	line	21
  1119                           	
  1120                           i1l862:	
  1121  013B                     	movlw	01h
  1122  013B  3001               	
  1123                           u35_25:
  1124  013C                     	clrc
  1125  013C  1003               	rrf	(___lwmod@divisor+1),f
  1126  013D  0CF1               	rrf	(___lwmod@divisor),f
  1127  013E  0CF0               	addlw	-1
  1128  013F  3EFF               	skipz
  1129  0140  1D03               	goto	u35_25
  1130  0141  293C               	line	22
  1131                           	
  1132                           i1l864:	
  1133  0142                     	movlw	01h
  1134  0142  3001               	subwf	(___lwmod@counter),f
  1135  0143  02F5               	btfss	status,2
  1136  0144  1D03               	goto	u36_21
  1137  0145  2947               	goto	u36_20
  1138  0146  2948               u36_21:
  1139  0147                     	goto	i1l858
  1140  0147  292A               u36_20:
  1141  0148                     	goto	i1l866
  1142  0148  294A               	
  1143                           i1l380:	
  1144  0149                     	goto	i1l866
  1145  0149  294A               	line	23
  1146                           	
  1147                           i1l374:	
  1148  014A                     	line	24
  1149                           	
  1150                           i1l866:	
  1151  014A                     	movf	(___lwmod@dividend+1),w
  1152  014A  0873               	movwf	(?___lwmod+1)
  1153  014B  00F1               	movf	(___lwmod@dividend),w
  1154  014C  0872               	movwf	(?___lwmod)
  1155  014D  00F0               	goto	i1l381
  1156  014E  294F               	
  1157                           i1l868:	
  1158  014F                     	line	25
  1159                           	
  1160                           i1l381:	
  1161  014F                     	return
  1162  014F  0008               	opt stack 0
  1163                           GLOBAL	__end_of___lwmod
  1164                           	__end_of___lwmod:
  1165  0150                     	signat	___lwmod,8314
  1166                           	global	___lwdiv
  1167                           
  1168 ;; *************** function ___lwdiv *****************
  1169 ;; Defined at:
  1170 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;  divisor         2    6[COMMON] unsigned int 
  1173 ;;  dividend        2    8[COMMON] unsigned int 
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;  quotient        2   11[COMMON] unsigned int 
  1176 ;;  counter         1   13[COMMON] unsigned char 
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  2    6[COMMON] unsigned int 
  1179 ;; Registers used:
  1180 ;;		wreg, status,2, status,0
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMMON   BANK0   BANK1
  1186 ;;      Params:         4       0       0
  1187 ;;      Locals:         3       0       0
  1188 ;;      Temps:          1       0       0
  1189 ;;      Totals:         8       0       0
  1190 ;;Total ram usage:        8 bytes
  1191 ;; Hardware stack levels used:    1
  1192 ;; This function calls:
  1193 ;;		Nothing
  1194 ;; This function is called by:
  1195 ;;		_ledprint
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  1199                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  1200                           	line	5
  1201                           global __ptext4
  1202                           __ptext4:	;psect for function ___lwdiv
  1203  00C4                     psect	text4
  1204                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  1205                           	line	5
  1206                           	global	__size_of___lwdiv
  1207                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  1208  004B                     	
  1209                           ___lwdiv:	
  1210  00C4                     ;incstack = 0
  1211                           	opt	stack 5
  1212                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1213                           	line	13
  1214                           	
  1215                           i1l822:	
  1216  00C4                     	clrf	(___lwdiv@quotient)
  1217  00C4  01FB               	clrf	(___lwdiv@quotient+1)
  1218  00C5  01FC               	line	14
  1219                           	
  1220                           i1l824:	
  1221  00C6                     	movf	((___lwdiv@divisor)),w
  1222  00C6  0876               iorwf	((___lwdiv@divisor+1)),w
  1223  00C7  0477               	btfsc	status,2
  1224  00C8  1903               	goto	u24_21
  1225  00C9  28CB               	goto	u24_20
  1226  00CA  28CC               u24_21:
  1227  00CB                     	goto	i1l844
  1228  00CB  2909               u24_20:
  1229  00CC                     	line	15
  1230                           	
  1231                           i1l826:	
  1232  00CC                     	clrf	(___lwdiv@counter)
  1233  00CC  01FD               	incf	(___lwdiv@counter),f
  1234  00CD  0AFD               	line	16
  1235                           	goto	i1l832
  1236  00CE  28DB               	
  1237                           i1l366:	
  1238  00CF                     	line	17
  1239                           	
  1240                           i1l828:	
  1241  00CF                     	movlw	01h
  1242  00CF  3001               	
  1243                           u25_25:
  1244  00D0                     	clrc
  1245  00D0  1003               	rlf	(___lwdiv@divisor),f
  1246  00D1  0DF6               	rlf	(___lwdiv@divisor+1),f
  1247  00D2  0DF7               	addlw	-1
  1248  00D3  3EFF               	skipz
  1249  00D4  1D03               	goto	u25_25
  1250  00D5  28D0               	line	18
  1251                           	
  1252                           i1l830:	
  1253  00D6                     	movlw	low(01h)
  1254  00D6  3001               	movwf	(??___lwdiv+0)+0
  1255  00D7  00FA               	movf	(??___lwdiv+0)+0,w
  1256  00D8  087A               	addwf	(___lwdiv@counter),f
  1257  00D9  07FD               	goto	i1l832
  1258  00DA  28DB               	line	19
  1259                           	
  1260                           i1l365:	
  1261  00DB                     	line	16
  1262                           	
  1263                           i1l832:	
  1264  00DB                     	btfss	(___lwdiv@divisor+1),(15)&7
  1265  00DB  1FF7               	goto	u26_21
  1266  00DC  28DE               	goto	u26_20
  1267  00DD  28DF               u26_21:
  1268  00DE                     	goto	i1l828
  1269  00DE  28CF               u26_20:
  1270  00DF                     	goto	i1l834
  1271  00DF  28E1               	
  1272                           i1l367:	
  1273  00E0                     	goto	i1l834
  1274  00E0  28E1               	line	20
  1275                           	
  1276                           i1l368:	
  1277  00E1                     	line	21
  1278                           	
  1279                           i1l834:	
  1280  00E1                     	movlw	01h
  1281  00E1  3001               	
  1282                           u27_25:
  1283  00E2                     	clrc
  1284  00E2  1003               	rlf	(___lwdiv@quotient),f
  1285  00E3  0DFB               	rlf	(___lwdiv@quotient+1),f
  1286  00E4  0DFC               	addlw	-1
  1287  00E5  3EFF               	skipz
  1288  00E6  1D03               	goto	u27_25
  1289  00E7  28E2               	line	22
  1290                           	movf	(___lwdiv@divisor+1),w
  1291  00E8  0877               	subwf	(___lwdiv@dividend+1),w
  1292  00E9  0279               	skipz
  1293  00EA  1D03               	goto	u28_25
  1294  00EB  28EE               	movf	(___lwdiv@divisor),w
  1295  00EC  0876               	subwf	(___lwdiv@dividend),w
  1296  00ED  0278               u28_25:
  1297  00EE                     	skipc
  1298  00EE  1C03               	goto	u28_21
  1299  00EF  28F1               	goto	u28_20
  1300  00F0  28F2               u28_21:
  1301  00F1                     	goto	i1l840
  1302  00F1  28FA               u28_20:
  1303  00F2                     	line	23
  1304                           	
  1305                           i1l836:	
  1306  00F2                     	movf	(___lwdiv@divisor),w
  1307  00F2  0876               	subwf	(___lwdiv@dividend),f
  1308  00F3  02F8               	movf	(___lwdiv@divisor+1),w
  1309  00F4  0877               	skipc
  1310  00F5  1C03               	decf	(___lwdiv@dividend+1),f
  1311  00F6  03F9               	subwf	(___lwdiv@dividend+1),f
  1312  00F7  02F9               	line	24
  1313                           	
  1314                           i1l838:	
  1315  00F8                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  1316  00F8  147B               	goto	i1l840
  1317  00F9  28FA               	line	25
  1318                           	
  1319                           i1l369:	
  1320  00FA                     	line	26
  1321                           	
  1322                           i1l840:	
  1323  00FA                     	movlw	01h
  1324  00FA  3001               	
  1325                           u29_25:
  1326  00FB                     	clrc
  1327  00FB  1003               	rrf	(___lwdiv@divisor+1),f
  1328  00FC  0CF7               	rrf	(___lwdiv@divisor),f
  1329  00FD  0CF6               	addlw	-1
  1330  00FE  3EFF               	skipz
  1331  00FF  1D03               	goto	u29_25
  1332  0100  28FB               	line	27
  1333                           	
  1334                           i1l842:	
  1335  0101                     	movlw	01h
  1336  0101  3001               	subwf	(___lwdiv@counter),f
  1337  0102  02FD               	btfss	status,2
  1338  0103  1D03               	goto	u30_21
  1339  0104  2906               	goto	u30_20
  1340  0105  2907               u30_21:
  1341  0106                     	goto	i1l834
  1342  0106  28E1               u30_20:
  1343  0107                     	goto	i1l844
  1344  0107  2909               	
  1345                           i1l370:	
  1346  0108                     	goto	i1l844
  1347  0108  2909               	line	28
  1348                           	
  1349                           i1l364:	
  1350  0109                     	line	29
  1351                           	
  1352                           i1l844:	
  1353  0109                     	movf	(___lwdiv@quotient+1),w
  1354  0109  087C               	movwf	(?___lwdiv+1)
  1355  010A  00F7               	movf	(___lwdiv@quotient),w
  1356  010B  087B               	movwf	(?___lwdiv)
  1357  010C  00F6               	goto	i1l371
  1358  010D  290E               	
  1359                           i1l846:	
  1360  010E                     	line	30
  1361                           	
  1362                           i1l371:	
  1363  010E                     	return
  1364  010E  0008               	opt stack 0
  1365                           GLOBAL	__end_of___lwdiv
  1366                           	__end_of___lwdiv:
  1367  010F                     	signat	___lwdiv,8314
  1368                           	global	_TIM0_Callback
  1369                           
  1370 ;; *************** function _TIM0_Callback *****************
  1371 ;; Defined at:
  1372 ;;		line 57 in file "led.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;		None
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;		None
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      void 
  1379 ;; Registers used:
  1380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMMON   BANK0   BANK1
  1386 ;;      Params:         0       0       0
  1387 ;;      Locals:         0       0       0
  1388 ;;      Temps:          2       0       0
  1389 ;;      Totals:         2       0       0
  1390 ;;Total ram usage:        2 bytes
  1391 ;; Hardware stack levels used:    1
  1392 ;; Hardware stack levels required when called:    1
  1393 ;; This function calls:
  1394 ;;		_segchar
  1395 ;; This function is called by:
  1396 ;;		_isr
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  1400                           	file	"led.c"
  1401                           	line	57
  1402                           global __ptext5
  1403                           __ptext5:	;psect for function _TIM0_Callback
  1404  001B                     psect	text5
  1405                           	file	"led.c"
  1406                           	line	57
  1407                           	global	__size_of_TIM0_Callback
  1408                           	__size_of_TIM0_Callback	equ	__end_of_TIM0_Callback-_TIM0_Callback
  1409  0059                     	
  1410                           _TIM0_Callback:	
  1411  001B                     ;incstack = 0
  1412                           	opt	stack 5
  1413                           ; Regs used in _TIM0_Callback: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1414                           	line	59
  1415                           	
  1416                           i1l880:	
  1417  001B                     ;led.c: 59: if(n_count==2)
  1418                           		movlw	2
  1419  001B  3002               	bcf	status, 5	;RP0=0, select bank0
  1420  001C  1283               	xorwf	((_n_count)),w
  1421  001D  0628               	btfss	status,2
  1422  001E  1D03               	goto	u37_21
  1423  001F  2821               	goto	u37_20
  1424  0020  2822               u37_21:
  1425  0021                     	goto	i1l888
  1426  0021  2838               u37_20:
  1427  0022                     	line	61
  1428                           	
  1429                           i1l882:	
  1430  0022                     ;led.c: 60: {;led.c: 61: if(q1>=100)
  1431                           	movlw	0
  1432  0022  3000               	subwf	(_q1+1),w
  1433  0023  0223               	movlw	064h
  1434  0024  3064               	skipnz
  1435  0025  1903               	subwf	(_q1),w
  1436  0026  0222               	skipc
  1437  0027  1C03               	goto	u38_21
  1438  0028  282A               	goto	u38_20
  1439  0029  282B               u38_21:
  1440  002A                     	goto	i1l888
  1441  002A  2838               u38_20:
  1442  002B                     	line	63
  1443                           	
  1444                           i1l884:	
  1445  002B                     ;led.c: 62: {;led.c: 63: PORTAbits.RA1 = 0;
  1446                           	bcf	(5),1	;volatile
  1447  002B  1085               	line	64
  1448                           ;led.c: 64: PORTAbits.RA0 = 0;
  1449                           	bcf	(5),0	;volatile
  1450  002C  1005               	line	65
  1451                           ;led.c: 65: PORTAbits.RA2 = 1;
  1452                           	bsf	(5),2	;volatile
  1453  002D  1505               	line	66
  1454                           	
  1455                           i1l886:	
  1456  002E                     ;led.c: 66: segchar(R3);
  1457                           	movf	(_R3),w
  1458  002E  0825               	movwf	(??_TIM0_Callback+0)+0
  1459  002F  00F2               	clrf	(??_TIM0_Callback+0)+0+1
  1460  0030  01F3               	movf	0+(??_TIM0_Callback+0)+0,w
  1461  0031  0872               	movwf	(segchar@seg)
  1462  0032  00F0               	movf	1+(??_TIM0_Callback+0)+0,w
  1463  0033  0873               	movwf	(segchar@seg+1)
  1464  0034  00F1               	fcall	_segchar
  1465  0035  2150               	goto	i1l888
  1466  0036  2838               	line	67
  1467                           	
  1468                           i1l90:	
  1469  0037                     	goto	i1l888
  1470  0037  2838               	line	68
  1471                           	
  1472                           i1l89:	
  1473  0038                     	line	69
  1474                           	
  1475                           i1l888:	
  1476  0038                     ;led.c: 67: };led.c: 68: };led.c: 69: if(n_count==1)
  1477                           	bcf	status, 5	;RP0=0, select bank0
  1478  0038  1283               		decf	((_n_count)),w
  1479  0039  0328               	btfss	status,2
  1480  003A  1D03               	goto	u39_21
  1481  003B  283D               	goto	u39_20
  1482  003C  283E               u39_21:
  1483  003D                     	goto	i1l896
  1484  003D  2854               u39_20:
  1485  003E                     	line	71
  1486                           	
  1487                           i1l890:	
  1488  003E                     ;led.c: 70: {;led.c: 71: if(q1>=10)
  1489                           	movlw	0
  1490  003E  3000               	subwf	(_q1+1),w
  1491  003F  0223               	movlw	0Ah
  1492  0040  300A               	skipnz
  1493  0041  1903               	subwf	(_q1),w
  1494  0042  0222               	skipc
  1495  0043  1C03               	goto	u40_21
  1496  0044  2846               	goto	u40_20
  1497  0045  2847               u40_21:
  1498  0046                     	goto	i1l896
  1499  0046  2854               u40_20:
  1500  0047                     	line	73
  1501                           	
  1502                           i1l892:	
  1503  0047                     ;led.c: 72: {;led.c: 73: PORTAbits.RA0 = 0;
  1504                           	bcf	(5),0	;volatile
  1505  0047  1005               	line	74
  1506                           ;led.c: 74: PORTAbits.RA2 = 0;
  1507                           	bcf	(5),2	;volatile
  1508  0048  1105               	line	75
  1509                           ;led.c: 75: PORTAbits.RA1 = 1;
  1510                           	bsf	(5),1	;volatile
  1511  0049  1485               	line	76
  1512                           	
  1513                           i1l894:	
  1514  004A                     ;led.c: 76: segchar(R2);
  1515                           	movf	(_R2),w
  1516  004A  0826               	movwf	(??_TIM0_Callback+0)+0
  1517  004B  00F2               	clrf	(??_TIM0_Callback+0)+0+1
  1518  004C  01F3               	movf	0+(??_TIM0_Callback+0)+0,w
  1519  004D  0872               	movwf	(segchar@seg)
  1520  004E  00F0               	movf	1+(??_TIM0_Callback+0)+0,w
  1521  004F  0873               	movwf	(segchar@seg+1)
  1522  0050  00F1               	fcall	_segchar
  1523  0051  2150               	goto	i1l896
  1524  0052  2854               	line	77
  1525                           	
  1526                           i1l92:	
  1527  0053                     	goto	i1l896
  1528  0053  2854               	line	78
  1529                           	
  1530                           i1l91:	
  1531  0054                     	line	79
  1532                           	
  1533                           i1l896:	
  1534  0054                     ;led.c: 77: };led.c: 78: };led.c: 79: if(n_count==0)
  1535                           	bcf	status, 5	;RP0=0, select bank0
  1536  0054  1283               	movf	((_n_count)),w
  1537  0055  0828               	btfss	status,2
  1538  0056  1D03               	goto	u41_21
  1539  0057  2859               	goto	u41_20
  1540  0058  285A               u41_21:
  1541  0059                     	goto	i1l902
  1542  0059  2866               u41_20:
  1543  005A                     	line	81
  1544                           	
  1545                           i1l898:	
  1546  005A                     ;led.c: 80: {;led.c: 81: PORTAbits.RA2 = 0;
  1547                           	bcf	(5),2	;volatile
  1548  005A  1105               	line	82
  1549                           ;led.c: 82: PORTAbits.RA1 = 0;
  1550                           	bcf	(5),1	;volatile
  1551  005B  1085               	line	83
  1552                           ;led.c: 83: PORTAbits.RA0 = 1;
  1553                           	bsf	(5),0	;volatile
  1554  005C  1405               	line	84
  1555                           	
  1556                           i1l900:	
  1557  005D                     ;led.c: 84: segchar(R1);
  1558                           	movf	(_R1),w
  1559  005D  0827               	movwf	(??_TIM0_Callback+0)+0
  1560  005E  00F2               	clrf	(??_TIM0_Callback+0)+0+1
  1561  005F  01F3               	movf	0+(??_TIM0_Callback+0)+0,w
  1562  0060  0872               	movwf	(segchar@seg)
  1563  0061  00F0               	movf	1+(??_TIM0_Callback+0)+0,w
  1564  0062  0873               	movwf	(segchar@seg+1)
  1565  0063  00F1               	fcall	_segchar
  1566  0064  2150               	goto	i1l902
  1567  0065  2866               	line	85
  1568                           	
  1569                           i1l93:	
  1570  0066                     	line	89
  1571                           	
  1572                           i1l902:	
  1573  0066                     ;led.c: 85: };led.c: 89: n_count++;
  1574                           	movlw	low(01h)
  1575  0066  3001               	movwf	(??_TIM0_Callback+0)+0
  1576  0067  00F2               	movf	(??_TIM0_Callback+0)+0,w
  1577  0068  0872               	bcf	status, 5	;RP0=0, select bank0
  1578  0069  1283               	addwf	(_n_count),f
  1579  006A  07A8               	line	90
  1580                           	
  1581                           i1l904:	
  1582  006B                     ;led.c: 90: if (n_count>2) n_count=0;
  1583                           	movlw	low(03h)
  1584  006B  3003               	subwf	(_n_count),w
  1585  006C  0228               	skipc
  1586  006D  1C03               	goto	u42_21
  1587  006E  2870               	goto	u42_20
  1588  006F  2871               u42_21:
  1589  0070                     	goto	i1l95
  1590  0070  2873               u42_20:
  1591  0071                     	
  1592                           i1l906:	
  1593  0071                     	clrf	(_n_count)
  1594  0071  01A8               	goto	i1l95
  1595  0072  2873               	
  1596                           i1l94:	
  1597  0073                     	line	91
  1598                           	
  1599                           i1l95:	
  1600  0073                     	return
  1601  0073  0008               	opt stack 0
  1602                           GLOBAL	__end_of_TIM0_Callback
  1603                           	__end_of_TIM0_Callback:
  1604  0074                     	signat	_TIM0_Callback,89
  1605                           	global	_segchar
  1606                           
  1607 ;; *************** function _segchar *****************
  1608 ;; Defined at:
  1609 ;;		line 9 in file "led.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;  seg             2    0[COMMON] unsigned int 
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;		None
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMMON   BANK0   BANK1
  1623 ;;      Params:         2       0       0
  1624 ;;      Locals:         0       0       0
  1625 ;;      Temps:          0       0       0
  1626 ;;      Totals:         2       0       0
  1627 ;;Total ram usage:        2 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; This function calls:
  1630 ;;		Nothing
  1631 ;; This function is called by:
  1632 ;;		_TIM0_Callback
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  1636                           	line	9
  1637                           global __ptext6
  1638                           __ptext6:	;psect for function _segchar
  1639  0150                     psect	text6
  1640                           	file	"led.c"
  1641                           	line	9
  1642                           	global	__size_of_segchar
  1643                           	__size_of_segchar	equ	__end_of_segchar-_segchar
  1644  003B                     	
  1645                           _segchar:	
  1646  0150                     ;incstack = 0
  1647                           	opt	stack 5
  1648                           ; Regs used in _segchar: [wreg-fsr0h+status,2+status,0]
  1649                           	line	11
  1650                           	
  1651                           i1l788:	
  1652  0150                     ;led.c: 11: switch (seg)
  1653                           	goto	i1l812
  1654  0150  297A               	line	13
  1655                           ;led.c: 12: {;led.c: 13: case 1:
  1656                           	
  1657                           i1l72:	
  1658  0151                     	line	14
  1659                           	
  1660                           i1l790:	
  1661  0151                     ;led.c: 14: PORTB = 0b01100000;
  1662                           	movlw	low(060h)
  1663  0151  3060               	bcf	status, 5	;RP0=0, select bank0
  1664  0152  1283               	movwf	(6)	;volatile
  1665  0153  0086               	line	15
  1666                           ;led.c: 15: break;
  1667                           	goto	i1l83
  1668  0154  298A               	line	16
  1669                           ;led.c: 16: case 2:
  1670                           	
  1671                           i1l74:	
  1672  0155                     	line	17
  1673                           	
  1674                           i1l792:	
  1675  0155                     ;led.c: 17: PORTB = 0b11011010;
  1676                           	movlw	low(0DAh)
  1677  0155  30DA               	bcf	status, 5	;RP0=0, select bank0
  1678  0156  1283               	movwf	(6)	;volatile
  1679  0157  0086               	line	18
  1680                           ;led.c: 18: break;
  1681                           	goto	i1l83
  1682  0158  298A               	line	19
  1683                           ;led.c: 19: case 3:
  1684                           	
  1685                           i1l75:	
  1686  0159                     	line	20
  1687                           	
  1688                           i1l794:	
  1689  0159                     ;led.c: 20: PORTB = 0b11110010;
  1690                           	movlw	low(0F2h)
  1691  0159  30F2               	bcf	status, 5	;RP0=0, select bank0
  1692  015A  1283               	movwf	(6)	;volatile
  1693  015B  0086               	line	21
  1694                           ;led.c: 21: break;
  1695                           	goto	i1l83
  1696  015C  298A               	line	22
  1697                           ;led.c: 22: case 4:
  1698                           	
  1699                           i1l76:	
  1700  015D                     	line	23
  1701                           	
  1702                           i1l796:	
  1703  015D                     ;led.c: 23: PORTB = 0b01100110;
  1704                           	movlw	low(066h)
  1705  015D  3066               	bcf	status, 5	;RP0=0, select bank0
  1706  015E  1283               	movwf	(6)	;volatile
  1707  015F  0086               	line	24
  1708                           ;led.c: 24: break;
  1709                           	goto	i1l83
  1710  0160  298A               	line	25
  1711                           ;led.c: 25: case 5:
  1712                           	
  1713                           i1l77:	
  1714  0161                     	line	26
  1715                           	
  1716                           i1l798:	
  1717  0161                     ;led.c: 26: PORTB = 0b10110110;
  1718                           	movlw	low(0B6h)
  1719  0161  30B6               	bcf	status, 5	;RP0=0, select bank0
  1720  0162  1283               	movwf	(6)	;volatile
  1721  0163  0086               	line	27
  1722                           ;led.c: 27: break;
  1723                           	goto	i1l83
  1724  0164  298A               	line	28
  1725                           ;led.c: 28: case 6:
  1726                           	
  1727                           i1l78:	
  1728  0165                     	line	29
  1729                           	
  1730                           i1l800:	
  1731  0165                     ;led.c: 29: PORTB = 0b10111110;
  1732                           	movlw	low(0BEh)
  1733  0165  30BE               	bcf	status, 5	;RP0=0, select bank0
  1734  0166  1283               	movwf	(6)	;volatile
  1735  0167  0086               	line	30
  1736                           ;led.c: 30: break;
  1737                           	goto	i1l83
  1738  0168  298A               	line	31
  1739                           ;led.c: 31: case 7:
  1740                           	
  1741                           i1l79:	
  1742  0169                     	line	32
  1743                           	
  1744                           i1l802:	
  1745  0169                     ;led.c: 32: PORTB = 0b11100000;
  1746                           	movlw	low(0E0h)
  1747  0169  30E0               	bcf	status, 5	;RP0=0, select bank0
  1748  016A  1283               	movwf	(6)	;volatile
  1749  016B  0086               	line	33
  1750                           ;led.c: 33: break;
  1751                           	goto	i1l83
  1752  016C  298A               	line	34
  1753                           ;led.c: 34: case 8:
  1754                           	
  1755                           i1l80:	
  1756  016D                     	line	35
  1757                           	
  1758                           i1l804:	
  1759  016D                     ;led.c: 35: PORTB = 0b11111110;
  1760                           	movlw	low(0FEh)
  1761  016D  30FE               	bcf	status, 5	;RP0=0, select bank0
  1762  016E  1283               	movwf	(6)	;volatile
  1763  016F  0086               	line	36
  1764                           ;led.c: 36: break;
  1765                           	goto	i1l83
  1766  0170  298A               	line	37
  1767                           ;led.c: 37: case 9:
  1768                           	
  1769                           i1l81:	
  1770  0171                     	line	38
  1771                           	
  1772                           i1l806:	
  1773  0171                     ;led.c: 38: PORTB = 0b11110110;
  1774                           	movlw	low(0F6h)
  1775  0171  30F6               	bcf	status, 5	;RP0=0, select bank0
  1776  0172  1283               	movwf	(6)	;volatile
  1777  0173  0086               	line	39
  1778                           ;led.c: 39: break;
  1779                           	goto	i1l83
  1780  0174  298A               	line	40
  1781                           ;led.c: 40: case 0:
  1782                           	
  1783                           i1l82:	
  1784  0175                     	line	41
  1785                           	
  1786                           i1l808:	
  1787  0175                     ;led.c: 41: PORTB = 0b11111100;
  1788                           	movlw	low(0FCh)
  1789  0175  30FC               	bcf	status, 5	;RP0=0, select bank0
  1790  0176  1283               	movwf	(6)	;volatile
  1791  0177  0086               	line	42
  1792                           ;led.c: 42: break;
  1793                           	goto	i1l83
  1794  0178  298A               	line	43
  1795                           	
  1796                           i1l810:	
  1797  0179                     ;led.c: 43: }
  1798                           	goto	i1l83
  1799  0179  298A               	line	11
  1800                           	
  1801                           i1l71:	
  1802  017A                     	
  1803                           i1l812:	
  1804  017A                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  1805                           ; Switch size 1, requested type "space"
  1806                           ; Number of cases is 1, Range of values is 0 to 0
  1807                           ; switch strategies available:
  1808                           ; Name         Instructions Cycles
  1809                           ; simple_byte            4     3 (average)
  1810                           ; direct_byte            7     6 (fixed)
  1811                           ; jumptable            260     6 (fixed)
  1812                           ;	Chosen strategy is simple_byte
  1813                           
  1814                           	movf (segchar@seg+1),w
  1815  017A  0871               	opt asmopt_push
  1816                           	opt asmopt_off
  1817                           	xorlw	0^0	; case 0
  1818  017B  3A00               	skipnz
  1819  017C  1903               	goto	i1l990
  1820  017D  297F               	goto	i1l83
  1821  017E  298A               	opt asmopt_pop
  1822                           	
  1823                           i1l990:	
  1824  017F                     ; Switch size 1, requested type "space"
  1825                           ; Number of cases is 10, Range of values is 0 to 9
  1826                           ; switch strategies available:
  1827                           ; Name         Instructions Cycles
  1828                           ; direct_byte           16     6 (fixed)
  1829                           ; simple_byte           31    16 (average)
  1830                           ; jumptable            260     6 (fixed)
  1831                           ;	Chosen strategy is direct_byte
  1832                           
  1833                           	movf (segchar@seg),w
  1834  017F  0870               	movwf fsr
  1835  0180  0084               	movlw	10
  1836  0181  300A               	subwf	fsr,w
  1837  0182  0204               skipnc
  1838  0183  1803               goto i1l83
  1839  0184  298A               movlw high(i1S992)
  1840  0185  3001               movwf pclath
  1841  0186  008A               	movlw low(i1S992)
  1842  0187  30E3               	addwf fsr,w
  1843  0188  0704               	movwf pc
  1844  0189  0082               psect	swtext1,local,class=CONST,delta=2
  1845                           global __pswtext1
  1846                           __pswtext1:
  1847  01E3                     i1S992:
  1848  01E3                     	ljmp	i1l808
  1849  01E3  2975               	ljmp	i1l790
  1850  01E4  2951               	ljmp	i1l792
  1851  01E5  2955               	ljmp	i1l794
  1852  01E6  2959               	ljmp	i1l796
  1853  01E7  295D               	ljmp	i1l798
  1854  01E8  2961               	ljmp	i1l800
  1855  01E9  2965               	ljmp	i1l802
  1856  01EA  2969               	ljmp	i1l804
  1857  01EB  296D               	ljmp	i1l806
  1858  01EC  2971               psect	text6
  1859                           
  1860                           	line	43
  1861                           	
  1862                           i1l73:	
  1863  018A                     	line	44
  1864                           	
  1865                           i1l83:	
  1866  018A                     	return
  1867  018A  0008               	opt stack 0
  1868                           GLOBAL	__end_of_segchar
  1869                           	__end_of_segchar:
  1870  018B                     	signat	_segchar,4217
  1871                           global	___latbits
  1872                           ___latbits	equ	0
  1873  0000                     	global	btemp
  1874                           	btemp set 07Eh
  1875  007E                     
  1876                           	DABS	1,126,2	;btemp
  1877                           	global	wtemp0
  1878                           	wtemp0 set btemp+0
  1879  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      7      19
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _ledprint->___lwdiv
    ___lwdiv->___lwmod
    _TIM0_Callback->_segchar

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_ledprint

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  3     3      0    1669
                                              3 BANK0      3     3      0
                      _TIM0_Callback
                           _ledprint
 ---------------------------------------------------------------------------------
 (2) _ledprint                                             3     1      2    1419
                                              0 BANK0      3     1      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     767
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _TIM0_Callback                                        2     2      0     250
                                              2 COMMON     2     2      0
                            _segchar
 ---------------------------------------------------------------------------------
 (3) _segchar                                              2     0      2     250
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)
   _TIM0_Callback
     _segchar
   _ledprint
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      7      13       4       23.8%
BANK1               20      0       0       5        0.0%
ABS                  0      0      21       6        0.0%
BITBANK1            20      0       0       7        0.0%
DATA                 0      0      21       8        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Tue Jun 30 16:57:57 2020

             __CFG_CP$ON 0000                        _u 0031                        pc 0002  
                     l50 01C1                       l45 019F                       l46 01AB  
                     l47 01BF                       l48 01C0                       l49 01C1  
                     _R1 0027                       _R2 0026                       _R3 0025  
                     _R4 0024                       _q1 0022                       _q2 0020  
                     _fl 0029                       fsr 0004    __end_of_TIM0_Callback 0074  
                    l930 0190                      l940 019F                      l932 0195  
                    l942 01A3                      l934 0198                      l926 018B  
                    l944 01AA                      l936 019A                      l928 018D  
                    l946 01AB                      l938 019D                      l948 01B8  
                    u450 01A9                      u451 01A8                      u460 01BE  
                    u461 01BD                      u477 01AE                      _isr 01C2  
                    fsr0 0004             __CFG_FOSC$HS 0000                     ?_isr 0070  
                   _T0IF 005A                     _INTF 0059                     i1l40 01D9  
                   i1l38 01D2                     i1l71 017A                     i1l39 01D9  
                   i1l80 016D                     i1l72 0151                     i1l73 018A  
                   i1l81 0171                     i1l82 0175                     i1l74 0155  
                   i1l90 0037                     i1l75 0159                     i1l83 018A  
                   i1l91 0054                     i1l76 015D                     i1l92 0053  
                   i1l77 0161                     i1l93 0066                     i1l78 0165  
                   i1l94 0073                     i1l86 00C3                     i1l79 0169  
                   i1l95 0073                     i1l89 0038                     _TMR0 0001  
                   _main 018B                     btemp 007E                     start 000D  
                  ??_isr 002D                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  i1S992 01E3          __end_of___lwdiv 010F          __end_of___lwmod 0150  
                  i1l370 0108                    i1l371 010E                    i1l364 0109  
                  i1l380 0149                    i1l365 00DB                    i1l381 014F  
                  i1l366 00CF                    i1l374 014A                    i1l367 00E0  
                  i1l375 0124                    i1l800 0165                    i1l368 00E1  
                  i1l376 0118                    i1l369 00FA                    i1l377 0129  
                  i1l810 0179                    i1l802 0169                    i1l378 012A  
                  i1l379 013B                    i1l804 016D                    i1l812 017A  
                  i1l900 005D                    i1l806 0171                    i1l902 0066  
                  i1l830 00D6                    i1l822 00C4                    i1l808 0175  
                  i1l904 006B                    i1l840 00FA                    i1l832 00DB  
                  i1l824 00C6                    i1l920 01D2                    i1l912 01C2  
                  i1l906 0071                    i1l842 0101                    i1l834 00E1  
                  i1l826 00CC                    i1l850 0115                    i1l922 01D6  
                  i1l914 01C6                    i1l836 00F2                    i1l828 00CF  
                  i1l844 0109                    i1l860 0134                    i1l852 0118  
                  i1l924 01D7                    i1l916 01CB                    i1l790 0151  
                  i1l846 010E                    i1l838 00F8                    i1l862 013B  
                  i1l854 011F                    i1l870 0074                    i1l918 01D0  
                  i1l792 0155                    i1l880 001B                    i1l864 0142  
                  i1l856 0124                    i1l848 010F                    i1l872 0079  
                  i1l794 0159                    i1l890 003E                    i1l882 0022  
                  i1l858 012A                    i1l866 014A                    i1l874 0087  
                  i1l796 015D                    i1l788 0150                    i1l892 0047  
                  i1l884 002B                    i1l868 014F                    i1l876 0095  
                  i1l990 017F                    i1l798 0161                    i1l894 004A  
                  i1l886 002E                    i1l878 00AC                    i1l896 0054  
                  i1l888 0038                    i1l898 005A                    u30_20 0107  
                  u30_21 0106                    u31_20 0115                    u31_21 0114  
                  u40_20 0047                    u24_20 00CC                    u40_21 0046  
                  u24_21 00CB                    u32_25 0119                    u41_20 005A  
                  u33_20 0128                    u41_21 0059                    u33_21 0127  
                  u25_25 00D0                    u42_20 0071                    u26_20 00DF  
                  u34_20 0134                    u42_21 0070                    u26_21 00DE  
                  u34_21 0133                    u34_25 0130                    u43_20 01C6  
                  u43_21 01C5                    _PORTA 0005                    _PORTB 0006  
                  u27_25 00E2                    u35_25 013C                    u28_20 00F2  
                  u36_20 0148                    u44_20 01D6                    u28_21 00F1  
                  u36_21 0147                    u44_21 01D5                    u28_25 00EE  
                  u37_20 0022                    u37_21 0021                    u29_25 00FB  
                  u38_20 002B                    u38_21 002A                    u39_20 003E  
                  u39_21 003D                    _TRISA 0085                    _TRISB 0086  
         __CFG_BODENV$40 0000          __end_of_segchar 018B           __CFG_BOREN$OFF 0000  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000E             __end_of_main 01C2                   ??_main 0030  
                 _INTCON 000B           __CFG_PWRTE$OFF 0000           ledprint@number 002A  
       __end_of_ledprint 00C4                ??___lwdiv 007A                ??___lwmod 0074  
              ??_segchar 0072                   saved_w 007E  __end_of__initialization 0019  
         __pcstackCOMMON 0070               __pbssBANK0 0020               __pmaintext 018B  
             __pintentry 0004                  _ECCPAS2 00CE                ?_ledprint 002A  
 __size_of_TIM0_Callback 0059                  ___lwdiv 00C4                  ___lwmod 010F  
                __ptext1 01C2                  __ptext2 0074                  __ptext3 010F  
                __ptext4 00C4                  __ptext5 001B                  __ptext6 0150  
                _n_count 0028             __size_of_isr 0021                  _segchar 0150  
   end_of_initialization 0019               ??_ledprint 002C                _PORTAbits 0005  
          _TIM0_Callback 001B           ?_TIM0_Callback 0070      start_initialization 000E  
            __end_of_isr 01E3                ___latbits 0000            __pcstackBANK0 002A  
              __pnvBANK0 0031        __size_of_ledprint 0050               segchar@seg 0070  
       ___lwdiv@dividend 0078                 ?___lwdiv 0076                 ?___lwmod 0070  
        ??_TIM0_Callback 0072                __pswtext1 01E3                 ?_segchar 0070  
       ___lwdiv@quotient 007B        interrupt_function 0004         __size_of___lwdiv 004B  
       __size_of___lwmod 0041          ___lwdiv@divisor 0076         __size_of_segchar 003B  
        ___lwdiv@counter 007D                 _ledprint 0074            __size_of_main 0037  
               intlevel1 0000         ___lwmod@dividend 0072               _OPTION_REG 0081  
        ___lwmod@divisor 0070          ___lwmod@counter 0075  
