

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Dec 29 06:11:07 2021

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC12F675 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 200 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 220 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
    98                           GPIO equ 05h ;# 
    99  0005                     # 308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   100                           PCLATH equ 0Ah ;# 
   101  000A                     # 328 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   102                           INTCON equ 0Bh ;# 
   103  000B                     # 406 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   104                           PIR1 equ 0Ch ;# 
   105  000C                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   106                           TMR1 equ 0Eh ;# 
   107  000E                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   108                           TMR1L equ 0Eh ;# 
   109  000E                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   110                           TMR1H equ 0Fh ;# 
   111  000F                     # 501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   112                           T1CON equ 010h ;# 
   113  0010                     # 566 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   114                           CMCON equ 019h ;# 
   115  0019                     # 625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   116                           ADRESH equ 01Eh ;# 
   117  001E                     # 645 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   118                           ADCON0 equ 01Fh ;# 
   119  001F                     # 729 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   120                           OPTION_REG equ 081h ;# 
   121  0081                     # 799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   122                           TRISIO equ 085h ;# 
   123  0085                     # 849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   124                           PIE1 equ 08Ch ;# 
   125  008C                     # 897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   126                           PCON equ 08Eh ;# 
   127  008E                     # 931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   128                           OSCCAL equ 090h ;# 
   129  0090                     # 991 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   130                           WPU equ 095h ;# 
   131  0095                     # 1036 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   132                           IOC equ 096h ;# 
   133  0096                     # 1041 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   134                           IOCB equ 096h ;# 
   135  0096                     # 1210 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   136                           VRCON equ 099h ;# 
   137  0099                     # 1270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   138                           EEDATA equ 09Ah ;# 
   139  009A                     # 1275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   140                           EEDAT equ 09Ah ;# 
   141  009A                     # 1308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   142                           EEADR equ 09Bh ;# 
   143  009B                     # 1328 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   144                           EECON1 equ 09Ch ;# 
   145  009C                     # 1366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   146                           EECON2 equ 09Dh ;# 
   147  009D                     # 1386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   148                           ADRESL equ 09Eh ;# 
   149  009E                     # 1406 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   150                           ANSEL equ 09Fh ;# 
   151  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   152                           INDF equ 00h ;# 
   153  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   154                           TMR0 equ 01h ;# 
   155  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   156                           PCL equ 02h ;# 
   157  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   158                           STATUS equ 03h ;# 
   159  0003                     # 200 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   160                           FSR equ 04h ;# 
   161  0004                     # 220 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   162                           GPIO equ 05h ;# 
   163  0005                     # 308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   164                           PCLATH equ 0Ah ;# 
   165  000A                     # 328 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   166                           INTCON equ 0Bh ;# 
   167  000B                     # 406 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   168                           PIR1 equ 0Ch ;# 
   169  000C                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   170                           TMR1 equ 0Eh ;# 
   171  000E                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   172                           TMR1L equ 0Eh ;# 
   173  000E                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   174                           TMR1H equ 0Fh ;# 
   175  000F                     # 501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   176                           T1CON equ 010h ;# 
   177  0010                     # 566 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   178                           CMCON equ 019h ;# 
   179  0019                     # 625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   180                           ADRESH equ 01Eh ;# 
   181  001E                     # 645 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   182                           ADCON0 equ 01Fh ;# 
   183  001F                     # 729 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   184                           OPTION_REG equ 081h ;# 
   185  0081                     # 799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   186                           TRISIO equ 085h ;# 
   187  0085                     # 849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   188                           PIE1 equ 08Ch ;# 
   189  008C                     # 897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   190                           PCON equ 08Eh ;# 
   191  008E                     # 931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   192                           OSCCAL equ 090h ;# 
   193  0090                     # 991 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   194                           WPU equ 095h ;# 
   195  0095                     # 1036 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   196                           IOC equ 096h ;# 
   197  0096                     # 1041 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   198                           IOCB equ 096h ;# 
   199  0096                     # 1210 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   200                           VRCON equ 099h ;# 
   201  0099                     # 1270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   202                           EEDATA equ 09Ah ;# 
   203  009A                     # 1275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   204                           EEDAT equ 09Ah ;# 
   205  009A                     # 1308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   206                           EEADR equ 09Bh ;# 
   207  009B                     # 1328 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   208                           EECON1 equ 09Ch ;# 
   209  009C                     # 1366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   210                           EECON2 equ 09Dh ;# 
   211  009D                     # 1386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   212                           ADRESL equ 09Eh ;# 
   213  009E                     # 1406 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   214                           ANSEL equ 09Fh ;# 
   215  009F                     	FNCALL	_main,_ADC
   216                           	FNCALL	_main,_ADC1
   217                           	FNCALL	_main,_commandd
   218                           	FNCALL	_commandd,_bit0
   219                           	FNCALL	_commandd,_bit1
   220                           	FNCALL	_commandd,_ms2_4And0_6ms
   221                           	FNROOT	_main
   222                           	global	_codeAddressPlus
   223                           	global	_codeAddress
   224                           	global	_codeCommand
   225                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
   226                           global __pidataBANK0
   227                           __pidataBANK0:
   228  0077                     	file	"SonyCrBt.c"
   229                           	line	16
   230                           
   231                           ;initializer for _codeAddressPlus
   232                           	retlw	050h
   233  0077  3450               	line	15
   234                           
   235                           ;initializer for _codeAddress
   236                           	retlw	0B5h
   237  0078  34B5               	line	14
   238                           
   239                           ;initializer for _codeCommand
   240                           	retlw	050h
   241  0079  3450               	global	_volt
   242                           	global	_i
   243                           	global	_loopBit
   244                           	global	_INTCON
   245                           _INTCON	set	0xB
   246  000B                     	global	_ADCON0
   247                           _ADCON0	set	0x1F
   248  001F                     	global	_CMCON
   249                           _CMCON	set	0x19
   250  0019                     	global	_ADRESH
   251                           _ADRESH	set	0x1E
   252  001E                     	global	_GO_DONE
   253                           _GO_DONE	set	0xF9
   254  00F9                     	global	_ADON
   255                           _ADON	set	0xF8
   256  00F8                     	global	_GP2
   257                           _GP2	set	0x2A
   258  002A                     	global	_PIE1bits
   259                           _PIE1bits	set	0x8C
   260  008C                     	global	_OPTION_REG
   261                           _OPTION_REG	set	0x81
   262  0081                     	global	_ANSEL
   263                           _ANSEL	set	0x9F
   264  009F                     	global	_TRISIO
   265                           _TRISIO	set	0x85
   266  0085                     ; #config settings
   267                           global __CFG_FOSC$INTRCIO
   268                           __CFG_FOSC$INTRCIO equ 0x0
   269  0000                     global __CFG_WDTE$OFF
   270                           __CFG_WDTE$OFF equ 0x0
   271  0000                     global __CFG_PWRTE$OFF
   272                           __CFG_PWRTE$OFF equ 0x0
   273  0000                     global __CFG_MCLRE$OFF
   274                           __CFG_MCLRE$OFF equ 0x0
   275  0000                     global __CFG_BOREN$OFF
   276                           __CFG_BOREN$OFF equ 0x0
   277  0000                     global __CFG_CP$ON
   278                           __CFG_CP$ON equ 0x0
   279  0000                     global __CFG_CPD$ON
   280                           __CFG_CPD$ON equ 0x0
   281  0000                     	file	"C:\Users\User\AppData\Local\Temp\so4."
   282                           	line	#
   283                           psect cinit,class=CODE,delta=2
   284                           global start_initialization
   285                           start_initialization:
   286  03F2                     
   287                           global __initialization
   288                           __initialization:
   289  03F2                     psect	bssBANK0,class=BANK0,space=1,noexec
   290                           global __pbssBANK0
   291                           __pbssBANK0:
   292  0026                     _volt:
   293  0026                            ds      2
   294  0026                     
   295                           _i:
   296  0028                            ds      2
   297  0028                     
   298                           _loopBit:
   299  002A                            ds      1
   300  002A                     
   301                           psect	dataBANK0,class=BANK0,space=1,noexec
   302                           global __pdataBANK0
   303                           __pdataBANK0:
   304  002B                     	file	"SonyCrBt.c"
   305                           	line	16
   306                           _codeAddressPlus:
   307  002B                            ds      1
   308  002B                     
   309                           psect	dataBANK0
   310                           	file	"SonyCrBt.c"
   311                           	line	15
   312                           _codeAddress:
   313  002C                            ds      1
   314  002C                     
   315                           psect	dataBANK0
   316                           	file	"SonyCrBt.c"
   317                           	line	14
   318                           _codeCommand:
   319  002D                            ds      1
   320  002D                     
   321                           	file	"C:\Users\User\AppData\Local\Temp\so4."
   322                           	line	#
   323                           ; Initialize objects allocated to BANK0
   324                           	global __pidataBANK0
   325                           psect cinit,class=CODE,delta=2,merge=1
   326                           	fcall	__pidataBANK0+0		;fetch initializer
   327  03F2  2077               	movwf	__pdataBANK0+0&07fh		
   328  03F3  00AB               	fcall	__pidataBANK0+1		;fetch initializer
   329  03F4  2078               	movwf	__pdataBANK0+1&07fh		
   330  03F5  00AC               	fcall	__pidataBANK0+2		;fetch initializer
   331  03F6  2079               	movwf	__pdataBANK0+2&07fh		
   332  03F7  00AD               	line	#
   333                           ; Clear objects allocated to BANK0
   334                           psect cinit,class=CODE,delta=2,merge=1
   335                           	clrf	((__pbssBANK0)+0)&07Fh
   336  03F8  01A6               	clrf	((__pbssBANK0)+1)&07Fh
   337  03F9  01A7               	clrf	((__pbssBANK0)+2)&07Fh
   338  03FA  01A8               	clrf	((__pbssBANK0)+3)&07Fh
   339  03FB  01A9               	clrf	((__pbssBANK0)+4)&07Fh
   340  03FC  01AA               psect cinit,class=CODE,delta=2,merge=1
   341                           global end_of_initialization,__end_of__initialization
   342                           
   343                           ;End of C runtime variable initialization code
   344                           
   345                           end_of_initialization:
   346  03FD                     __end_of__initialization:
   347  03FD                     clrf status
   348  03FD  0183               ljmp _main	;jump to C main() function
   349  03FE  29DC               psect	cstackBANK0,class=BANK0,space=1,noexec
   350                           global __pcstackBANK0
   351                           __pcstackBANK0:
   352  0020                     ?_ms2_4And0_6ms:	; 1 bytes @ 0x0
   353  0020                     ??_ms2_4And0_6ms:	; 1 bytes @ 0x0
   354  0020                     ?_bit1:	; 1 bytes @ 0x0
   355  0020                     ??_bit1:	; 1 bytes @ 0x0
   356  0020                     ?_bit0:	; 1 bytes @ 0x0
   357  0020                     ??_bit0:	; 1 bytes @ 0x0
   358  0020                     ?_ADC:	; 1 bytes @ 0x0
   359  0020                     ??_ADC:	; 1 bytes @ 0x0
   360  0020                     ?_ADC1:	; 1 bytes @ 0x0
   361  0020                     ??_ADC1:	; 1 bytes @ 0x0
   362  0020                     ?_main:	; 1 bytes @ 0x0
   363  0020                     	ds	1
   364  0020                     ?_commandd:	; 1 bytes @ 0x1
   365  0021                     	global	commandd@loopBit2
   366                           commandd@loopBit2:	; 1 bytes @ 0x1
   367  0021                     	ds	1
   368  0021                     	global	commandd@loopBit3
   369                           commandd@loopBit3:	; 1 bytes @ 0x2
   370  0022                     	ds	1
   371  0022                     ??_commandd:	; 1 bytes @ 0x3
   372  0023                     	ds	1
   373  0023                     	global	commandd@loopBit1
   374                           commandd@loopBit1:	; 1 bytes @ 0x4
   375  0024                     	ds	1
   376  0024                     ??_main:	; 1 bytes @ 0x5
   377  0025                     	ds	1
   378  0025                     ;!
   379                           ;!Data Sizes:
   380                           ;!    Strings     0
   381                           ;!    Constant    0
   382                           ;!    Data        3
   383                           ;!    BSS         5
   384                           ;!    Persistent  0
   385                           ;!    Stack       0
   386                           ;!
   387                           ;!Auto Spaces:
   388                           ;!    Space          Size  Autos    Used
   389                           ;!    COMMON            0      0       0
   390                           ;!    BANK0            62      6      14
   391                           
   392                           ;!
   393                           ;!Pointer List with Targets:
   394                           ;!
   395                           ;!    None.
   396                           
   397                           
   398                           ;!
   399                           ;!Critical Paths under _main in COMMON
   400                           ;!
   401                           ;!    None.
   402                           ;!
   403                           ;!Critical Paths under _main in BANK0
   404                           ;!
   405                           ;!    _main->_commandd
   406                           ;!    _commandd->_bit0
   407                           ;!    _commandd->_bit1
   408                           ;!    _commandd->_ms2_4And0_6ms
   409                           
   410 ;;
   411 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   412 ;;
   413                           
   414                           ;!
   415                           ;!Call Graph Tables:
   416                           ;!
   417                           ;! ---------------------------------------------------------------------------------
   418                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   419                           ;! ---------------------------------------------------------------------------------
   420                           ;! (0) _main                                                 1     1      0    1434
   421                           ;!                                              5 BANK0      1     1      0
   422                           ;!                                _ADC
   423                           ;!                               _ADC1
   424                           ;!                           _commandd
   425                           ;! ---------------------------------------------------------------------------------
   426                           ;! (1) _commandd                                             4     2      2    1434
   427                           ;!                                              1 BANK0      4     2      2
   428                           ;!                               _bit0
   429                           ;!                               _bit1
   430                           ;!                      _ms2_4And0_6ms
   431                           ;! ---------------------------------------------------------------------------------
   432                           ;! (2) _ms2_4And0_6ms                                        1     1      0       0
   433                           ;!                                              0 BANK0      1     1      0
   434                           ;! ---------------------------------------------------------------------------------
   435                           ;! (2) _bit1                                                 1     1      0       0
   436                           ;!                                              0 BANK0      1     1      0
   437                           ;! ---------------------------------------------------------------------------------
   438                           ;! (2) _bit0                                                 1     1      0       0
   439                           ;!                                              0 BANK0      1     1      0
   440                           ;! ---------------------------------------------------------------------------------
   441                           ;! (1) _ADC1                                                 2     2      0       0
   442                           ;!                                              0 BANK0      2     2      0
   443                           ;! ---------------------------------------------------------------------------------
   444                           ;! (1) _ADC                                                  2     2      0       0
   445                           ;!                                              0 BANK0      2     2      0
   446                           ;! ---------------------------------------------------------------------------------
   447                           ;! Estimated maximum stack depth 2
   448                           ;! ---------------------------------------------------------------------------------
   449                           ;!
   450                           ;! Call Graph Graphs:
   451                           ;!
   452                           ;! _main (ROOT)
   453                           ;!   _ADC
   454                           ;!   _ADC1
   455                           ;!   _commandd
   456                           ;!     _bit0
   457                           ;!     _bit1
   458                           ;!     _ms2_4And0_6ms
   459                           ;!
   460                           
   461                           ;! Address spaces:
   462                           
   463                           ;!Name               Size   Autos  Total    Cost      Usage
   464                           ;!SFR1                 0      0       0       2        0.0%
   465                           ;!BITSFR1              0      0       0       2        0.0%
   466                           ;!BANK0               3E      6       E       4       22.6%
   467                           ;!BITBANK0            3E      0       0       3        0.0%
   468                           ;!SFR0                 0      0       0       1        0.0%
   469                           ;!BITSFR0              0      0       0       1        0.0%
   470                           ;!COMMON               0      0       0       1        0.0%
   471                           ;!BITCOMMON            0      0       0       0        0.0%
   472                           ;!CODE                 0      0       0       0        0.0%
   473                           ;!DATA                 0      0       E       6        0.0%
   474                           ;!ABS                  0      0       E       5        0.0%
   475                           ;!NULL                 0      0       0       0        0.0%
   476                           ;!STACK                0      0       0       2        0.0%
   477                           ;!EEDATA              80      0       0       0        0.0%
   478                           
   479                           	global	_main
   480                           
   481 ;; *************** function _main *****************
   482 ;; Defined at:
   483 ;;		line 101 in file "SonyCrBt.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;		None
   486 ;; Auto vars:     Size  Location     Type
   487 ;;		None
   488 ;; Return value:  Size  Location     Type
   489 ;;                  1    wreg      void 
   490 ;; Registers used:
   491 ;;		wreg, status,2, status,0, pclath, cstack
   492 ;; Tracked objects:
   493 ;;		On entry : B00/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMMON   BANK0
   497 ;;      Params:         0       0
   498 ;;      Locals:         0       0
   499 ;;      Temps:          0       1
   500 ;;      Totals:         0       1
   501 ;;Total ram usage:        1 bytes
   502 ;; Hardware stack levels required when called:    2
   503 ;; This function calls:
   504 ;;		_ADC
   505 ;;		_ADC1
   506 ;;		_commandd
   507 ;; This function is called by:
   508 ;;		Startup code after reset
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   512                           	file	"SonyCrBt.c"
   513                           	line	101
   514                           global __pmaintext
   515                           __pmaintext:	;psect for function _main
   516  01DC                     psect	maintext
   517                           	file	"SonyCrBt.c"
   518                           	line	101
   519                           	global	__size_of_main
   520                           	__size_of_main	equ	__end_of_main-_main
   521  0216                     	
   522                           _main:	
   523  01DC                     ;incstack = 0
   524                           	opt	stack 6
   525                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   526                           	line	102
   527                           	
   528                           l1005:	
   529  01DC                     ;SonyCrBt.c: 102:             if (volt < 252 && volt > 235) {
   530                           	movlw	low(010h)
   531  01DC  3010               	bsf	status, 5	;RP0=1, select bank1
   532  01DD  1683               	movwf	(133)^080h	;volatile
   533  01DE  0085               	line	103
   534                           ;SonyCrBt.c: 103:                 codeCommand = 0b01001100;
   535                           	movlw	low(07h)
   536  01DF  3007               	bcf	status, 5	;RP0=0, select bank0
   537  01E0  1283               	movwf	(25)	;volatile
   538  01E1  0099               	line	104
   539                           ;SonyCrBt.c: 104:                 codeAddress = 0b01000010;
   540                           	movlw	low(0Ch)
   541  01E2  300C               	movwf	(31)	;volatile
   542  01E3  009F               	line	105
   543                           ;SonyCrBt.c: 105:                 commandd(0, 1, 8);
   544                           	movlw	low(078h)
   545  01E4  3078               	bsf	status, 5	;RP0=1, select bank1
   546  01E5  1683               	movwf	(159)^080h	;volatile
   547  01E6  009F               	line	106
   548                           ;SonyCrBt.c: 106:             }
   549                           	movlw	low(083h)
   550  01E7  3083               	movwf	(129)^080h	;volatile
   551  01E8  0081               	line	107
   552                           ;SonyCrBt.c: 107:         }
   553                           	movlw	low(040h)
   554  01E9  3040               	movwf	(11)	;volatile
   555  01EA  008B               	line	108
   556                           	
   557                           l1007:	
   558  01EB                     ;SonyCrBt.c: 108: 
   559                           	bsf	(140)^080h,6	;volatile
   560  01EB  170C               	goto	l1009
   561  01EC  29ED               	line	110
   562                           ;SonyCrBt.c: 110:             ADC();
   563                           	
   564                           l89:	
   565  01ED                     	line	111
   566                           	
   567                           l1009:	
   568  01ED                     ;SonyCrBt.c: 111:             if (volt < 235 && volt > 210) {
   569                           	fcall	_ADC1
   570  01ED  207A               	line	112
   571                           	
   572                           l1011:	
   573  01EE                     ;SonyCrBt.c: 112:                 codeCommand = 0b00101000;
   574                           	movlw	0
   575  01EE  3000               	bcf	status, 5	;RP0=0, select bank0
   576  01EF  1283               	subwf	(_volt+1),w
   577  01F0  0227               	movlw	0FCh
   578  01F1  30FC               	skipnz
   579  01F2  1903               	subwf	(_volt),w
   580  01F3  0226               	skipnc
   581  01F4  1803               	goto	u831
   582  01F5  29F7               	goto	u830
   583  01F6  29F8               u831:
   584  01F7                     	goto	l1025
   585  01F7  2A27               u830:
   586  01F8                     	
   587                           l1013:	
   588  01F8                     	movlw	0
   589  01F8  3000               	subwf	(_volt+1),w
   590  01F9  0227               	movlw	0ECh
   591  01FA  30EC               	skipnz
   592  01FB  1903               	subwf	(_volt),w
   593  01FC  0226               	skipc
   594  01FD  1C03               	goto	u841
   595  01FE  2A00               	goto	u840
   596  01FF  2A01               u841:
   597  0200                     	goto	l1025
   598  0200  2A27               u840:
   599  0201                     	line	113
   600                           	
   601                           l1015:	
   602  0201                     ;SonyCrBt.c: 113:                 codeAddress = 0b01000010;
   603                           	fcall	_ADC
   604  0201  2095               	line	114
   605                           	
   606                           l1017:	
   607  0202                     ;SonyCrBt.c: 114:                 commandd(0, 1, 8);
   608                           	movlw	0
   609  0202  3000               	bcf	status, 5	;RP0=0, select bank0
   610  0203  1283               	subwf	(_volt+1),w
   611  0204  0227               	movlw	0FCh
   612  0205  30FC               	skipnz
   613  0206  1903               	subwf	(_volt),w
   614  0207  0226               	skipnc
   615  0208  1803               	goto	u851
   616  0209  2A0B               	goto	u850
   617  020A  2A0C               u851:
   618  020B                     	goto	l1025
   619  020B  2A27               u850:
   620  020C                     	
   621                           l1019:	
   622  020C                     	movlw	0
   623  020C  3000               	subwf	(_volt+1),w
   624  020D  0227               	movlw	0ECh
   625  020E  30EC               	skipnz
   626  020F  1903               	subwf	(_volt),w
   627  0210  0226               	skipc
   628  0211  1C03               	goto	u861
   629  0212  2A14               	goto	u860
   630  0213  2A15               u861:
   631  0214                     	goto	l1025
   632  0214  2A27               u860:
   633  0215                     	line	115
   634                           	
   635                           l1021:	
   636  0215                     ;SonyCrBt.c: 115:             }
   637                           	movlw	low(04Ch)
   638  0215  304C               	movwf	(??_main+0)+0
   639  0216  00A5               	movf	(??_main+0)+0,w
   640  0217  0825               	movwf	(_codeCommand)
   641  0218  00AD               	line	116
   642                           ;SonyCrBt.c: 116:         }
   643                           	movlw	low(042h)
   644  0219  3042               	movwf	(??_main+0)+0
   645  021A  00A5               	movf	(??_main+0)+0,w
   646  021B  0825               	movwf	(_codeAddress)
   647  021C  00AC               	line	117
   648                           	
   649                           l1023:	
   650  021D                     ;SonyCrBt.c: 117: 
   651                           	clrf	(commandd@loopBit2)
   652  021D  01A1               	incf	(commandd@loopBit2),f
   653  021E  0AA1               	movlw	low(08h)
   654  021F  3008               	movwf	(??_main+0)+0
   655  0220  00A5               	movf	(??_main+0)+0,w
   656  0221  0825               	movwf	(commandd@loopBit3)
   657  0222  00A2               	movlw	low(0)
   658  0223  3000               	fcall	_commandd
   659  0224  213B               	goto	l1025
   660  0225  2A27               	line	118
   661                           ;SonyCrBt.c: 118:         if (volt < 210 && volt > 200) {
   662                           	
   663                           l91:	
   664  0226                     	goto	l1025
   665  0226  2A27               	line	119
   666                           ;SonyCrBt.c: 119:             ADC();
   667                           	
   668                           l90:	
   669  0227                     	line	121
   670                           	
   671                           l1025:	
   672  0227                     ;SonyCrBt.c: 121:                 codeCommand = 0b10000010;
   673                           	movlw	0
   674  0227  3000               	bcf	status, 5	;RP0=0, select bank0
   675  0228  1283               	subwf	(_volt+1),w
   676  0229  0227               	movlw	0EBh
   677  022A  30EB               	skipnz
   678  022B  1903               	subwf	(_volt),w
   679  022C  0226               	skipnc
   680  022D  1803               	goto	u871
   681  022E  2A30               	goto	u870
   682  022F  2A31               u871:
   683  0230                     	goto	l1039
   684  0230  2A60               u870:
   685  0231                     	
   686                           l1027:	
   687  0231                     	movlw	0
   688  0231  3000               	subwf	(_volt+1),w
   689  0232  0227               	movlw	0D3h
   690  0233  30D3               	skipnz
   691  0234  1903               	subwf	(_volt),w
   692  0235  0226               	skipc
   693  0236  1C03               	goto	u881
   694  0237  2A39               	goto	u880
   695  0238  2A3A               u881:
   696  0239                     	goto	l1039
   697  0239  2A60               u880:
   698  023A                     	line	122
   699                           	
   700                           l1029:	
   701  023A                     ;SonyCrBt.c: 122:                 codeAddress = 0b01000010;
   702                           	fcall	_ADC
   703  023A  2095               	line	123
   704                           	
   705                           l1031:	
   706  023B                     ;SonyCrBt.c: 123:                 codeAddressPlus = 0b00000000;
   707                           	movlw	0
   708  023B  3000               	bcf	status, 5	;RP0=0, select bank0
   709  023C  1283               	subwf	(_volt+1),w
   710  023D  0227               	movlw	0EBh
   711  023E  30EB               	skipnz
   712  023F  1903               	subwf	(_volt),w
   713  0240  0226               	skipnc
   714  0241  1803               	goto	u891
   715  0242  2A44               	goto	u890
   716  0243  2A45               u891:
   717  0244                     	goto	l1039
   718  0244  2A60               u890:
   719  0245                     	
   720                           l1033:	
   721  0245                     	movlw	0
   722  0245  3000               	subwf	(_volt+1),w
   723  0246  0227               	movlw	0D3h
   724  0247  30D3               	skipnz
   725  0248  1903               	subwf	(_volt),w
   726  0249  0226               	skipc
   727  024A  1C03               	goto	u901
   728  024B  2A4D               	goto	u900
   729  024C  2A4E               u901:
   730  024D                     	goto	l1039
   731  024D  2A60               u900:
   732  024E                     	line	124
   733                           	
   734                           l1035:	
   735  024E                     ;SonyCrBt.c: 124:                 commandd(0, 0, 4);
   736                           	movlw	low(028h)
   737  024E  3028               	movwf	(??_main+0)+0
   738  024F  00A5               	movf	(??_main+0)+0,w
   739  0250  0825               	movwf	(_codeCommand)
   740  0251  00AD               	line	125
   741                           ;SonyCrBt.c: 125:             }
   742                           	movlw	low(042h)
   743  0252  3042               	movwf	(??_main+0)+0
   744  0253  00A5               	movf	(??_main+0)+0,w
   745  0254  0825               	movwf	(_codeAddress)
   746  0255  00AC               	line	126
   747                           	
   748                           l1037:	
   749  0256                     ;SonyCrBt.c: 126:         }
   750                           	clrf	(commandd@loopBit2)
   751  0256  01A1               	incf	(commandd@loopBit2),f
   752  0257  0AA1               	movlw	low(08h)
   753  0258  3008               	movwf	(??_main+0)+0
   754  0259  00A5               	movf	(??_main+0)+0,w
   755  025A  0825               	movwf	(commandd@loopBit3)
   756  025B  00A2               	movlw	low(0)
   757  025C  3000               	fcall	_commandd
   758  025D  213B               	goto	l1039
   759  025E  2A60               	line	127
   760                           ;SonyCrBt.c: 127: 
   761                           	
   762                           l93:	
   763  025F                     	goto	l1039
   764  025F  2A60               	line	128
   765                           ;SonyCrBt.c: 128:         if (volt < 200 && volt > 189) {
   766                           	
   767                           l92:	
   768  0260                     	line	130
   769                           	
   770                           l1039:	
   771  0260                     ;SonyCrBt.c: 130:             if (volt < 200 && volt > 189) {
   772                           	movlw	0
   773  0260  3000               	bcf	status, 5	;RP0=0, select bank0
   774  0261  1283               	subwf	(_volt+1),w
   775  0262  0227               	movlw	0D2h
   776  0263  30D2               	skipnz
   777  0264  1903               	subwf	(_volt),w
   778  0265  0226               	skipnc
   779  0266  1803               	goto	u911
   780  0267  2A69               	goto	u910
   781  0268  2A6A               u911:
   782  0269                     	goto	l1055
   783  0269  2A99               u910:
   784  026A                     	
   785                           l1041:	
   786  026A                     	movlw	0
   787  026A  3000               	subwf	(_volt+1),w
   788  026B  0227               	movlw	0C9h
   789  026C  30C9               	skipnz
   790  026D  1903               	subwf	(_volt),w
   791  026E  0226               	skipc
   792  026F  1C03               	goto	u921
   793  0270  2A72               	goto	u920
   794  0271  2A73               u921:
   795  0272                     	goto	l1055
   796  0272  2A99               u920:
   797  0273                     	line	131
   798                           	
   799                           l1043:	
   800  0273                     ;SonyCrBt.c: 131:                 codeCommand = 0b01100010;
   801                           	fcall	_ADC
   802  0273  2095               	line	132
   803                           	
   804                           l1045:	
   805  0274                     ;SonyCrBt.c: 132:                 codeAddress = 0b01000010;
   806                           	movlw	0
   807  0274  3000               	bcf	status, 5	;RP0=0, select bank0
   808  0275  1283               	subwf	(_volt+1),w
   809  0276  0227               	movlw	0D2h
   810  0277  30D2               	skipnz
   811  0278  1903               	subwf	(_volt),w
   812  0279  0226               	skipnc
   813  027A  1803               	goto	u931
   814  027B  2A7D               	goto	u930
   815  027C  2A7E               u931:
   816  027D                     	goto	l1055
   817  027D  2A99               u930:
   818  027E                     	
   819                           l1047:	
   820  027E                     	movlw	0
   821  027E  3000               	subwf	(_volt+1),w
   822  027F  0227               	movlw	0C9h
   823  0280  30C9               	skipnz
   824  0281  1903               	subwf	(_volt),w
   825  0282  0226               	skipc
   826  0283  1C03               	goto	u941
   827  0284  2A86               	goto	u940
   828  0285  2A87               u941:
   829  0286                     	goto	l1055
   830  0286  2A99               u940:
   831  0287                     	line	133
   832                           	
   833                           l1049:	
   834  0287                     ;SonyCrBt.c: 133:                 commandd(0, 1, 8);
   835                           	movlw	low(082h)
   836  0287  3082               	movwf	(??_main+0)+0
   837  0288  00A5               	movf	(??_main+0)+0,w
   838  0289  0825               	movwf	(_codeCommand)
   839  028A  00AD               	line	134
   840                           ;SonyCrBt.c: 134:             }
   841                           	movlw	low(042h)
   842  028B  3042               	movwf	(??_main+0)+0
   843  028C  00A5               	movf	(??_main+0)+0,w
   844  028D  0825               	movwf	(_codeAddress)
   845  028E  00AC               	line	135
   846                           	
   847                           l1051:	
   848  028F                     ;SonyCrBt.c: 135:         }
   849                           	clrf	(_codeAddressPlus)
   850  028F  01AB               	line	136
   851                           	
   852                           l1053:	
   853  0290                     ;SonyCrBt.c: 136: 
   854                           	clrf	(commandd@loopBit2)
   855  0290  01A1               	movlw	low(04h)
   856  0291  3004               	movwf	(??_main+0)+0
   857  0292  00A5               	movf	(??_main+0)+0,w
   858  0293  0825               	movwf	(commandd@loopBit3)
   859  0294  00A2               	movlw	low(0)
   860  0295  3000               	fcall	_commandd
   861  0296  213B               	goto	l1055
   862  0297  2A99               	line	137
   863                           ;SonyCrBt.c: 137:         if (volt < 189 && volt > 175) {
   864                           	
   865                           l95:	
   866  0298                     	goto	l1055
   867  0298  2A99               	line	138
   868                           ;SonyCrBt.c: 138:             ADC();
   869                           	
   870                           l94:	
   871  0299                     	line	140
   872                           	
   873                           l1055:	
   874  0299                     ;SonyCrBt.c: 140:                 codeCommand = 0b10101100;
   875                           	movlw	0
   876  0299  3000               	bcf	status, 5	;RP0=0, select bank0
   877  029A  1283               	subwf	(_volt+1),w
   878  029B  0227               	movlw	0C8h
   879  029C  30C8               	skipnz
   880  029D  1903               	subwf	(_volt),w
   881  029E  0226               	skipnc
   882  029F  1803               	goto	u951
   883  02A0  2AA2               	goto	u950
   884  02A1  2AA3               u951:
   885  02A2                     	goto	l1069
   886  02A2  2AD2               u950:
   887  02A3                     	
   888                           l1057:	
   889  02A3                     	movlw	0
   890  02A3  3000               	subwf	(_volt+1),w
   891  02A4  0227               	movlw	0BEh
   892  02A5  30BE               	skipnz
   893  02A6  1903               	subwf	(_volt),w
   894  02A7  0226               	skipc
   895  02A8  1C03               	goto	u961
   896  02A9  2AAB               	goto	u960
   897  02AA  2AAC               u961:
   898  02AB                     	goto	l1069
   899  02AB  2AD2               u960:
   900  02AC                     	line	141
   901                           	
   902                           l1059:	
   903  02AC                     ;SonyCrBt.c: 141:                 codeAddress = 0b01000010;
   904                           	fcall	_ADC
   905  02AC  2095               	line	142
   906                           	
   907                           l1061:	
   908  02AD                     ;SonyCrBt.c: 142:                 commandd(0, 1, 8);
   909                           	movlw	0
   910  02AD  3000               	bcf	status, 5	;RP0=0, select bank0
   911  02AE  1283               	subwf	(_volt+1),w
   912  02AF  0227               	movlw	0C8h
   913  02B0  30C8               	skipnz
   914  02B1  1903               	subwf	(_volt),w
   915  02B2  0226               	skipnc
   916  02B3  1803               	goto	u971
   917  02B4  2AB6               	goto	u970
   918  02B5  2AB7               u971:
   919  02B6                     	goto	l1069
   920  02B6  2AD2               u970:
   921  02B7                     	
   922                           l1063:	
   923  02B7                     	movlw	0
   924  02B7  3000               	subwf	(_volt+1),w
   925  02B8  0227               	movlw	0BEh
   926  02B9  30BE               	skipnz
   927  02BA  1903               	subwf	(_volt),w
   928  02BB  0226               	skipc
   929  02BC  1C03               	goto	u981
   930  02BD  2ABF               	goto	u980
   931  02BE  2AC0               u981:
   932  02BF                     	goto	l1069
   933  02BF  2AD2               u980:
   934  02C0                     	line	143
   935                           	
   936                           l1065:	
   937  02C0                     ;SonyCrBt.c: 143:             }
   938                           	movlw	low(062h)
   939  02C0  3062               	movwf	(??_main+0)+0
   940  02C1  00A5               	movf	(??_main+0)+0,w
   941  02C2  0825               	movwf	(_codeCommand)
   942  02C3  00AD               	line	144
   943                           ;SonyCrBt.c: 144:         }
   944                           	movlw	low(042h)
   945  02C4  3042               	movwf	(??_main+0)+0
   946  02C5  00A5               	movf	(??_main+0)+0,w
   947  02C6  0825               	movwf	(_codeAddress)
   948  02C7  00AC               	line	145
   949                           	
   950                           l1067:	
   951  02C8                     ;SonyCrBt.c: 145: 
   952                           	clrf	(commandd@loopBit2)
   953  02C8  01A1               	incf	(commandd@loopBit2),f
   954  02C9  0AA1               	movlw	low(08h)
   955  02CA  3008               	movwf	(??_main+0)+0
   956  02CB  00A5               	movf	(??_main+0)+0,w
   957  02CC  0825               	movwf	(commandd@loopBit3)
   958  02CD  00A2               	movlw	low(0)
   959  02CE  3000               	fcall	_commandd
   960  02CF  213B               	goto	l1069
   961  02D0  2AD2               	line	146
   962                           ;SonyCrBt.c: 146:         if (volt < 175 && volt > 163) {
   963                           	
   964                           l97:	
   965  02D1                     	goto	l1069
   966  02D1  2AD2               	line	147
   967                           ;SonyCrBt.c: 147:             ADC();
   968                           	
   969                           l96:	
   970  02D2                     	line	149
   971                           	
   972                           l1069:	
   973  02D2                     ;SonyCrBt.c: 149:                 codeCommand = 0b00101100;
   974                           	movlw	0
   975  02D2  3000               	bcf	status, 5	;RP0=0, select bank0
   976  02D3  1283               	subwf	(_volt+1),w
   977  02D4  0227               	movlw	0BDh
   978  02D5  30BD               	skipnz
   979  02D6  1903               	subwf	(_volt),w
   980  02D7  0226               	skipnc
   981  02D8  1803               	goto	u991
   982  02D9  2ADB               	goto	u990
   983  02DA  2ADC               u991:
   984  02DB                     	goto	l1083
   985  02DB  2B0B               u990:
   986  02DC                     	
   987                           l1071:	
   988  02DC                     	movlw	0
   989  02DC  3000               	subwf	(_volt+1),w
   990  02DD  0227               	movlw	0B0h
   991  02DE  30B0               	skipnz
   992  02DF  1903               	subwf	(_volt),w
   993  02E0  0226               	skipc
   994  02E1  1C03               	goto	u1001
   995  02E2  2AE4               	goto	u1000
   996  02E3  2AE5               u1001:
   997  02E4                     	goto	l1083
   998  02E4  2B0B               u1000:
   999  02E5                     	line	150
  1000                           	
  1001                           l1073:	
  1002  02E5                     ;SonyCrBt.c: 150:                 codeAddress = 0b01000010;
  1003                           	fcall	_ADC
  1004  02E5  2095               	line	151
  1005                           	
  1006                           l1075:	
  1007  02E6                     ;SonyCrBt.c: 151:                 commandd(0, 1, 8);
  1008                           	movlw	0
  1009  02E6  3000               	bcf	status, 5	;RP0=0, select bank0
  1010  02E7  1283               	subwf	(_volt+1),w
  1011  02E8  0227               	movlw	0BDh
  1012  02E9  30BD               	skipnz
  1013  02EA  1903               	subwf	(_volt),w
  1014  02EB  0226               	skipnc
  1015  02EC  1803               	goto	u1011
  1016  02ED  2AEF               	goto	u1010
  1017  02EE  2AF0               u1011:
  1018  02EF                     	goto	l1083
  1019  02EF  2B0B               u1010:
  1020  02F0                     	
  1021                           l1077:	
  1022  02F0                     	movlw	0
  1023  02F0  3000               	subwf	(_volt+1),w
  1024  02F1  0227               	movlw	0B0h
  1025  02F2  30B0               	skipnz
  1026  02F3  1903               	subwf	(_volt),w
  1027  02F4  0226               	skipc
  1028  02F5  1C03               	goto	u1021
  1029  02F6  2AF8               	goto	u1020
  1030  02F7  2AF9               u1021:
  1031  02F8                     	goto	l1083
  1032  02F8  2B0B               u1020:
  1033  02F9                     	line	152
  1034                           	
  1035                           l1079:	
  1036  02F9                     ;SonyCrBt.c: 152:             }
  1037                           	movlw	low(0ACh)
  1038  02F9  30AC               	movwf	(??_main+0)+0
  1039  02FA  00A5               	movf	(??_main+0)+0,w
  1040  02FB  0825               	movwf	(_codeCommand)
  1041  02FC  00AD               	line	153
  1042                           ;SonyCrBt.c: 153:         }
  1043                           	movlw	low(042h)
  1044  02FD  3042               	movwf	(??_main+0)+0
  1045  02FE  00A5               	movf	(??_main+0)+0,w
  1046  02FF  0825               	movwf	(_codeAddress)
  1047  0300  00AC               	line	154
  1048                           	
  1049                           l1081:	
  1050  0301                     ;SonyCrBt.c: 154: 
  1051                           	clrf	(commandd@loopBit2)
  1052  0301  01A1               	incf	(commandd@loopBit2),f
  1053  0302  0AA1               	movlw	low(08h)
  1054  0303  3008               	movwf	(??_main+0)+0
  1055  0304  00A5               	movf	(??_main+0)+0,w
  1056  0305  0825               	movwf	(commandd@loopBit3)
  1057  0306  00A2               	movlw	low(0)
  1058  0307  3000               	fcall	_commandd
  1059  0308  213B               	goto	l1083
  1060  0309  2B0B               	line	155
  1061                           ;SonyCrBt.c: 155:         if (volt < 163 && volt > 148) {
  1062                           	
  1063                           l99:	
  1064  030A                     	goto	l1083
  1065  030A  2B0B               	line	156
  1066                           ;SonyCrBt.c: 156:             ADC();
  1067                           	
  1068                           l98:	
  1069  030B                     	line	158
  1070                           	
  1071                           l1083:	
  1072  030B                     ;SonyCrBt.c: 158:                 codeCommand = 0b11001000;
  1073                           	movlw	0
  1074  030B  3000               	bcf	status, 5	;RP0=0, select bank0
  1075  030C  1283               	subwf	(_volt+1),w
  1076  030D  0227               	movlw	0AFh
  1077  030E  30AF               	skipnz
  1078  030F  1903               	subwf	(_volt),w
  1079  0310  0226               	skipnc
  1080  0311  1803               	goto	u1031
  1081  0312  2B14               	goto	u1030
  1082  0313  2B15               u1031:
  1083  0314                     	goto	l1097
  1084  0314  2B44               u1030:
  1085  0315                     	
  1086                           l1085:	
  1087  0315                     	movlw	0
  1088  0315  3000               	subwf	(_volt+1),w
  1089  0316  0227               	movlw	0A4h
  1090  0317  30A4               	skipnz
  1091  0318  1903               	subwf	(_volt),w
  1092  0319  0226               	skipc
  1093  031A  1C03               	goto	u1041
  1094  031B  2B1D               	goto	u1040
  1095  031C  2B1E               u1041:
  1096  031D                     	goto	l1097
  1097  031D  2B44               u1040:
  1098  031E                     	line	159
  1099                           	
  1100                           l1087:	
  1101  031E                     ;SonyCrBt.c: 159:                 codeAddress = 0b01000010;
  1102                           	fcall	_ADC
  1103  031E  2095               	line	160
  1104                           	
  1105                           l1089:	
  1106  031F                     ;SonyCrBt.c: 160:                 commandd(0, 1, 8);
  1107                           	movlw	0
  1108  031F  3000               	bcf	status, 5	;RP0=0, select bank0
  1109  0320  1283               	subwf	(_volt+1),w
  1110  0321  0227               	movlw	0AFh
  1111  0322  30AF               	skipnz
  1112  0323  1903               	subwf	(_volt),w
  1113  0324  0226               	skipnc
  1114  0325  1803               	goto	u1051
  1115  0326  2B28               	goto	u1050
  1116  0327  2B29               u1051:
  1117  0328                     	goto	l1097
  1118  0328  2B44               u1050:
  1119  0329                     	
  1120                           l1091:	
  1121  0329                     	movlw	0
  1122  0329  3000               	subwf	(_volt+1),w
  1123  032A  0227               	movlw	0A4h
  1124  032B  30A4               	skipnz
  1125  032C  1903               	subwf	(_volt),w
  1126  032D  0226               	skipc
  1127  032E  1C03               	goto	u1061
  1128  032F  2B31               	goto	u1060
  1129  0330  2B32               u1061:
  1130  0331                     	goto	l1097
  1131  0331  2B44               u1060:
  1132  0332                     	line	161
  1133                           	
  1134                           l1093:	
  1135  0332                     ;SonyCrBt.c: 161:             }
  1136                           	movlw	low(02Ch)
  1137  0332  302C               	movwf	(??_main+0)+0
  1138  0333  00A5               	movf	(??_main+0)+0,w
  1139  0334  0825               	movwf	(_codeCommand)
  1140  0335  00AD               	line	162
  1141                           ;SonyCrBt.c: 162:         }
  1142                           	movlw	low(042h)
  1143  0336  3042               	movwf	(??_main+0)+0
  1144  0337  00A5               	movf	(??_main+0)+0,w
  1145  0338  0825               	movwf	(_codeAddress)
  1146  0339  00AC               	line	163
  1147                           	
  1148                           l1095:	
  1149  033A                     ;SonyCrBt.c: 163: 
  1150                           	clrf	(commandd@loopBit2)
  1151  033A  01A1               	incf	(commandd@loopBit2),f
  1152  033B  0AA1               	movlw	low(08h)
  1153  033C  3008               	movwf	(??_main+0)+0
  1154  033D  00A5               	movf	(??_main+0)+0,w
  1155  033E  0825               	movwf	(commandd@loopBit3)
  1156  033F  00A2               	movlw	low(0)
  1157  0340  3000               	fcall	_commandd
  1158  0341  213B               	goto	l1097
  1159  0342  2B44               	line	164
  1160                           ;SonyCrBt.c: 164:         if (volt < 148 && volt > 70) {
  1161                           	
  1162                           l101:	
  1163  0343                     	goto	l1097
  1164  0343  2B44               	line	165
  1165                           ;SonyCrBt.c: 165:             ADC();
  1166                           	
  1167                           l100:	
  1168  0344                     	line	167
  1169                           	
  1170                           l1097:	
  1171  0344                     ;SonyCrBt.c: 167:                 codeCommand = 0b01001000;
  1172                           	movlw	0
  1173  0344  3000               	bcf	status, 5	;RP0=0, select bank0
  1174  0345  1283               	subwf	(_volt+1),w
  1175  0346  0227               	movlw	0A3h
  1176  0347  30A3               	skipnz
  1177  0348  1903               	subwf	(_volt),w
  1178  0349  0226               	skipnc
  1179  034A  1803               	goto	u1071
  1180  034B  2B4D               	goto	u1070
  1181  034C  2B4E               u1071:
  1182  034D                     	goto	l1111
  1183  034D  2B7D               u1070:
  1184  034E                     	
  1185                           l1099:	
  1186  034E                     	movlw	0
  1187  034E  3000               	subwf	(_volt+1),w
  1188  034F  0227               	movlw	095h
  1189  0350  3095               	skipnz
  1190  0351  1903               	subwf	(_volt),w
  1191  0352  0226               	skipc
  1192  0353  1C03               	goto	u1081
  1193  0354  2B56               	goto	u1080
  1194  0355  2B57               u1081:
  1195  0356                     	goto	l1111
  1196  0356  2B7D               u1080:
  1197  0357                     	line	168
  1198                           	
  1199                           l1101:	
  1200  0357                     ;SonyCrBt.c: 168:                 codeAddress = 0b01000010;
  1201                           	fcall	_ADC
  1202  0357  2095               	line	169
  1203                           	
  1204                           l1103:	
  1205  0358                     ;SonyCrBt.c: 169:                 commandd(0, 1, 8);
  1206                           	movlw	0
  1207  0358  3000               	bcf	status, 5	;RP0=0, select bank0
  1208  0359  1283               	subwf	(_volt+1),w
  1209  035A  0227               	movlw	0A3h
  1210  035B  30A3               	skipnz
  1211  035C  1903               	subwf	(_volt),w
  1212  035D  0226               	skipnc
  1213  035E  1803               	goto	u1091
  1214  035F  2B61               	goto	u1090
  1215  0360  2B62               u1091:
  1216  0361                     	goto	l1111
  1217  0361  2B7D               u1090:
  1218  0362                     	
  1219                           l1105:	
  1220  0362                     	movlw	0
  1221  0362  3000               	subwf	(_volt+1),w
  1222  0363  0227               	movlw	095h
  1223  0364  3095               	skipnz
  1224  0365  1903               	subwf	(_volt),w
  1225  0366  0226               	skipc
  1226  0367  1C03               	goto	u1101
  1227  0368  2B6A               	goto	u1100
  1228  0369  2B6B               u1101:
  1229  036A                     	goto	l1111
  1230  036A  2B7D               u1100:
  1231  036B                     	line	170
  1232                           	
  1233                           l1107:	
  1234  036B                     ;SonyCrBt.c: 170:             }
  1235                           	movlw	low(0C8h)
  1236  036B  30C8               	movwf	(??_main+0)+0
  1237  036C  00A5               	movf	(??_main+0)+0,w
  1238  036D  0825               	movwf	(_codeCommand)
  1239  036E  00AD               	line	171
  1240                           ;SonyCrBt.c: 171:         }
  1241                           	movlw	low(042h)
  1242  036F  3042               	movwf	(??_main+0)+0
  1243  0370  00A5               	movf	(??_main+0)+0,w
  1244  0371  0825               	movwf	(_codeAddress)
  1245  0372  00AC               	line	172
  1246                           	
  1247                           l1109:	
  1248  0373                     ;SonyCrBt.c: 172: 
  1249                           	clrf	(commandd@loopBit2)
  1250  0373  01A1               	incf	(commandd@loopBit2),f
  1251  0374  0AA1               	movlw	low(08h)
  1252  0375  3008               	movwf	(??_main+0)+0
  1253  0376  00A5               	movf	(??_main+0)+0,w
  1254  0377  0825               	movwf	(commandd@loopBit3)
  1255  0378  00A2               	movlw	low(0)
  1256  0379  3000               	fcall	_commandd
  1257  037A  213B               	goto	l1111
  1258  037B  2B7D               	line	173
  1259                           ;SonyCrBt.c: 173:         if (volt < 70 && volt > 1) {
  1260                           	
  1261                           l103:	
  1262  037C                     	goto	l1111
  1263  037C  2B7D               	line	174
  1264                           ;SonyCrBt.c: 174:             ADC();
  1265                           	
  1266                           l102:	
  1267  037D                     	line	176
  1268                           	
  1269                           l1111:	
  1270  037D                     ;SonyCrBt.c: 176:                 codeCommand = 0b11001100;
  1271                           	movlw	0
  1272  037D  3000               	bcf	status, 5	;RP0=0, select bank0
  1273  037E  1283               	subwf	(_volt+1),w
  1274  037F  0227               	movlw	094h
  1275  0380  3094               	skipnz
  1276  0381  1903               	subwf	(_volt),w
  1277  0382  0226               	skipnc
  1278  0383  1803               	goto	u1111
  1279  0384  2B86               	goto	u1110
  1280  0385  2B87               u1111:
  1281  0386                     	goto	l1125
  1282  0386  2BB6               u1110:
  1283  0387                     	
  1284                           l1113:	
  1285  0387                     	movlw	0
  1286  0387  3000               	subwf	(_volt+1),w
  1287  0388  0227               	movlw	047h
  1288  0389  3047               	skipnz
  1289  038A  1903               	subwf	(_volt),w
  1290  038B  0226               	skipc
  1291  038C  1C03               	goto	u1121
  1292  038D  2B8F               	goto	u1120
  1293  038E  2B90               u1121:
  1294  038F                     	goto	l1125
  1295  038F  2BB6               u1120:
  1296  0390                     	line	177
  1297                           	
  1298                           l1115:	
  1299  0390                     ;SonyCrBt.c: 177:                 codeAddress = 0b01000010;
  1300                           	fcall	_ADC
  1301  0390  2095               	line	178
  1302                           	
  1303                           l1117:	
  1304  0391                     ;SonyCrBt.c: 178:                 commandd(0, 1, 8);
  1305                           	movlw	0
  1306  0391  3000               	bcf	status, 5	;RP0=0, select bank0
  1307  0392  1283               	subwf	(_volt+1),w
  1308  0393  0227               	movlw	094h
  1309  0394  3094               	skipnz
  1310  0395  1903               	subwf	(_volt),w
  1311  0396  0226               	skipnc
  1312  0397  1803               	goto	u1131
  1313  0398  2B9A               	goto	u1130
  1314  0399  2B9B               u1131:
  1315  039A                     	goto	l1125
  1316  039A  2BB6               u1130:
  1317  039B                     	
  1318                           l1119:	
  1319  039B                     	movlw	0
  1320  039B  3000               	subwf	(_volt+1),w
  1321  039C  0227               	movlw	047h
  1322  039D  3047               	skipnz
  1323  039E  1903               	subwf	(_volt),w
  1324  039F  0226               	skipc
  1325  03A0  1C03               	goto	u1141
  1326  03A1  2BA3               	goto	u1140
  1327  03A2  2BA4               u1141:
  1328  03A3                     	goto	l1125
  1329  03A3  2BB6               u1140:
  1330  03A4                     	line	179
  1331                           	
  1332                           l1121:	
  1333  03A4                     ;SonyCrBt.c: 179:             }
  1334                           	movlw	low(048h)
  1335  03A4  3048               	movwf	(??_main+0)+0
  1336  03A5  00A5               	movf	(??_main+0)+0,w
  1337  03A6  0825               	movwf	(_codeCommand)
  1338  03A7  00AD               	line	180
  1339                           ;SonyCrBt.c: 180:         }
  1340                           	movlw	low(042h)
  1341  03A8  3042               	movwf	(??_main+0)+0
  1342  03A9  00A5               	movf	(??_main+0)+0,w
  1343  03AA  0825               	movwf	(_codeAddress)
  1344  03AB  00AC               	line	181
  1345                           	
  1346                           l1123:	
  1347  03AC                     ;SonyCrBt.c: 181:     }
  1348                           	clrf	(commandd@loopBit2)
  1349  03AC  01A1               	incf	(commandd@loopBit2),f
  1350  03AD  0AA1               	movlw	low(08h)
  1351  03AE  3008               	movwf	(??_main+0)+0
  1352  03AF  00A5               	movf	(??_main+0)+0,w
  1353  03B0  0825               	movwf	(commandd@loopBit3)
  1354  03B1  00A2               	movlw	low(0)
  1355  03B2  3000               	fcall	_commandd
  1356  03B3  213B               	goto	l1125
  1357  03B4  2BB6               	line	182
  1358                           ;SonyCrBt.c: 182: }
  1359                           	
  1360                           l105:	
  1361  03B5                     	goto	l1125
  1362  03B5  2BB6               	line	183
  1363                           	
  1364                           l104:	
  1365  03B6                     	line	185
  1366                           	
  1367                           l1125:	
  1368  03B6                     	movlw	0
  1369  03B6  3000               	bcf	status, 5	;RP0=0, select bank0
  1370  03B7  1283               	subwf	(_volt+1),w
  1371  03B8  0227               	movlw	046h
  1372  03B9  3046               	skipnz
  1373  03BA  1903               	subwf	(_volt),w
  1374  03BB  0226               	skipnc
  1375  03BC  1803               	goto	u1151
  1376  03BD  2BBF               	goto	u1150
  1377  03BE  2BC0               u1151:
  1378  03BF                     	goto	l1009
  1379  03BF  29ED               u1150:
  1380  03C0                     	
  1381                           l1127:	
  1382  03C0                     	movlw	0
  1383  03C0  3000               	subwf	(_volt+1),w
  1384  03C1  0227               	movlw	02h
  1385  03C2  3002               	skipnz
  1386  03C3  1903               	subwf	(_volt),w
  1387  03C4  0226               	skipc
  1388  03C5  1C03               	goto	u1161
  1389  03C6  2BC8               	goto	u1160
  1390  03C7  2BC9               u1161:
  1391  03C8                     	goto	l1009
  1392  03C8  29ED               u1160:
  1393  03C9                     	line	186
  1394                           	
  1395                           l1129:	
  1396  03C9                     	fcall	_ADC
  1397  03C9  2095               	line	187
  1398                           	
  1399                           l1131:	
  1400  03CA                     	movlw	0
  1401  03CA  3000               	bcf	status, 5	;RP0=0, select bank0
  1402  03CB  1283               	subwf	(_volt+1),w
  1403  03CC  0227               	movlw	046h
  1404  03CD  3046               	skipnz
  1405  03CE  1903               	subwf	(_volt),w
  1406  03CF  0226               	skipnc
  1407  03D0  1803               	goto	u1171
  1408  03D1  2BD3               	goto	u1170
  1409  03D2  2BD4               u1171:
  1410  03D3                     	goto	l1009
  1411  03D3  29ED               u1170:
  1412  03D4                     	
  1413                           l1133:	
  1414  03D4                     	movlw	0
  1415  03D4  3000               	subwf	(_volt+1),w
  1416  03D5  0227               	movlw	02h
  1417  03D6  3002               	skipnz
  1418  03D7  1903               	subwf	(_volt),w
  1419  03D8  0226               	skipc
  1420  03D9  1C03               	goto	u1181
  1421  03DA  2BDC               	goto	u1180
  1422  03DB  2BDD               u1181:
  1423  03DC                     	goto	l1009
  1424  03DC  29ED               u1180:
  1425  03DD                     	line	188
  1426                           	
  1427                           l1135:	
  1428  03DD                     	movlw	low(0CCh)
  1429  03DD  30CC               	movwf	(??_main+0)+0
  1430  03DE  00A5               	movf	(??_main+0)+0,w
  1431  03DF  0825               	movwf	(_codeCommand)
  1432  03E0  00AD               	line	189
  1433                           	movlw	low(042h)
  1434  03E1  3042               	movwf	(??_main+0)+0
  1435  03E2  00A5               	movf	(??_main+0)+0,w
  1436  03E3  0825               	movwf	(_codeAddress)
  1437  03E4  00AC               	line	190
  1438                           	
  1439                           l1137:	
  1440  03E5                     	clrf	(commandd@loopBit2)
  1441  03E5  01A1               	incf	(commandd@loopBit2),f
  1442  03E6  0AA1               	movlw	low(08h)
  1443  03E7  3008               	movwf	(??_main+0)+0
  1444  03E8  00A5               	movf	(??_main+0)+0,w
  1445  03E9  0825               	movwf	(commandd@loopBit3)
  1446  03EA  00A2               	movlw	low(0)
  1447  03EB  3000               	fcall	_commandd
  1448  03EC  213B               	goto	l1009
  1449  03ED  29ED               	line	191
  1450                           	
  1451                           l107:	
  1452  03EE                     	goto	l1009
  1453  03EE  29ED               	line	192
  1454                           	
  1455                           l106:	
  1456  03EF                     	goto	l1009
  1457  03EF  29ED               	line	193
  1458                           	
  1459                           l108:	
  1460  03F0                     	goto	l1009
  1461  03F0  29ED               	
  1462                           l109:	
  1463  03F1                     	line	194
  1464                           	
  1465                           l110:	
  1466  03F1                     	global	start
  1467                           	ljmp	start
  1468  03F1  2800               	opt stack 0
  1469                           GLOBAL	__end_of_main
  1470                           	__end_of_main:
  1471  03F2                     	signat	_main,89
  1472                           	global	_commandd
  1473                           
  1474 ;; *************** function _commandd *****************
  1475 ;; Defined at:
  1476 ;;		line 49 in file "SonyCrBt.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;  loopBit1        1    wreg     unsigned char 
  1479 ;;  loopBit2        1    1[BANK0 ] unsigned char 
  1480 ;;  loopBit3        1    2[BANK0 ] unsigned char 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  loopBit1        1    4[BANK0 ] unsigned char 
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      unsigned char 
  1485 ;; Registers used:
  1486 ;;		wreg, status,2, status,0, pclath, cstack
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMMON   BANK0
  1492 ;;      Params:         0       2
  1493 ;;      Locals:         0       1
  1494 ;;      Temps:          0       1
  1495 ;;      Totals:         0       4
  1496 ;;Total ram usage:        4 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; Hardware stack levels required when called:    1
  1499 ;; This function calls:
  1500 ;;		_bit0
  1501 ;;		_bit1
  1502 ;;		_ms2_4And0_6ms
  1503 ;; This function is called by:
  1504 ;;		_main
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1508                           	line	49
  1509                           global __ptext1
  1510                           __ptext1:	;psect for function _commandd
  1511  013B                     psect	text1
  1512                           	file	"SonyCrBt.c"
  1513                           	line	49
  1514                           	global	__size_of_commandd
  1515                           	__size_of_commandd	equ	__end_of_commandd-_commandd
  1516  00A1                     	
  1517                           _commandd:	
  1518  013B                     ;incstack = 0
  1519                           	opt	stack 6
  1520                           ; Regs used in _commandd: [wreg+status,2+status,0+pclath+cstack]
  1521                           ;commandd@loopBit1 stored from wreg
  1522                           	bcf	status, 5	;RP0=0, select bank0
  1523  013B  1283               	movwf	(commandd@loopBit1)
  1524  013C  00A4               	line	50
  1525                           	
  1526                           l947:	
  1527  013D                     ;SonyCrBt.c: 50:     while (loopBit > loopBit2) {
  1528                           	fcall	_ms2_4And0_6ms
  1529  013D  210F               	line	51
  1530                           	
  1531                           l949:	
  1532  013E                     ;SonyCrBt.c: 51:         loopBit--;
  1533                           	movlw	low(08h)
  1534  013E  3008               	bcf	status, 5	;RP0=0, select bank0
  1535  013F  1283               	movwf	(??_commandd+0)+0
  1536  0140  00A3               	movf	(??_commandd+0)+0,w
  1537  0141  0823               	movwf	(_loopBit)
  1538  0142  00AA               	line	52
  1539                           ;SonyCrBt.c: 52:         if (!(codeAddress & (1 << loopBit))) {
  1540                           	goto	l959
  1541  0143  296B               	
  1542                           l55:	
  1543  0144                     	line	53
  1544                           	
  1545                           l951:	
  1546  0144                     ;SonyCrBt.c: 53:             bit0();
  1547                           	movlw	01h
  1548  0144  3001               	subwf	(_loopBit),f
  1549  0145  02AA               	line	54
  1550                           ;SonyCrBt.c: 54:         } else if (codeAddress & (1 << loopBit)) {
  1551                           	movlw	low(01h)
  1552  0146  3001               	movwf	(??_commandd+0)+0
  1553  0147  00A3               	incf	(_loopBit),w
  1554  0148  0A2A               	goto	u664
  1555  0149  294C               u665:
  1556  014A                     	clrc
  1557  014A  1003               	rlf	(??_commandd+0)+0,f
  1558  014B  0DA3               u664:
  1559  014C                     	addlw	-1
  1560  014C  3EFF               	skipz
  1561  014D  1D03               	goto	u665
  1562  014E  294A               	movf	0+(??_commandd+0)+0,w
  1563  014F  0823               	andwf	(_codeCommand),w
  1564  0150  052D               	btfss	status,2
  1565  0151  1D03               	goto	u671
  1566  0152  2954               	goto	u670
  1567  0153  2955               u671:
  1568  0154                     	goto	l955
  1569  0154  2957               u670:
  1570  0155                     	line	55
  1571                           	
  1572                           l953:	
  1573  0155                     ;SonyCrBt.c: 55:             bit1();
  1574                           	fcall	_bit0
  1575  0155  20B7               	line	56
  1576                           ;SonyCrBt.c: 56:         }
  1577                           	goto	l959
  1578  0156  296B               	
  1579                           l56:	
  1580  0157                     	
  1581                           l955:	
  1582  0157                     	movlw	low(01h)
  1583  0157  3001               	bcf	status, 5	;RP0=0, select bank0
  1584  0158  1283               	movwf	(??_commandd+0)+0
  1585  0159  00A3               	incf	(_loopBit),w
  1586  015A  0A2A               	goto	u684
  1587  015B  295E               u685:
  1588  015C                     	clrc
  1589  015C  1003               	rlf	(??_commandd+0)+0,f
  1590  015D  0DA3               u684:
  1591  015E                     	addlw	-1
  1592  015E  3EFF               	skipz
  1593  015F  1D03               	goto	u685
  1594  0160  295C               	movf	0+(??_commandd+0)+0,w
  1595  0161  0823               	andwf	(_codeCommand),w
  1596  0162  052D               	btfsc	status,2
  1597  0163  1903               	goto	u691
  1598  0164  2966               	goto	u690
  1599  0165  2967               u691:
  1600  0166                     	goto	l959
  1601  0166  296B               u690:
  1602  0167                     	line	57
  1603                           	
  1604                           l957:	
  1605  0167                     ;SonyCrBt.c: 57:     }
  1606                           	fcall	_bit1
  1607  0167  20E3               	goto	l959
  1608  0168  296B               	line	58
  1609                           ;SonyCrBt.c: 58: 
  1610                           	
  1611                           l58:	
  1612  0169                     	goto	l959
  1613  0169  296B               	
  1614                           l57:	
  1615  016A                     	goto	l959
  1616  016A  296B               	line	59
  1617                           ;SonyCrBt.c: 59:     loopBit = 8;
  1618                           	
  1619                           l54:	
  1620  016B                     	line	52
  1621                           	
  1622                           l959:	
  1623  016B                     ;SonyCrBt.c: 52:         if (!(codeAddress & (1 << loopBit))) {
  1624                           	bcf	status, 5	;RP0=0, select bank0
  1625  016B  1283               	movf	(_loopBit),w
  1626  016C  082A               	subwf	(commandd@loopBit1),w
  1627  016D  0224               	skipc
  1628  016E  1C03               	goto	u701
  1629  016F  2971               	goto	u700
  1630  0170  2972               u701:
  1631  0171                     	goto	l951
  1632  0171  2944               u700:
  1633  0172                     	goto	l961
  1634  0172  2973               	
  1635                           l59:	
  1636  0173                     	line	61
  1637                           	
  1638                           l961:	
  1639  0173                     ;SonyCrBt.c: 61:         loopBit--;
  1640                           	movlw	low(08h)
  1641  0173  3008               	movwf	(??_commandd+0)+0
  1642  0174  00A3               	movf	(??_commandd+0)+0,w
  1643  0175  0823               	movwf	(_loopBit)
  1644  0176  00AA               	line	62
  1645                           ;SonyCrBt.c: 62:         if (!(codeAddressPlus & (1 << loopBit))) {
  1646                           	goto	l971
  1647  0177  299F               	
  1648                           l61:	
  1649  0178                     	line	63
  1650                           	
  1651                           l963:	
  1652  0178                     ;SonyCrBt.c: 63:             bit0();
  1653                           	movlw	01h
  1654  0178  3001               	subwf	(_loopBit),f
  1655  0179  02AA               	line	64
  1656                           ;SonyCrBt.c: 64:         } else if (codeAddressPlus & (1 << loopBit)) {
  1657                           	movlw	low(01h)
  1658  017A  3001               	movwf	(??_commandd+0)+0
  1659  017B  00A3               	incf	(_loopBit),w
  1660  017C  0A2A               	goto	u714
  1661  017D  2980               u715:
  1662  017E                     	clrc
  1663  017E  1003               	rlf	(??_commandd+0)+0,f
  1664  017F  0DA3               u714:
  1665  0180                     	addlw	-1
  1666  0180  3EFF               	skipz
  1667  0181  1D03               	goto	u715
  1668  0182  297E               	movf	0+(??_commandd+0)+0,w
  1669  0183  0823               	andwf	(_codeAddress),w
  1670  0184  052C               	btfss	status,2
  1671  0185  1D03               	goto	u721
  1672  0186  2988               	goto	u720
  1673  0187  2989               u721:
  1674  0188                     	goto	l967
  1675  0188  298B               u720:
  1676  0189                     	line	65
  1677                           	
  1678                           l965:	
  1679  0189                     ;SonyCrBt.c: 65:             bit1();
  1680                           	fcall	_bit0
  1681  0189  20B7               	line	66
  1682                           ;SonyCrBt.c: 66:         }
  1683                           	goto	l971
  1684  018A  299F               	
  1685                           l62:	
  1686  018B                     	
  1687                           l967:	
  1688  018B                     	movlw	low(01h)
  1689  018B  3001               	bcf	status, 5	;RP0=0, select bank0
  1690  018C  1283               	movwf	(??_commandd+0)+0
  1691  018D  00A3               	incf	(_loopBit),w
  1692  018E  0A2A               	goto	u734
  1693  018F  2992               u735:
  1694  0190                     	clrc
  1695  0190  1003               	rlf	(??_commandd+0)+0,f
  1696  0191  0DA3               u734:
  1697  0192                     	addlw	-1
  1698  0192  3EFF               	skipz
  1699  0193  1D03               	goto	u735
  1700  0194  2990               	movf	0+(??_commandd+0)+0,w
  1701  0195  0823               	andwf	(_codeAddress),w
  1702  0196  052C               	btfsc	status,2
  1703  0197  1903               	goto	u741
  1704  0198  299A               	goto	u740
  1705  0199  299B               u741:
  1706  019A                     	goto	l971
  1707  019A  299F               u740:
  1708  019B                     	line	67
  1709                           	
  1710                           l969:	
  1711  019B                     ;SonyCrBt.c: 67:     }
  1712                           	fcall	_bit1
  1713  019B  20E3               	goto	l971
  1714  019C  299F               	line	68
  1715                           ;SonyCrBt.c: 68: }
  1716                           	
  1717                           l64:	
  1718  019D                     	goto	l971
  1719  019D  299F               	
  1720                           l63:	
  1721  019E                     	goto	l971
  1722  019E  299F               	line	69
  1723                           ;SonyCrBt.c: 69: 
  1724                           	
  1725                           l60:	
  1726  019F                     	line	62
  1727                           	
  1728                           l971:	
  1729  019F                     ;SonyCrBt.c: 62:         if (!(codeAddressPlus & (1 << loopBit))) {
  1730                           	bcf	status, 5	;RP0=0, select bank0
  1731  019F  1283               	movf	(_loopBit),w
  1732  01A0  082A               	subwf	(commandd@loopBit2),w
  1733  01A1  0221               	skipc
  1734  01A2  1C03               	goto	u751
  1735  01A3  29A5               	goto	u750
  1736  01A4  29A6               u751:
  1737  01A5                     	goto	l963
  1738  01A5  2978               u750:
  1739  01A6                     	goto	l973
  1740  01A6  29A7               	
  1741                           l65:	
  1742  01A7                     	line	71
  1743                           	
  1744                           l973:	
  1745  01A7                     ;SonyCrBt.c: 71:     ADON = 1;
  1746                           	movlw	low(08h)
  1747  01A7  3008               	movwf	(??_commandd+0)+0
  1748  01A8  00A3               	movf	(??_commandd+0)+0,w
  1749  01A9  0823               	movwf	(_loopBit)
  1750  01AA  00AA               	line	72
  1751                           ;SonyCrBt.c: 72:     _delay((unsigned long)((3)*(4000000/4000.0)));
  1752                           	goto	l983
  1753  01AB  29D3               	
  1754                           l67:	
  1755  01AC                     	line	73
  1756                           	
  1757                           l975:	
  1758  01AC                     ;SonyCrBt.c: 73:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  1759                           	movlw	01h
  1760  01AC  3001               	subwf	(_loopBit),f
  1761  01AD  02AA               	line	74
  1762                           ;SonyCrBt.c: 74:     GO_DONE = 1;
  1763                           	movlw	low(01h)
  1764  01AE  3001               	movwf	(??_commandd+0)+0
  1765  01AF  00A3               	incf	(_loopBit),w
  1766  01B0  0A2A               	goto	u764
  1767  01B1  29B4               u765:
  1768  01B2                     	clrc
  1769  01B2  1003               	rlf	(??_commandd+0)+0,f
  1770  01B3  0DA3               u764:
  1771  01B4                     	addlw	-1
  1772  01B4  3EFF               	skipz
  1773  01B5  1D03               	goto	u765
  1774  01B6  29B2               	movf	0+(??_commandd+0)+0,w
  1775  01B7  0823               	andwf	(_codeAddressPlus),w
  1776  01B8  052B               	btfss	status,2
  1777  01B9  1D03               	goto	u771
  1778  01BA  29BC               	goto	u770
  1779  01BB  29BD               u771:
  1780  01BC                     	goto	l979
  1781  01BC  29BF               u770:
  1782  01BD                     	line	75
  1783                           	
  1784                           l977:	
  1785  01BD                     ;SonyCrBt.c: 75:     while (GO_DONE);
  1786                           	fcall	_bit0
  1787  01BD  20B7               	line	76
  1788                           ;SonyCrBt.c: 76:     volt = ADRESH;
  1789                           	goto	l983
  1790  01BE  29D3               	
  1791                           l68:	
  1792  01BF                     	
  1793                           l979:	
  1794  01BF                     	movlw	low(01h)
  1795  01BF  3001               	bcf	status, 5	;RP0=0, select bank0
  1796  01C0  1283               	movwf	(??_commandd+0)+0
  1797  01C1  00A3               	incf	(_loopBit),w
  1798  01C2  0A2A               	goto	u784
  1799  01C3  29C6               u785:
  1800  01C4                     	clrc
  1801  01C4  1003               	rlf	(??_commandd+0)+0,f
  1802  01C5  0DA3               u784:
  1803  01C6                     	addlw	-1
  1804  01C6  3EFF               	skipz
  1805  01C7  1D03               	goto	u785
  1806  01C8  29C4               	movf	0+(??_commandd+0)+0,w
  1807  01C9  0823               	andwf	(_codeAddressPlus),w
  1808  01CA  052B               	btfsc	status,2
  1809  01CB  1903               	goto	u791
  1810  01CC  29CE               	goto	u790
  1811  01CD  29CF               u791:
  1812  01CE                     	goto	l983
  1813  01CE  29D3               u790:
  1814  01CF                     	line	77
  1815                           	
  1816                           l981:	
  1817  01CF                     ;SonyCrBt.c: 77:     ADON = 0;
  1818                           	fcall	_bit1
  1819  01CF  20E3               	goto	l983
  1820  01D0  29D3               	line	78
  1821                           ;SonyCrBt.c: 78: }
  1822                           	
  1823                           l70:	
  1824  01D1                     	goto	l983
  1825  01D1  29D3               	
  1826                           l69:	
  1827  01D2                     	goto	l983
  1828  01D2  29D3               	line	79
  1829                           ;SonyCrBt.c: 79: 
  1830                           	
  1831                           l66:	
  1832  01D3                     	line	72
  1833                           	
  1834                           l983:	
  1835  01D3                     ;SonyCrBt.c: 72:     _delay((unsigned long)((3)*(4000000/4000.0)));
  1836                           	bcf	status, 5	;RP0=0, select bank0
  1837  01D3  1283               	movf	(_loopBit),w
  1838  01D4  082A               	subwf	(commandd@loopBit3),w
  1839  01D5  0222               	skipc
  1840  01D6  1C03               	goto	u801
  1841  01D7  29D9               	goto	u800
  1842  01D8  29DA               u801:
  1843  01D9                     	goto	l975
  1844  01D9  29AC               u800:
  1845  01DA                     	goto	l72
  1846  01DA  29DB               	
  1847                           l71:	
  1848  01DB                     	line	80
  1849                           	
  1850                           l72:	
  1851  01DB                     	return
  1852  01DB  0008               	opt stack 0
  1853                           GLOBAL	__end_of_commandd
  1854                           	__end_of_commandd:
  1855  01DC                     	signat	_commandd,12409
  1856                           	global	_ms2_4And0_6ms
  1857                           
  1858 ;; *************** function _ms2_4And0_6ms *****************
  1859 ;; Defined at:
  1860 ;;		line 19 in file "SonyCrBt.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;		None
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;		None
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  1    wreg      void 
  1867 ;; Registers used:
  1868 ;;		wreg, status,2
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMMON   BANK0
  1874 ;;      Params:         0       0
  1875 ;;      Locals:         0       0
  1876 ;;      Temps:          0       1
  1877 ;;      Totals:         0       1
  1878 ;;Total ram usage:        1 bytes
  1879 ;; Hardware stack levels used:    1
  1880 ;; This function calls:
  1881 ;;		Nothing
  1882 ;; This function is called by:
  1883 ;;		_commandd
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1887                           	line	19
  1888                           global __ptext2
  1889                           __ptext2:	;psect for function _ms2_4And0_6ms
  1890  010F                     psect	text2
  1891                           	file	"SonyCrBt.c"
  1892                           	line	19
  1893                           	global	__size_of_ms2_4And0_6ms
  1894                           	__size_of_ms2_4And0_6ms	equ	__end_of_ms2_4And0_6ms-_ms2_4And0_6ms
  1895  002C                     	
  1896                           _ms2_4And0_6ms:	
  1897  010F                     ;incstack = 0
  1898                           	opt	stack 6
  1899                           ; Regs used in _ms2_4And0_6ms: [wreg+status,2]
  1900                           	line	20
  1901                           	
  1902                           l911:	
  1903  010F                     ;SonyCrBt.c: 20:         _delay((unsigned long)((12)*(4000000/4000000.0)));
  1904                           	bcf	status, 5	;RP0=0, select bank0
  1905  010F  1283               	clrf	(_i)
  1906  0110  01A8               	clrf	(_i+1)
  1907  0111  01A9               	
  1908                           l913:	
  1909  0112                     	movlw	0
  1910  0112  3000               	subwf	(_i+1),w
  1911  0113  0229               	movlw	050h
  1912  0114  3050               	skipnz
  1913  0115  1903               	subwf	(_i),w
  1914  0116  0228               	skipc
  1915  0117  1C03               	goto	u601
  1916  0118  291A               	goto	u600
  1917  0119  291B               u601:
  1918  011A                     	goto	l39
  1919  011A  291D               u600:
  1920  011B                     	goto	l40
  1921  011B  2934               	
  1922                           l915:	
  1923  011C                     	goto	l40
  1924  011C  2934               	
  1925                           l39:	
  1926  011D                     	line	21
  1927                           ;SonyCrBt.c: 21:         GP2 = 0;
  1928                           	bsf	(42/8),(42)&7	;volatile
  1929  011D  1505               	line	22
  1930                           	
  1931                           l917:	
  1932  011E                     ;SonyCrBt.c: 22:     }
  1933                           	opt asmopt_push
  1934                           opt asmopt_off
  1935                           	movlw	3
  1936  011E  3003               movwf	((??_ms2_4And0_6ms+0)+0),f
  1937  011F  00A0               	u1197:
  1938  0120                     decfsz	(??_ms2_4And0_6ms+0)+0,f
  1939  0120  0BA0               	goto	u1197
  1940  0121  2920               	nop2
  1941  0122  2923               opt asmopt_pop
  1942                           
  1943                           	line	23
  1944                           	
  1945                           l919:	
  1946  0123                     ;SonyCrBt.c: 23:     GP2 = 0;
  1947                           	bcf	status, 5	;RP0=0, select bank0
  1948  0123  1283               	bcf	(42/8),(42)&7	;volatile
  1949  0124  1105               	line	24
  1950                           ;SonyCrBt.c: 24:     _delay((unsigned long)((600)*(4000000/4000000.0)));
  1951                           	movlw	01h
  1952  0125  3001               	addwf	(_i),f
  1953  0126  07A8               	skipnc
  1954  0127  1803               	incf	(_i+1),f
  1955  0128  0AA9               	movlw	0
  1956  0129  3000               	addwf	(_i+1),f
  1957  012A  07A9               	movlw	0
  1958  012B  3000               	subwf	(_i+1),w
  1959  012C  0229               	movlw	050h
  1960  012D  3050               	skipnz
  1961  012E  1903               	subwf	(_i),w
  1962  012F  0228               	skipc
  1963  0130  1C03               	goto	u611
  1964  0131  2933               	goto	u610
  1965  0132  2934               u611:
  1966  0133                     	goto	l39
  1967  0133  291D               u610:
  1968  0134                     	
  1969                           l40:	
  1970  0134                     	line	25
  1971                           ;SonyCrBt.c: 25: }
  1972                           	bcf	(42/8),(42)&7	;volatile
  1973  0134  1105               	line	26
  1974                           	
  1975                           l921:	
  1976  0135                     ;SonyCrBt.c: 26: 
  1977                           	opt asmopt_push
  1978                           opt asmopt_off
  1979                           	movlw	199
  1980  0135  30C7               movwf	((??_ms2_4And0_6ms+0)+0),f
  1981  0136  00A0               	u1207:
  1982  0137                     decfsz	(??_ms2_4And0_6ms+0)+0,f
  1983  0137  0BA0               	goto	u1207
  1984  0138  2937               	nop2
  1985  0139  293A               opt asmopt_pop
  1986                           
  1987                           	line	27
  1988                           	
  1989                           l41:	
  1990  013A                     	return
  1991  013A  0008               	opt stack 0
  1992                           GLOBAL	__end_of_ms2_4And0_6ms
  1993                           	__end_of_ms2_4And0_6ms:
  1994  013B                     	signat	_ms2_4And0_6ms,89
  1995                           	global	_bit1
  1996                           
  1997 ;; *************** function _bit1 *****************
  1998 ;; Defined at:
  1999 ;;		line 29 in file "SonyCrBt.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;		None
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;		None
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  1    wreg      void 
  2006 ;; Registers used:
  2007 ;;		wreg, status,2
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMMON   BANK0
  2013 ;;      Params:         0       0
  2014 ;;      Locals:         0       0
  2015 ;;      Temps:          0       1
  2016 ;;      Totals:         0       1
  2017 ;;Total ram usage:        1 bytes
  2018 ;; Hardware stack levels used:    1
  2019 ;; This function calls:
  2020 ;;		Nothing
  2021 ;; This function is called by:
  2022 ;;		_commandd
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2026                           	line	29
  2027                           global __ptext3
  2028                           __ptext3:	;psect for function _bit1
  2029  00E3                     psect	text3
  2030                           	file	"SonyCrBt.c"
  2031                           	line	29
  2032                           	global	__size_of_bit1
  2033                           	__size_of_bit1	equ	__end_of_bit1-_bit1
  2034  002C                     	
  2035                           _bit1:	
  2036  00E3                     ;incstack = 0
  2037                           	opt	stack 6
  2038                           ; Regs used in _bit1: [wreg+status,2]
  2039                           	line	30
  2040                           	
  2041                           l923:	
  2042  00E3                     ;SonyCrBt.c: 30:         _delay((unsigned long)((12)*(4000000/4000000.0)));
  2043                           	bcf	status, 5	;RP0=0, select bank0
  2044  00E3  1283               	clrf	(_i)
  2045  00E4  01A8               	clrf	(_i+1)
  2046  00E5  01A9               	
  2047                           l925:	
  2048  00E6                     	movlw	0
  2049  00E6  3000               	subwf	(_i+1),w
  2050  00E7  0229               	movlw	028h
  2051  00E8  3028               	skipnz
  2052  00E9  1903               	subwf	(_i),w
  2053  00EA  0228               	skipc
  2054  00EB  1C03               	goto	u621
  2055  00EC  28EE               	goto	u620
  2056  00ED  28EF               u621:
  2057  00EE                     	goto	l44
  2058  00EE  28F1               u620:
  2059  00EF                     	goto	l45
  2060  00EF  2908               	
  2061                           l927:	
  2062  00F0                     	goto	l45
  2063  00F0  2908               	
  2064                           l44:	
  2065  00F1                     	line	31
  2066                           ;SonyCrBt.c: 31:         GP2 = 0;
  2067                           	bsf	(42/8),(42)&7	;volatile
  2068  00F1  1505               	line	32
  2069                           	
  2070                           l929:	
  2071  00F2                     ;SonyCrBt.c: 32:     }
  2072                           	opt asmopt_push
  2073                           opt asmopt_off
  2074                           	movlw	3
  2075  00F2  3003               movwf	((??_bit1+0)+0),f
  2076  00F3  00A0               	u1217:
  2077  00F4                     decfsz	(??_bit1+0)+0,f
  2078  00F4  0BA0               	goto	u1217
  2079  00F5  28F4               	nop2
  2080  00F6  28F7               opt asmopt_pop
  2081                           
  2082                           	line	33
  2083                           	
  2084                           l931:	
  2085  00F7                     ;SonyCrBt.c: 33:     GP2 = 0;
  2086                           	bcf	status, 5	;RP0=0, select bank0
  2087  00F7  1283               	bcf	(42/8),(42)&7	;volatile
  2088  00F8  1105               	line	34
  2089                           ;SonyCrBt.c: 34:     _delay((unsigned long)((600)*(4000000/4000000.0)));
  2090                           	movlw	01h
  2091  00F9  3001               	addwf	(_i),f
  2092  00FA  07A8               	skipnc
  2093  00FB  1803               	incf	(_i+1),f
  2094  00FC  0AA9               	movlw	0
  2095  00FD  3000               	addwf	(_i+1),f
  2096  00FE  07A9               	movlw	0
  2097  00FF  3000               	subwf	(_i+1),w
  2098  0100  0229               	movlw	028h
  2099  0101  3028               	skipnz
  2100  0102  1903               	subwf	(_i),w
  2101  0103  0228               	skipc
  2102  0104  1C03               	goto	u631
  2103  0105  2907               	goto	u630
  2104  0106  2908               u631:
  2105  0107                     	goto	l44
  2106  0107  28F1               u630:
  2107  0108                     	
  2108                           l45:	
  2109  0108                     	line	35
  2110                           ;SonyCrBt.c: 35: }
  2111                           	bcf	(42/8),(42)&7	;volatile
  2112  0108  1105               	line	36
  2113                           	
  2114                           l933:	
  2115  0109                     ;SonyCrBt.c: 36: 
  2116                           	opt asmopt_push
  2117                           opt asmopt_off
  2118                           	movlw	199
  2119  0109  30C7               movwf	((??_bit1+0)+0),f
  2120  010A  00A0               	u1227:
  2121  010B                     decfsz	(??_bit1+0)+0,f
  2122  010B  0BA0               	goto	u1227
  2123  010C  290B               	nop2
  2124  010D  290E               opt asmopt_pop
  2125                           
  2126                           	line	37
  2127                           	
  2128                           l46:	
  2129  010E                     	return
  2130  010E  0008               	opt stack 0
  2131                           GLOBAL	__end_of_bit1
  2132                           	__end_of_bit1:
  2133  010F                     	signat	_bit1,89
  2134                           	global	_bit0
  2135                           
  2136 ;; *************** function _bit0 *****************
  2137 ;; Defined at:
  2138 ;;		line 39 in file "SonyCrBt.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;		None
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;		None
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  1    wreg      void 
  2145 ;; Registers used:
  2146 ;;		wreg, status,2
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMMON   BANK0
  2152 ;;      Params:         0       0
  2153 ;;      Locals:         0       0
  2154 ;;      Temps:          0       1
  2155 ;;      Totals:         0       1
  2156 ;;Total ram usage:        1 bytes
  2157 ;; Hardware stack levels used:    1
  2158 ;; This function calls:
  2159 ;;		Nothing
  2160 ;; This function is called by:
  2161 ;;		_commandd
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  2165                           	line	39
  2166                           global __ptext4
  2167                           __ptext4:	;psect for function _bit0
  2168  00B7                     psect	text4
  2169                           	file	"SonyCrBt.c"
  2170                           	line	39
  2171                           	global	__size_of_bit0
  2172                           	__size_of_bit0	equ	__end_of_bit0-_bit0
  2173  002C                     	
  2174                           _bit0:	
  2175  00B7                     ;incstack = 0
  2176                           	opt	stack 6
  2177                           ; Regs used in _bit0: [wreg+status,2]
  2178                           	line	40
  2179                           	
  2180                           l935:	
  2181  00B7                     ;SonyCrBt.c: 40:     while (loopBit > loopBit1) {
  2182                           	bcf	status, 5	;RP0=0, select bank0
  2183  00B7  1283               	clrf	(_i)
  2184  00B8  01A8               	clrf	(_i+1)
  2185  00B9  01A9               	
  2186                           l937:	
  2187  00BA                     	movlw	0
  2188  00BA  3000               	subwf	(_i+1),w
  2189  00BB  0229               	movlw	014h
  2190  00BC  3014               	skipnz
  2191  00BD  1903               	subwf	(_i),w
  2192  00BE  0228               	skipc
  2193  00BF  1C03               	goto	u641
  2194  00C0  28C2               	goto	u640
  2195  00C1  28C3               u641:
  2196  00C2                     	goto	l49
  2197  00C2  28C5               u640:
  2198  00C3                     	goto	l50
  2199  00C3  28DC               	
  2200                           l939:	
  2201  00C4                     	goto	l50
  2202  00C4  28DC               	
  2203                           l49:	
  2204  00C5                     	line	41
  2205                           ;SonyCrBt.c: 41:         loopBit--;
  2206                           	bsf	(42/8),(42)&7	;volatile
  2207  00C5  1505               	line	42
  2208                           	
  2209                           l941:	
  2210  00C6                     ;SonyCrBt.c: 42:         if (!(codeCommand & (1 << loopBit))) {
  2211                           	opt asmopt_push
  2212                           opt asmopt_off
  2213                           	movlw	3
  2214  00C6  3003               movwf	((??_bit0+0)+0),f
  2215  00C7  00A0               	u1237:
  2216  00C8                     decfsz	(??_bit0+0)+0,f
  2217  00C8  0BA0               	goto	u1237
  2218  00C9  28C8               	nop2
  2219  00CA  28CB               opt asmopt_pop
  2220                           
  2221                           	line	43
  2222                           	
  2223                           l943:	
  2224  00CB                     ;SonyCrBt.c: 43:             bit0();
  2225                           	bcf	status, 5	;RP0=0, select bank0
  2226  00CB  1283               	bcf	(42/8),(42)&7	;volatile
  2227  00CC  1105               	line	44
  2228                           ;SonyCrBt.c: 44:         } else if (codeCommand & (1 << loopBit)) {
  2229                           	movlw	01h
  2230  00CD  3001               	addwf	(_i),f
  2231  00CE  07A8               	skipnc
  2232  00CF  1803               	incf	(_i+1),f
  2233  00D0  0AA9               	movlw	0
  2234  00D1  3000               	addwf	(_i+1),f
  2235  00D2  07A9               	movlw	0
  2236  00D3  3000               	subwf	(_i+1),w
  2237  00D4  0229               	movlw	014h
  2238  00D5  3014               	skipnz
  2239  00D6  1903               	subwf	(_i),w
  2240  00D7  0228               	skipc
  2241  00D8  1C03               	goto	u651
  2242  00D9  28DB               	goto	u650
  2243  00DA  28DC               u651:
  2244  00DB                     	goto	l49
  2245  00DB  28C5               u650:
  2246  00DC                     	
  2247                           l50:	
  2248  00DC                     	line	45
  2249                           ;SonyCrBt.c: 45:             bit1();
  2250                           	bcf	(42/8),(42)&7	;volatile
  2251  00DC  1105               	line	46
  2252                           	
  2253                           l945:	
  2254  00DD                     ;SonyCrBt.c: 46:         }
  2255                           	opt asmopt_push
  2256                           opt asmopt_off
  2257                           	movlw	199
  2258  00DD  30C7               movwf	((??_bit0+0)+0),f
  2259  00DE  00A0               	u1247:
  2260  00DF                     decfsz	(??_bit0+0)+0,f
  2261  00DF  0BA0               	goto	u1247
  2262  00E0  28DF               	nop2
  2263  00E1  28E2               opt asmopt_pop
  2264                           
  2265                           	line	47
  2266                           	
  2267                           l51:	
  2268  00E2                     	return
  2269  00E2  0008               	opt stack 0
  2270                           GLOBAL	__end_of_bit0
  2271                           	__end_of_bit0:
  2272  00E3                     	signat	_bit0,89
  2273                           	global	_ADC1
  2274                           
  2275 ;; *************** function _ADC1 *****************
  2276 ;; Defined at:
  2277 ;;		line 92 in file "SonyCrBt.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;		None
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;		None
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMMON   BANK0
  2291 ;;      Params:         0       0
  2292 ;;      Locals:         0       0
  2293 ;;      Temps:          0       2
  2294 ;;      Totals:         0       2
  2295 ;;Total ram usage:        2 bytes
  2296 ;; Hardware stack levels used:    1
  2297 ;; This function calls:
  2298 ;;		Nothing
  2299 ;; This function is called by:
  2300 ;;		_main
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  2304                           	line	92
  2305                           global __ptext5
  2306                           __ptext5:	;psect for function _ADC1
  2307  007A                     psect	text5
  2308                           	file	"SonyCrBt.c"
  2309                           	line	92
  2310                           	global	__size_of_ADC1
  2311                           	__size_of_ADC1	equ	__end_of_ADC1-_ADC1
  2312  001B                     	
  2313                           _ADC1:	
  2314  007A                     ;incstack = 0
  2315                           	opt	stack 7
  2316                           ; Regs used in _ADC1: [wreg]
  2317                           	line	93
  2318                           	
  2319                           l995:	
  2320  007A                     ;SonyCrBt.c: 93:     ANSEL = 0b01111000;
  2321                           	bcf	status, 5	;RP0=0, select bank0
  2322  007A  1283               	bsf	(248/8),(248)&7	;volatile
  2323  007B  141F               	line	94
  2324                           	
  2325                           l997:	
  2326  007C                     ;SonyCrBt.c: 94:     OPTION_REG = 0b10000011;
  2327                           	opt asmopt_push
  2328                           opt asmopt_off
  2329                           movlw	39
  2330  007C  3027               movwf	((??_ADC1+0)+0+1),f
  2331  007D  00A1               	movlw	245
  2332  007E  30F5               movwf	((??_ADC1+0)+0),f
  2333  007F  00A0               	u1257:
  2334  0080                     decfsz	((??_ADC1+0)+0),f
  2335  0080  0BA0               	goto	u1257
  2336  0081  2880               	decfsz	((??_ADC1+0)+0+1),f
  2337  0082  0BA1               	goto	u1257
  2338  0083  2880               opt asmopt_pop
  2339                           
  2340                           	line	95
  2341                           	
  2342                           l999:	
  2343  0084                     ;SonyCrBt.c: 95:     INTCON = 0b1000000;
  2344                           	bcf	status, 5	;RP0=0, select bank0
  2345  0084  1283               	bsf	(249/8),(249)&7	;volatile
  2346  0085  149F               	line	96
  2347                           ;SonyCrBt.c: 96:     PIE1bits.ADIE = 1;
  2348                           	goto	l81
  2349  0086  2887               	
  2350                           l82:	
  2351  0087                     	
  2352                           l81:	
  2353  0087                     	btfsc	(249/8),(249)&7	;volatile
  2354  0087  189F               	goto	u821
  2355  0088  288A               	goto	u820
  2356  0089  288B               u821:
  2357  008A                     	goto	l81
  2358  008A  2887               u820:
  2359  008B                     	goto	l1001
  2360  008B  288C               	
  2361                           l83:	
  2362  008C                     	line	97
  2363                           	
  2364                           l1001:	
  2365  008C                     ;SonyCrBt.c: 97: 
  2366                           	movf	(30),w	;volatile
  2367  008C  081E               	movwf	(??_ADC1+0)+0
  2368  008D  00A0               	clrf	(??_ADC1+0)+0+1
  2369  008E  01A1               	movf	0+(??_ADC1+0)+0,w
  2370  008F  0820               	movwf	(_volt)
  2371  0090  00A6               	movf	1+(??_ADC1+0)+0,w
  2372  0091  0821               	movwf	(_volt+1)
  2373  0092  00A7               	line	98
  2374                           	
  2375                           l1003:	
  2376  0093                     ;SonyCrBt.c: 98:     while (1) {
  2377                           	bcf	(248/8),(248)&7	;volatile
  2378  0093  101F               	line	99
  2379                           	
  2380                           l84:	
  2381  0094                     	return
  2382  0094  0008               	opt stack 0
  2383                           GLOBAL	__end_of_ADC1
  2384                           	__end_of_ADC1:
  2385  0095                     	signat	_ADC1,89
  2386                           	global	_ADC
  2387                           
  2388 ;; *************** function _ADC *****************
  2389 ;; Defined at:
  2390 ;;		line 82 in file "SonyCrBt.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;		None
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;		None
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  1    wreg      void 
  2397 ;; Registers used:
  2398 ;;		wreg
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMMON   BANK0
  2404 ;;      Params:         0       0
  2405 ;;      Locals:         0       0
  2406 ;;      Temps:          0       2
  2407 ;;      Totals:         0       2
  2408 ;;Total ram usage:        2 bytes
  2409 ;; Hardware stack levels used:    1
  2410 ;; This function calls:
  2411 ;;		Nothing
  2412 ;; This function is called by:
  2413 ;;		_main
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  2417                           	line	82
  2418                           global __ptext6
  2419                           __ptext6:	;psect for function _ADC
  2420  0095                     psect	text6
  2421                           	file	"SonyCrBt.c"
  2422                           	line	82
  2423                           	global	__size_of_ADC
  2424                           	__size_of_ADC	equ	__end_of_ADC-_ADC
  2425  0022                     	
  2426                           _ADC:	
  2427  0095                     ;incstack = 0
  2428                           	opt	stack 7
  2429                           ; Regs used in _ADC: [wreg]
  2430                           	line	83
  2431                           	
  2432                           l985:	
  2433  0095                     ;SonyCrBt.c: 83:     GO_DONE = 1;
  2434                           	bcf	status, 5	;RP0=0, select bank0
  2435  0095  1283               	bsf	(248/8),(248)&7	;volatile
  2436  0096  141F               	line	84
  2437                           	
  2438                           l987:	
  2439  0097                     ;SonyCrBt.c: 84:     while (GO_DONE);
  2440                           	opt asmopt_push
  2441                           opt asmopt_off
  2442                           movlw	4
  2443  0097  3004               movwf	((??_ADC+0)+0+1),f
  2444  0098  00A1               	movlw	228
  2445  0099  30E4               movwf	((??_ADC+0)+0),f
  2446  009A  00A0               	u1267:
  2447  009B                     decfsz	((??_ADC+0)+0),f
  2448  009B  0BA0               	goto	u1267
  2449  009C  289B               	decfsz	((??_ADC+0)+0+1),f
  2450  009D  0BA1               	goto	u1267
  2451  009E  289B               	nop
  2452  009F  0000               opt asmopt_pop
  2453                           
  2454                           	line	85
  2455                           ;SonyCrBt.c: 85:     volt = ADRESH;
  2456                           	opt asmopt_push
  2457                           opt asmopt_off
  2458                           	movlw	66
  2459  00A0  3042               	bcf	status, 5	;RP0=0, select bank0
  2460  00A1  1283               movwf	((??_ADC+0)+0),f
  2461  00A2  00A0               	u1277:
  2462  00A3                     decfsz	(??_ADC+0)+0,f
  2463  00A3  0BA0               	goto	u1277
  2464  00A4  28A3               	nop
  2465  00A5  0000               opt asmopt_pop
  2466                           
  2467                           	line	86
  2468                           	
  2469                           l989:	
  2470  00A6                     ;SonyCrBt.c: 86:     ADON = 0;
  2471                           	bcf	status, 5	;RP0=0, select bank0
  2472  00A6  1283               	bsf	(249/8),(249)&7	;volatile
  2473  00A7  149F               	line	87
  2474                           ;SonyCrBt.c: 87: }
  2475                           	goto	l75
  2476  00A8  28A9               	
  2477                           l76:	
  2478  00A9                     	
  2479                           l75:	
  2480  00A9                     	btfsc	(249/8),(249)&7	;volatile
  2481  00A9  189F               	goto	u811
  2482  00AA  28AC               	goto	u810
  2483  00AB  28AD               u811:
  2484  00AC                     	goto	l75
  2485  00AC  28A9               u810:
  2486  00AD                     	goto	l991
  2487  00AD  28AE               	
  2488                           l77:	
  2489  00AE                     	line	88
  2490                           	
  2491                           l991:	
  2492  00AE                     ;SonyCrBt.c: 88: 
  2493                           	movf	(30),w	;volatile
  2494  00AE  081E               	movwf	(??_ADC+0)+0
  2495  00AF  00A0               	clrf	(??_ADC+0)+0+1
  2496  00B0  01A1               	movf	0+(??_ADC+0)+0,w
  2497  00B1  0820               	movwf	(_volt)
  2498  00B2  00A6               	movf	1+(??_ADC+0)+0,w
  2499  00B3  0821               	movwf	(_volt+1)
  2500  00B4  00A7               	line	89
  2501                           	
  2502                           l993:	
  2503  00B5                     ;SonyCrBt.c: 89: void main(void) {
  2504                           	bcf	(248/8),(248)&7	;volatile
  2505  00B5  101F               	line	90
  2506                           	
  2507                           l78:	
  2508  00B6                     	return
  2509  00B6  0008               	opt stack 0
  2510                           GLOBAL	__end_of_ADC
  2511                           	__end_of_ADC:
  2512  00B7                     	signat	_ADC,89
  2513                           global	___latbits
  2514                           ___latbits	equ	0
  2515  0000                     	global	btemp
  2516                           	btemp set 05Eh
  2517  005E                     
  2518                           	DABS	1,94,2	;btemp
  2519                           	global	wtemp0
  2520                           	wtemp0 set btemp+0
  2521  005E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      6      14

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_commandd
    _commandd->_bit0
    _commandd->_bit1
    _commandd->_ms2_4And0_6ms

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1434
                                              5 BANK0      1     1      0
                                _ADC
                               _ADC1
                           _commandd
 ---------------------------------------------------------------------------------
 (1) _commandd                                             4     2      2    1434
                                              1 BANK0      4     2      2
                               _bit0
                               _bit1
                      _ms2_4And0_6ms
 ---------------------------------------------------------------------------------
 (2) _ms2_4And0_6ms                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _bit1                                                 1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _bit0                                                 1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC1                                                 2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   _ADC1
   _commandd
     _bit0
     _bit1
     _ms2_4And0_6ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               3E      6       E       4       22.6%
BITBANK0            3E      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       E       6        0.0%
ABS                  0      0       E       5        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Dec 29 06:11:07 2021

             __CFG_CP$ON 0000                        _i 0028                       l40 0134  
                     l41 013A                       l50 00DC                       l51 00E2  
                     l44 00F1                       l60 019F                       l45 0108  
                     l61 0178                       l46 010E                       l70 01D1  
                     l62 018B                       l54 016B                       l39 011D  
                     l71 01DB                       l63 019E                       l55 0144  
                     l72 01DB                       l64 019D                       l56 0157  
                     l81 0087                       l49 00C5                       l65 01A7  
                     l57 016A                       l82 0087                       l66 01D3  
                     l58 0169                       l90 0227                       l75 00A9  
                     l83 008C                       l67 01AC                       l59 0173  
                     l91 0226                       l76 00A9                       l84 0094  
                     l68 01BF                       l92 0260                       l77 00AE  
                     l69 01D2                       l93 025F                       l78 00B6  
                     l94 0299                       l95 0298                       l96 02D2  
                     l97 02D1                       l89 01ED                       l98 030B  
                     l99 030A              __CFG_CPD$ON 0000                      l100 0344  
                    l101 0343                      l110 03F1                      l102 037D  
                    l103 037C                      l104 03B6                      l105 03B5  
                    l106 03EF                      l107 03EE                      l108 03F0  
                    l109 03F1                      _ADC 0095                      l911 010F  
                    l921 0135                      l913 0112                      l931 00F7  
                    l923 00E3                      l915 011C                      l941 00C6  
                    l933 0109                      l925 00E6                      l917 011E  
                    l943 00CB                      l935 00B7                      l927 00F0  
                    l919 0123                      l951 0144                      l945 00DD  
                    l937 00BA                      l929 00F2                      l961 0173  
                    l953 0155                      l939 00C4                      l963 0178  
                    l971 019F                      l955 0157                      l947 013D  
                    l981 01CF                      l973 01A7                      l965 0189  
                    l957 0167                      l949 013E                      _GP2 002A  
                    l991 00AE                      l975 01AC                      l983 01D3  
                    l967 018B                      l959 016B                      l993 00B5  
                    l985 0095                      l977 01BD                      l969 019B  
                    l987 0097                      l995 007A                      l979 01BF  
                    l989 00A6                      l997 007C                      l999 0084  
                    u600 011B                      u601 011A                      u610 0134  
                    u611 0133                      u620 00EF                      u700 0172  
                    u621 00EE                      u701 0171                      u630 0108  
                    u631 0107                      u640 00C3                      u800 01DA  
                    u720 0189                      u641 00C2                      u801 01D9  
                    u721 0188                      u810 00AD                      u650 00DC  
                    u714 0180                      u811 00AC                      u651 00DB  
                    u715 017E                      u820 008B                      u740 019B  
                    u900 024E                      u821 008A                      u741 019A  
                    u901 024D                      u750 01A6                      u734 0192  
                    u670 0155                      u910 026A                      u830 01F8  
                    u751 01A5                      u735 0190                      u671 0154  
                    u911 0269                      u831 01F7                      u664 014C  
                    u920 0273                      u840 0201                      u665 014A  
                    u921 0272                      u841 0200                      u770 01BD  
                    u690 0167                      u930 027E                      u850 020C  
                    u771 01BC                      u691 0166                      u931 027D  
                    u851 020B                      u764 01B4                      u684 015E  
                    u940 0287                      u860 0215                      u765 01B2  
                    u685 015C                      u941 0286                      u861 0214  
                    u790 01CF                      u950 02A3                      u870 0231  
                    u791 01CE                      u951 02A2                      u871 0230  
                    u784 01C6                      u960 02AC                      u880 023A  
                    u785 01C4                      u961 02AB                      u881 0239  
                    u970 02B7                      u890 0245                      u971 02B6  
                    u891 0244                      u980 02C0                      u981 02BF  
                    u990 02DC                      u991 02DB                     ?_ADC 0020  
                   l1001 008C                     l1003 0093                     l1011 01EE  
                   l1101 0357                     l1021 0215                     l1013 01F8  
                   l1005 01DC                     l1103 0358                     l1111 037D  
                   l1031 023B                     l1023 021D                     l1015 0201  
                   l1007 01EB                     l1121 03A4                     l1113 0387  
                   l1105 0362                     l1041 026A                     l1033 0245  
                   l1017 0202                     l1025 0227                     l1009 01ED  
                   l1131 03CA                     l1123 03AC                     l1115 0390  
                   l1107 036B                     l1051 028F                     l1043 0273  
                   l1035 024E                     l1027 0231                     l1019 020C  
                   l1133 03D4                     l1117 0391                     l1125 03B6  
                   l1109 0373                     l1061 02AD                     l1053 0290  
                   l1045 0274                     l1037 0256                     l1029 023A  
                   l1135 03DD                     l1127 03C0                     l1119 039B  
                   l1071 02DC                     l1063 02B7                     l1047 027E  
                   l1055 0299                     l1039 0260                     l1137 03E5  
                   l1129 03C9                     l1081 0301                     l1073 02E5  
                   l1065 02C0                     l1057 02A3                     l1049 0287  
                   l1091 0329                     l1075 02E6                     l1083 030B  
                   l1067 02C8                     l1059 02AC                     l1093 0332  
                   l1085 0315                     l1077 02F0                     l1069 02D2  
                   l1095 033A                     l1087 031E                     l1079 02F9  
                   l1089 031F                     l1097 0344                     l1099 034E  
                   _ADC1 007A                     _ADON 00F8                     u1000 02E5  
                   u1001 02E4                     u1010 02F0                     u1011 02EF  
                   u1100 036B                     u1020 02F9                     u1101 036A  
                   u1021 02F8                     u1110 0387                     u1030 0315  
                   u1111 0386                     u1031 0314                     u1120 0390  
                   u1040 031E                     u1121 038F                     u1041 031D  
                   u1130 039B                     u1050 0329                     u1131 039A  
                   u1051 0328                     u1140 03A4                     u1060 0332  
                   u1141 03A3                     u1061 0331                     u1150 03C0  
                   u1070 034E                     u1207 0137                     u1151 03BF  
                   u1071 034D                     u1160 03C9                     u1080 0357  
                   u1217 00F4                     u1161 03C8                     u1081 0356  
                   u1170 03D4                     u1090 0362                     u1227 010B  
                   u1171 03D3                     u1091 0361                     u1180 03DD  
                   u1237 00C8                     u1181 03DC                     u1247 00DF  
                   u1257 0080                     u1267 009B                     u1277 00A3  
                   u1197 0120                     _bit0 00B7                     _bit1 00E3  
                   _main 01DC                     btemp 005E                     _volt 0026  
                   start 0000                    ??_ADC 0020                    ?_ADC1 0020  
                  ?_bit0 0020                    ?_bit1 0020                    ?_main 0020  
          __CFG_WDTE$OFF 0000                    _CMCON 0019                    _ANSEL 009F  
         __CFG_BOREN$OFF 0000                    status 0003                    wtemp0 005E  
           __end_of_ADC1 0095           __CFG_MCLRE$OFF 0000          __initialization 03F2  
           __end_of_bit0 00E3             __end_of_bit1 010F             __end_of_main 03F2  
                 ??_ADC1 0020                   ??_bit0 0020                   ??_bit1 0020  
                 ??_main 0025                   _ADCON0 001F                   _ADRESH 001E  
                 _INTCON 000B                   _TRISIO 0085           __CFG_PWRTE$OFF 0000  
       __end_of_commandd 01DC         commandd@loopBit1 0024         commandd@loopBit2 0021  
       commandd@loopBit3 0022  __end_of__initialization 03FD   __size_of_ms2_4And0_6ms 002C  
           __pidataBANK0 0077               __pbssBANK0 0026          _codeAddressPlus 002B  
             __pmaintext 01DC            _ms2_4And0_6ms 010F                  _GO_DONE 00F9  
              ?_commandd 0021           ?_ms2_4And0_6ms 0020                  __ptext1 013B  
                __ptext2 010F                  __ptext3 00E3                  __ptext4 00B7  
                __ptext5 007A                  __ptext6 0095             __size_of_ADC 0022  
                _loopBit 002A               ??_commandd 0023     end_of_initialization 03FD  
        ??_ms2_4And0_6ms 0020      start_initialization 03F2              __end_of_ADC 00B7  
            __pdataBANK0 002B                ___latbits 0000            __pcstackBANK0 0020  
            _codeAddress 002C        __size_of_commandd 00A1              _codeCommand 002D  
               _PIE1bits 008C                 _commandd 013B            __size_of_ADC1 001B  
          __size_of_bit0 002C            __size_of_bit1 002C            __size_of_main 0216  
  __end_of_ms2_4And0_6ms 013B               _OPTION_REG 0081        __CFG_FOSC$INTRCIO 0000  
