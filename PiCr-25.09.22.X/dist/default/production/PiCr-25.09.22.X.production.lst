

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Sep 25 16:17:35 2022

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC12F675 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 200 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 220 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
    98                           GPIO equ 05h ;# 
    99  0005                     # 308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   100                           PCLATH equ 0Ah ;# 
   101  000A                     # 328 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   102                           INTCON equ 0Bh ;# 
   103  000B                     # 406 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   104                           PIR1 equ 0Ch ;# 
   105  000C                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   106                           TMR1 equ 0Eh ;# 
   107  000E                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   108                           TMR1L equ 0Eh ;# 
   109  000E                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   110                           TMR1H equ 0Fh ;# 
   111  000F                     # 501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   112                           T1CON equ 010h ;# 
   113  0010                     # 566 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   114                           CMCON equ 019h ;# 
   115  0019                     # 625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   116                           ADRESH equ 01Eh ;# 
   117  001E                     # 645 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   118                           ADCON0 equ 01Fh ;# 
   119  001F                     # 729 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   120                           OPTION_REG equ 081h ;# 
   121  0081                     # 799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   122                           TRISIO equ 085h ;# 
   123  0085                     # 849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   124                           PIE1 equ 08Ch ;# 
   125  008C                     # 897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   126                           PCON equ 08Eh ;# 
   127  008E                     # 931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   128                           OSCCAL equ 090h ;# 
   129  0090                     # 991 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   130                           WPU equ 095h ;# 
   131  0095                     # 1036 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   132                           IOC equ 096h ;# 
   133  0096                     # 1041 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   134                           IOCB equ 096h ;# 
   135  0096                     # 1210 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   136                           VRCON equ 099h ;# 
   137  0099                     # 1270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   138                           EEDATA equ 09Ah ;# 
   139  009A                     # 1275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   140                           EEDAT equ 09Ah ;# 
   141  009A                     # 1308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   142                           EEADR equ 09Bh ;# 
   143  009B                     # 1328 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   144                           EECON1 equ 09Ch ;# 
   145  009C                     # 1366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   146                           EECON2 equ 09Dh ;# 
   147  009D                     # 1386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   148                           ADRESL equ 09Eh ;# 
   149  009E                     # 1406 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   150                           ANSEL equ 09Fh ;# 
   151  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   152                           INDF equ 00h ;# 
   153  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   154                           TMR0 equ 01h ;# 
   155  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   156                           PCL equ 02h ;# 
   157  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   158                           STATUS equ 03h ;# 
   159  0003                     # 200 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   160                           FSR equ 04h ;# 
   161  0004                     # 220 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   162                           GPIO equ 05h ;# 
   163  0005                     # 308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   164                           PCLATH equ 0Ah ;# 
   165  000A                     # 328 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   166                           INTCON equ 0Bh ;# 
   167  000B                     # 406 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   168                           PIR1 equ 0Ch ;# 
   169  000C                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   170                           TMR1 equ 0Eh ;# 
   171  000E                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   172                           TMR1L equ 0Eh ;# 
   173  000E                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   174                           TMR1H equ 0Fh ;# 
   175  000F                     # 501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   176                           T1CON equ 010h ;# 
   177  0010                     # 566 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   178                           CMCON equ 019h ;# 
   179  0019                     # 625 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   180                           ADRESH equ 01Eh ;# 
   181  001E                     # 645 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   182                           ADCON0 equ 01Fh ;# 
   183  001F                     # 729 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   184                           OPTION_REG equ 081h ;# 
   185  0081                     # 799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   186                           TRISIO equ 085h ;# 
   187  0085                     # 849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   188                           PIE1 equ 08Ch ;# 
   189  008C                     # 897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   190                           PCON equ 08Eh ;# 
   191  008E                     # 931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   192                           OSCCAL equ 090h ;# 
   193  0090                     # 991 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   194                           WPU equ 095h ;# 
   195  0095                     # 1036 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   196                           IOC equ 096h ;# 
   197  0096                     # 1041 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   198                           IOCB equ 096h ;# 
   199  0096                     # 1210 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   200                           VRCON equ 099h ;# 
   201  0099                     # 1270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   202                           EEDATA equ 09Ah ;# 
   203  009A                     # 1275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   204                           EEDAT equ 09Ah ;# 
   205  009A                     # 1308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   206                           EEADR equ 09Bh ;# 
   207  009B                     # 1328 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   208                           EECON1 equ 09Ch ;# 
   209  009C                     # 1366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   210                           EECON2 equ 09Dh ;# 
   211  009D                     # 1386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   212                           ADRESL equ 09Eh ;# 
   213  009E                     # 1406 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f675.h"
   214                           ANSEL equ 09Fh ;# 
   215  009F                     	FNCALL	_main,_ADC
   216                           	FNCALL	_main,_ADC1
   217                           	FNCALL	_main,_commandd
   218                           	FNCALL	_commandd,_bit0
   219                           	FNCALL	_commandd,_bit1
   220                           	FNCALL	_commandd,_ms9And4ms
   221                           	FNROOT	_main
   222                           	global	_codeCommand
   223                           	global	_codeAddress
   224                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
   225                           global __pidataBANK0
   226                           __pidataBANK0:
   227  005D                     	file	"PiCr-25.09.22.c"
   228                           	line	17
   229                           
   230                           ;initializer for _codeCommandPlus
   231                           	retlw	050h
   232  005D  3450               	line	16
   233                           
   234                           ;initializer for _codeCommand
   235                           	retlw	050h
   236  005E  3450               	line	15
   237                           
   238                           ;initializer for _codeAddress
   239                           	retlw	0B5h
   240  005F  34B5               	global	_volt
   241                           	global	_i
   242                           	global	_loopBit
   243                           	global	_INTCON
   244                           _INTCON	set	0xB
   245  000B                     	global	_ADCON0
   246                           _ADCON0	set	0x1F
   247  001F                     	global	_CMCON
   248                           _CMCON	set	0x19
   249  0019                     	global	_ADRESH
   250                           _ADRESH	set	0x1E
   251  001E                     	global	_RP0
   252                           _RP0	set	0x1D
   253  001D                     	global	_GO_DONE
   254                           _GO_DONE	set	0xF9
   255  00F9                     	global	_ADON
   256                           _ADON	set	0xF8
   257  00F8                     	global	_GP2
   258                           _GP2	set	0x2A
   259  002A                     	global	_OPTION_REG
   260                           _OPTION_REG	set	0x81
   261  0081                     	global	_ANSEL
   262                           _ANSEL	set	0x9F
   263  009F                     	global	_TRISIO
   264                           _TRISIO	set	0x85
   265  0085                     	global	_OSCCAL
   266                           _OSCCAL	set	0x90
   267  0090                     ; #config settings
   268                           global __CFG_FOSC$INTRCIO
   269                           __CFG_FOSC$INTRCIO equ 0x0
   270  0000                     global __CFG_WDTE$OFF
   271                           __CFG_WDTE$OFF equ 0x0
   272  0000                     global __CFG_PWRTE$OFF
   273                           __CFG_PWRTE$OFF equ 0x0
   274  0000                     global __CFG_MCLRE$OFF
   275                           __CFG_MCLRE$OFF equ 0x0
   276  0000                     global __CFG_BOREN$OFF
   277                           __CFG_BOREN$OFF equ 0x0
   278  0000                     global __CFG_CP$ON
   279                           __CFG_CP$ON equ 0x0
   280  0000                     global __CFG_CPD$ON
   281                           __CFG_CPD$ON equ 0x0
   282  0000                     	file	"C:\Users\User\AppData\Local\Temp\s3u8."
   283                           	line	#
   284                           psect cinit,class=CODE,delta=2
   285                           global start_initialization
   286                           start_initialization:
   287  03F1                     
   288                           global __initialization
   289                           __initialization:
   290  03F1                     psect	bssBANK0,class=BANK0,space=1,noexec
   291                           global __pbssBANK0
   292                           __pbssBANK0:
   293  0020                     _volt:
   294  0020                            ds      2
   295  0020                     
   296                           _i:
   297  0022                            ds      2
   298  0022                     
   299                           _loopBit:
   300  0024                            ds      1
   301  0024                     
   302                           _Reg_1:
   303  0025                            ds      1
   304  0025                     
   305                           psect	dataBANK0,class=BANK0,space=1,noexec
   306                           global __pdataBANK0
   307                           __pdataBANK0:
   308  002B                     	file	"PiCr-25.09.22.c"
   309                           	line	17
   310                           _codeCommandPlus:
   311  002B                            ds      1
   312  002B                     
   313                           psect	dataBANK0
   314                           	file	"PiCr-25.09.22.c"
   315                           	line	16
   316                           _codeCommand:
   317  002C                            ds      1
   318  002C                     
   319                           psect	dataBANK0
   320                           	file	"PiCr-25.09.22.c"
   321                           	line	15
   322                           _codeAddress:
   323  002D                            ds      1
   324  002D                     
   325                           	file	"C:\Users\User\AppData\Local\Temp\s3u8."
   326                           	line	#
   327                           ; Initialize objects allocated to BANK0
   328                           	global __pidataBANK0
   329                           psect cinit,class=CODE,delta=2,merge=1
   330                           	fcall	__pidataBANK0+0		;fetch initializer
   331  03F1  205D               	movwf	__pdataBANK0+0&07fh		
   332  03F2  00AB               	fcall	__pidataBANK0+1		;fetch initializer
   333  03F3  205E               	movwf	__pdataBANK0+1&07fh		
   334  03F4  00AC               	fcall	__pidataBANK0+2		;fetch initializer
   335  03F5  205F               	movwf	__pdataBANK0+2&07fh		
   336  03F6  00AD               	line	#
   337                           ; Clear objects allocated to BANK0
   338                           psect cinit,class=CODE,delta=2,merge=1
   339                           	clrf	((__pbssBANK0)+0)&07Fh
   340  03F7  01A0               	clrf	((__pbssBANK0)+1)&07Fh
   341  03F8  01A1               	clrf	((__pbssBANK0)+2)&07Fh
   342  03F9  01A2               	clrf	((__pbssBANK0)+3)&07Fh
   343  03FA  01A3               	clrf	((__pbssBANK0)+4)&07Fh
   344  03FB  01A4               	clrf	((__pbssBANK0)+5)&07Fh
   345  03FC  01A5               psect cinit,class=CODE,delta=2,merge=1
   346                           global end_of_initialization,__end_of__initialization
   347                           
   348                           ;End of C runtime variable initialization code
   349                           
   350                           end_of_initialization:
   351  03FD                     __end_of__initialization:
   352  03FD                     clrf status
   353  03FD  0183               ljmp _main	;jump to C main() function
   354  03FE  29F6               psect	cstackBANK0,class=BANK0,space=1,noexec
   355                           global __pcstackBANK0
   356                           __pcstackBANK0:
   357  0026                     ?_ms9And4ms:	; 1 bytes @ 0x0
   358  0026                     ??_ms9And4ms:	; 1 bytes @ 0x0
   359  0026                     ?_bit1:	; 1 bytes @ 0x0
   360  0026                     ??_bit1:	; 1 bytes @ 0x0
   361  0026                     ?_bit0:	; 1 bytes @ 0x0
   362  0026                     ??_bit0:	; 1 bytes @ 0x0
   363  0026                     ?_commandd:	; 1 bytes @ 0x0
   364  0026                     ?_ADC:	; 1 bytes @ 0x0
   365  0026                     ??_ADC:	; 1 bytes @ 0x0
   366  0026                     ?_ADC1:	; 1 bytes @ 0x0
   367  0026                     ??_ADC1:	; 1 bytes @ 0x0
   368  0026                     ?_main:	; 1 bytes @ 0x0
   369  0026                     	ds	2
   370  0026                     ??_commandd:	; 1 bytes @ 0x2
   371  0028                     	ds	1
   372  0028                     ??_main:	; 1 bytes @ 0x3
   373  0029                     	ds	2
   374  0029                     ;!
   375                           ;!Data Sizes:
   376                           ;!    Strings     0
   377                           ;!    Constant    0
   378                           ;!    Data        3
   379                           ;!    BSS         6
   380                           ;!    Persistent  0
   381                           ;!    Stack       0
   382                           ;!
   383                           ;!Auto Spaces:
   384                           ;!    Space          Size  Autos    Used
   385                           ;!    COMMON            0      0       0
   386                           ;!    BANK0            62      5      14
   387                           
   388                           ;!
   389                           ;!Pointer List with Targets:
   390                           ;!
   391                           ;!    None.
   392                           
   393                           
   394                           ;!
   395                           ;!Critical Paths under _main in COMMON
   396                           ;!
   397                           ;!    None.
   398                           ;!
   399                           ;!Critical Paths under _main in BANK0
   400                           ;!
   401                           ;!    _main->_commandd
   402                           ;!    _commandd->_ms9And4ms
   403                           
   404 ;;
   405 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   406 ;;
   407                           
   408                           ;!
   409                           ;!Call Graph Tables:
   410                           ;!
   411                           ;! ---------------------------------------------------------------------------------
   412                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   413                           ;! ---------------------------------------------------------------------------------
   414                           ;! (0) _main                                                 2     2      0       0
   415                           ;!                                              3 BANK0      2     2      0
   416                           ;!                                _ADC
   417                           ;!                               _ADC1
   418                           ;!                           _commandd
   419                           ;! ---------------------------------------------------------------------------------
   420                           ;! (1) _commandd                                             1     1      0       0
   421                           ;!                                              2 BANK0      1     1      0
   422                           ;!                               _bit0
   423                           ;!                               _bit1
   424                           ;!                          _ms9And4ms
   425                           ;! ---------------------------------------------------------------------------------
   426                           ;! (2) _ms9And4ms                                            2     2      0       0
   427                           ;!                                              0 BANK0      2     2      0
   428                           ;! ---------------------------------------------------------------------------------
   429                           ;! (2) _bit1                                                 1     1      0       0
   430                           ;!                                              0 BANK0      1     1      0
   431                           ;! ---------------------------------------------------------------------------------
   432                           ;! (2) _bit0                                                 1     1      0       0
   433                           ;!                                              0 BANK0      1     1      0
   434                           ;! ---------------------------------------------------------------------------------
   435                           ;! (1) _ADC1                                                 2     2      0       0
   436                           ;!                                              0 BANK0      2     2      0
   437                           ;! ---------------------------------------------------------------------------------
   438                           ;! (1) _ADC                                                  2     2      0       0
   439                           ;!                                              0 BANK0      2     2      0
   440                           ;! ---------------------------------------------------------------------------------
   441                           ;! Estimated maximum stack depth 2
   442                           ;! ---------------------------------------------------------------------------------
   443                           ;!
   444                           ;! Call Graph Graphs:
   445                           ;!
   446                           ;! _main (ROOT)
   447                           ;!   _ADC
   448                           ;!   _ADC1
   449                           ;!   _commandd
   450                           ;!     _bit0
   451                           ;!     _bit1
   452                           ;!     _ms9And4ms
   453                           ;!
   454                           
   455                           ;! Address spaces:
   456                           
   457                           ;!Name               Size   Autos  Total    Cost      Usage
   458                           ;!SFR1                 0      0       0       2        0.0%
   459                           ;!BITSFR1              0      0       0       2        0.0%
   460                           ;!BANK0               3E      5       E       4       22.6%
   461                           ;!BITBANK0            3E      0       0       3        0.0%
   462                           ;!SFR0                 0      0       0       1        0.0%
   463                           ;!BITSFR0              0      0       0       1        0.0%
   464                           ;!COMMON               0      0       0       1        0.0%
   465                           ;!BITCOMMON            0      0       0       0        0.0%
   466                           ;!CODE                 0      0       0       0        0.0%
   467                           ;!DATA                 0      0       E       6        0.0%
   468                           ;!ABS                  0      0       E       5        0.0%
   469                           ;!NULL                 0      0       0       0        0.0%
   470                           ;!STACK                0      0       0       2        0.0%
   471                           ;!EEDATA              80      0       0       0        0.0%
   472                           
   473                           	global	_main
   474                           
   475 ;; *************** function _main *****************
   476 ;; Defined at:
   477 ;;		line 114 in file "PiCr-25.09.22.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;		None
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg, status,2, status,0, pclath, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : B00/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMMON   BANK0
   491 ;;      Params:         0       0
   492 ;;      Locals:         0       0
   493 ;;      Temps:          0       2
   494 ;;      Totals:         0       2
   495 ;;Total ram usage:        2 bytes
   496 ;; Hardware stack levels required when called:    2
   497 ;; This function calls:
   498 ;;		_ADC
   499 ;;		_ADC1
   500 ;;		_commandd
   501 ;; This function is called by:
   502 ;;		Startup code after reset
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   506                           	file	"PiCr-25.09.22.c"
   507                           	line	114
   508                           global __pmaintext
   509                           __pmaintext:	;psect for function _main
   510  01F6                     psect	maintext
   511                           	file	"PiCr-25.09.22.c"
   512                           	line	114
   513                           	global	__size_of_main
   514                           	__size_of_main	equ	__end_of_main-_main
   515  01FB                     	
   516                           _main:	
   517  01F6                     ;incstack = 0
   518                           	opt	stack 6
   519                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   520                           	line	115
   521                           	
   522                           l1071:	
   523  01F6                     ;PiCr-25.09.22.c: 115:     RP0 = 0;
   524                           	bcf	status, 5	;RP0=0, select bank0
   525  01F6  1283               	bcf	(29/8),(29)&7	;volatile
   526  01F7  1283               	line	116
   527                           	
   528                           l1073:	
   529  01F8                     ;PiCr-25.09.22.c: 116:     codeAddress = 0b11111111;
   530                           	movlw	low(07h)
   531  01F8  3007               	movwf	(25)	;volatile
   532  01F9  0099               	line	117
   533                           	
   534                           l1075:	
   535  01FA                     ;PiCr-25.09.22.c: 117:     codeCommand = 0b11111111;
   536                           	bsf	(29/8),(29)&7	;volatile
   537  01FA  1683               	line	118
   538                           ;PiCr-25.09.22.c: 118:     commandd();
   539                           	movlw	low(080h)
   540  01FB  3080               	bsf	status, 5	;RP0=1, select bank1
   541  01FC  1683               	movwf	(144)^080h	;volatile
   542  01FD  0090               	line	119
   543                           ;PiCr-25.09.22.c: 119:     while (1) {
   544                           	movlw	low(010h)
   545  01FE  3010               	movwf	(133)^080h	;volatile
   546  01FF  0085               	line	120
   547                           	
   548                           l1077:	
   549  0200                     ;PiCr-25.09.22.c: 120:         ADC1();
   550                           	bcf	status, 5	;RP0=0, select bank0
   551  0200  1283               	bcf	(29/8),(29)&7	;volatile
   552  0201  1283               	line	121
   553                           ;PiCr-25.09.22.c: 121:         if (volt < 252 && volt > 235) {
   554                           	movlw	low(0Ch)
   555  0202  300C               	movwf	(31)	;volatile
   556  0203  009F               	line	122
   557                           	
   558                           l1079:	
   559  0204                     ;PiCr-25.09.22.c: 122:             ADC();
   560                           	clrf	(11)	;volatile
   561  0204  018B               	line	123
   562                           	
   563                           l1081:	
   564  0205                     ;PiCr-25.09.22.c: 123:             if (volt < 252 && volt > 235) {
   565                           	bsf	(29/8),(29)&7	;volatile
   566  0205  1683               	line	124
   567                           	
   568                           l1083:	
   569  0206                     ;PiCr-25.09.22.c: 124:                 codeAddress = 0b10110101;
   570                           	movlw	low(068h)
   571  0206  3068               	bsf	status, 5	;RP0=1, select bank1
   572  0207  1683               	movwf	(159)^080h	;volatile
   573  0208  009F               	line	125
   574                           	
   575                           l1085:	
   576  0209                     ;PiCr-25.09.22.c: 125:                 codeCommand = 0b10000010;
   577                           	movlw	low(083h)
   578  0209  3083               	movwf	(129)^080h	;volatile
   579  020A  0081               	line	127
   580                           	
   581                           l1087:	
   582  020B                     ;PiCr-25.09.22.c: 127:             }
   583                           	bcf	status, 5	;RP0=0, select bank0
   584  020B  1283               	bcf	(29/8),(29)&7	;volatile
   585  020C  1283               	line	128
   586                           	
   587                           l1089:	
   588  020D                     ;PiCr-25.09.22.c: 128:         }
   589                           	movlw	low(0FFh)
   590  020D  30FF               	movwf	(??_main+0)+0
   591  020E  00A9               	movf	(??_main+0)+0,w
   592  020F  0829               	movwf	(_codeAddress)
   593  0210  00AD               	line	129
   594                           	
   595                           l1091:	
   596  0211                     ;PiCr-25.09.22.c: 129: 
   597                           	movlw	low(0FFh)
   598  0211  30FF               	movwf	(??_main+0)+0
   599  0212  00A9               	movf	(??_main+0)+0,w
   600  0213  0829               	movwf	(_codeCommand)
   601  0214  00AC               	line	130
   602                           	
   603                           l1093:	
   604  0215                     ;PiCr-25.09.22.c: 130:         if (volt < 235 && volt > 210) {
   605                           	fcall	_commandd
   606  0215  2124               	goto	l1095
   607  0216  2A17               	line	131
   608                           ;PiCr-25.09.22.c: 131:             ADC();
   609                           	
   610                           l99:	
   611  0217                     	line	132
   612                           	
   613                           l1095:	
   614  0217                     ;PiCr-25.09.22.c: 132:             if (volt < 235 && volt > 210) {
   615                           	fcall	_ADC1
   616  0217  2060               	line	133
   617                           	
   618                           l1097:	
   619  0218                     ;PiCr-25.09.22.c: 133:                 codeAddress = 0b10110101;
   620                           	movlw	0
   621  0218  3000               	bcf	status, 5	;RP0=0, select bank0
   622  0219  1283               	subwf	(_volt+1),w
   623  021A  0221               	movlw	0FCh
   624  021B  30FC               	skipnz
   625  021C  1903               	subwf	(_volt),w
   626  021D  0220               	skipnc
   627  021E  1803               	goto	u931
   628  021F  2A21               	goto	u930
   629  0220  2A22               u931:
   630  0221                     	goto	l1111
   631  0221  2A4A               u930:
   632  0222                     	
   633                           l1099:	
   634  0222                     	movlw	0
   635  0222  3000               	subwf	(_volt+1),w
   636  0223  0221               	movlw	0ECh
   637  0224  30EC               	skipnz
   638  0225  1903               	subwf	(_volt),w
   639  0226  0220               	skipc
   640  0227  1C03               	goto	u941
   641  0228  2A2A               	goto	u940
   642  0229  2A2B               u941:
   643  022A                     	goto	l1111
   644  022A  2A4A               u940:
   645  022B                     	line	134
   646                           	
   647                           l1101:	
   648  022B                     ;PiCr-25.09.22.c: 134:                 codeCommand = 0b10011000;
   649                           	fcall	_ADC
   650  022B  207B               	line	135
   651                           	
   652                           l1103:	
   653  022C                     ;PiCr-25.09.22.c: 135:                 commandd();
   654                           	movlw	0
   655  022C  3000               	bcf	status, 5	;RP0=0, select bank0
   656  022D  1283               	subwf	(_volt+1),w
   657  022E  0221               	movlw	0FCh
   658  022F  30FC               	skipnz
   659  0230  1903               	subwf	(_volt),w
   660  0231  0220               	skipnc
   661  0232  1803               	goto	u951
   662  0233  2A35               	goto	u950
   663  0234  2A36               u951:
   664  0235                     	goto	l1111
   665  0235  2A4A               u950:
   666  0236                     	
   667                           l1105:	
   668  0236                     	movlw	0
   669  0236  3000               	subwf	(_volt+1),w
   670  0237  0221               	movlw	0ECh
   671  0238  30EC               	skipnz
   672  0239  1903               	subwf	(_volt),w
   673  023A  0220               	skipc
   674  023B  1C03               	goto	u961
   675  023C  2A3E               	goto	u960
   676  023D  2A3F               u961:
   677  023E                     	goto	l1111
   678  023E  2A4A               u960:
   679  023F                     	line	136
   680                           	
   681                           l1107:	
   682  023F                     ;PiCr-25.09.22.c: 136:                 _delay((unsigned long)((29)*(4000000/4000.0)));
   683                           	movlw	low(0B5h)
   684  023F  30B5               	movwf	(??_main+0)+0
   685  0240  00A9               	movf	(??_main+0)+0,w
   686  0241  0829               	movwf	(_codeAddress)
   687  0242  00AD               	line	137
   688                           ;PiCr-25.09.22.c: 137:                 codeAddress = 0b11110101;
   689                           	movlw	low(082h)
   690  0243  3082               	movwf	(??_main+0)+0
   691  0244  00A9               	movf	(??_main+0)+0,w
   692  0245  0829               	movwf	(_codeCommand)
   693  0246  00AC               	line	138
   694                           	
   695                           l1109:	
   696  0247                     ;PiCr-25.09.22.c: 138:                 codeCommand = 0b00001100;
   697                           	fcall	_commandd
   698  0247  2124               	goto	l1111
   699  0248  2A4A               	line	139
   700                           ;PiCr-25.09.22.c: 139:                 commandd();
   701                           	
   702                           l101:	
   703  0249                     	goto	l1111
   704  0249  2A4A               	line	140
   705                           ;PiCr-25.09.22.c: 140:             }
   706                           	
   707                           l100:	
   708  024A                     	line	142
   709                           	
   710                           l1111:	
   711  024A                     ;PiCr-25.09.22.c: 142: 
   712                           	movlw	0
   713  024A  3000               	bcf	status, 5	;RP0=0, select bank0
   714  024B  1283               	subwf	(_volt+1),w
   715  024C  0221               	movlw	0EBh
   716  024D  30EB               	skipnz
   717  024E  1903               	subwf	(_volt),w
   718  024F  0220               	skipnc
   719  0250  1803               	goto	u971
   720  0251  2A53               	goto	u970
   721  0252  2A54               u971:
   722  0253                     	goto	l1131
   723  0253  2A90               u970:
   724  0254                     	
   725                           l1113:	
   726  0254                     	movlw	0
   727  0254  3000               	subwf	(_volt+1),w
   728  0255  0221               	movlw	0D3h
   729  0256  30D3               	skipnz
   730  0257  1903               	subwf	(_volt),w
   731  0258  0220               	skipc
   732  0259  1C03               	goto	u981
   733  025A  2A5C               	goto	u980
   734  025B  2A5D               u981:
   735  025C                     	goto	l1131
   736  025C  2A90               u980:
   737  025D                     	line	143
   738                           	
   739                           l1115:	
   740  025D                     ;PiCr-25.09.22.c: 143:         if (volt < 210 && volt > 200) {
   741                           	fcall	_ADC
   742  025D  207B               	line	144
   743                           	
   744                           l1117:	
   745  025E                     ;PiCr-25.09.22.c: 144:             ADC();
   746                           	movlw	0
   747  025E  3000               	bcf	status, 5	;RP0=0, select bank0
   748  025F  1283               	subwf	(_volt+1),w
   749  0260  0221               	movlw	0EBh
   750  0261  30EB               	skipnz
   751  0262  1903               	subwf	(_volt),w
   752  0263  0220               	skipnc
   753  0264  1803               	goto	u991
   754  0265  2A67               	goto	u990
   755  0266  2A68               u991:
   756  0267                     	goto	l1131
   757  0267  2A90               u990:
   758  0268                     	
   759                           l1119:	
   760  0268                     	movlw	0
   761  0268  3000               	subwf	(_volt+1),w
   762  0269  0221               	movlw	0D3h
   763  026A  30D3               	skipnz
   764  026B  1903               	subwf	(_volt),w
   765  026C  0220               	skipc
   766  026D  1C03               	goto	u1001
   767  026E  2A70               	goto	u1000
   768  026F  2A71               u1001:
   769  0270                     	goto	l1131
   770  0270  2A90               u1000:
   771  0271                     	line	145
   772                           	
   773                           l1121:	
   774  0271                     ;PiCr-25.09.22.c: 145:             if (volt < 210 && volt > 200) {
   775                           	movlw	low(0B5h)
   776  0271  30B5               	movwf	(??_main+0)+0
   777  0272  00A9               	movf	(??_main+0)+0,w
   778  0273  0829               	movwf	(_codeAddress)
   779  0274  00AD               	line	146
   780                           ;PiCr-25.09.22.c: 146:                 codeAddress = 0b10110101;
   781                           	movlw	low(098h)
   782  0275  3098               	movwf	(??_main+0)+0
   783  0276  00A9               	movf	(??_main+0)+0,w
   784  0277  0829               	movwf	(_codeCommand)
   785  0278  00AC               	line	147
   786                           	
   787                           l1123:	
   788  0279                     ;PiCr-25.09.22.c: 147:                 codeCommand = 0b00011010;
   789                           	fcall	_commandd
   790  0279  2124               	line	148
   791                           	
   792                           l1125:	
   793  027A                     ;PiCr-25.09.22.c: 148:                 commandd();
   794                           	opt asmopt_push
   795                           opt asmopt_off
   796                           movlw	38
   797  027A  3026               	bcf	status, 5	;RP0=0, select bank0
   798  027B  1283               movwf	((??_main+0)+0+1),f
   799  027C  00AA               	movlw	168
   800  027D  30A8               movwf	((??_main+0)+0),f
   801  027E  00A9               	u1297:
   802  027F                     decfsz	((??_main+0)+0),f
   803  027F  0BA9               	goto	u1297
   804  0280  2A7F               	decfsz	((??_main+0)+0+1),f
   805  0281  0BAA               	goto	u1297
   806  0282  2A7F               	nop
   807  0283  0000               opt asmopt_pop
   808                           
   809                           	line	149
   810                           	
   811                           l1127:	
   812  0284                     ;PiCr-25.09.22.c: 149:             }
   813                           	movlw	low(0F5h)
   814  0284  30F5               	bcf	status, 5	;RP0=0, select bank0
   815  0285  1283               	movwf	(??_main+0)+0
   816  0286  00A9               	movf	(??_main+0)+0,w
   817  0287  0829               	movwf	(_codeAddress)
   818  0288  00AD               	line	150
   819                           	
   820                           l1129:	
   821  0289                     ;PiCr-25.09.22.c: 150:         }
   822                           	movlw	low(0Ch)
   823  0289  300C               	movwf	(??_main+0)+0
   824  028A  00A9               	movf	(??_main+0)+0,w
   825  028B  0829               	movwf	(_codeCommand)
   826  028C  00AC               	line	151
   827                           ;PiCr-25.09.22.c: 151: 
   828                           	fcall	_commandd
   829  028D  2124               	goto	l1131
   830  028E  2A90               	line	152
   831                           ;PiCr-25.09.22.c: 152:         if (volt < 200 && volt > 189) {
   832                           	
   833                           l103:	
   834  028F                     	goto	l1131
   835  028F  2A90               	line	153
   836                           ;PiCr-25.09.22.c: 153:             ADC();
   837                           	
   838                           l102:	
   839  0290                     	line	155
   840                           	
   841                           l1131:	
   842  0290                     ;PiCr-25.09.22.c: 155:                 codeAddress = 0b10110101;
   843                           	movlw	0
   844  0290  3000               	bcf	status, 5	;RP0=0, select bank0
   845  0291  1283               	subwf	(_volt+1),w
   846  0292  0221               	movlw	0D2h
   847  0293  30D2               	skipnz
   848  0294  1903               	subwf	(_volt),w
   849  0295  0220               	skipnc
   850  0296  1803               	goto	u1011
   851  0297  2A99               	goto	u1010
   852  0298  2A9A               u1011:
   853  0299                     	goto	l1145
   854  0299  2AC2               u1010:
   855  029A                     	
   856                           l1133:	
   857  029A                     	movlw	0
   858  029A  3000               	subwf	(_volt+1),w
   859  029B  0221               	movlw	0C9h
   860  029C  30C9               	skipnz
   861  029D  1903               	subwf	(_volt),w
   862  029E  0220               	skipc
   863  029F  1C03               	goto	u1021
   864  02A0  2AA2               	goto	u1020
   865  02A1  2AA3               u1021:
   866  02A2                     	goto	l1145
   867  02A2  2AC2               u1020:
   868  02A3                     	line	156
   869                           	
   870                           l1135:	
   871  02A3                     ;PiCr-25.09.22.c: 156:                 codeCommand = 0b01011000;
   872                           	fcall	_ADC
   873  02A3  207B               	line	157
   874                           	
   875                           l1137:	
   876  02A4                     ;PiCr-25.09.22.c: 157:                 commandd();
   877                           	movlw	0
   878  02A4  3000               	bcf	status, 5	;RP0=0, select bank0
   879  02A5  1283               	subwf	(_volt+1),w
   880  02A6  0221               	movlw	0D2h
   881  02A7  30D2               	skipnz
   882  02A8  1903               	subwf	(_volt),w
   883  02A9  0220               	skipnc
   884  02AA  1803               	goto	u1031
   885  02AB  2AAD               	goto	u1030
   886  02AC  2AAE               u1031:
   887  02AD                     	goto	l1145
   888  02AD  2AC2               u1030:
   889  02AE                     	
   890                           l1139:	
   891  02AE                     	movlw	0
   892  02AE  3000               	subwf	(_volt+1),w
   893  02AF  0221               	movlw	0C9h
   894  02B0  30C9               	skipnz
   895  02B1  1903               	subwf	(_volt),w
   896  02B2  0220               	skipc
   897  02B3  1C03               	goto	u1041
   898  02B4  2AB6               	goto	u1040
   899  02B5  2AB7               u1041:
   900  02B6                     	goto	l1145
   901  02B6  2AC2               u1040:
   902  02B7                     	line	158
   903                           	
   904                           l1141:	
   905  02B7                     ;PiCr-25.09.22.c: 158:             }
   906                           	movlw	low(0B5h)
   907  02B7  30B5               	movwf	(??_main+0)+0
   908  02B8  00A9               	movf	(??_main+0)+0,w
   909  02B9  0829               	movwf	(_codeAddress)
   910  02BA  00AD               	line	159
   911                           ;PiCr-25.09.22.c: 159:         }
   912                           	movlw	low(01Ah)
   913  02BB  301A               	movwf	(??_main+0)+0
   914  02BC  00A9               	movf	(??_main+0)+0,w
   915  02BD  0829               	movwf	(_codeCommand)
   916  02BE  00AC               	line	160
   917                           	
   918                           l1143:	
   919  02BF                     ;PiCr-25.09.22.c: 160: 
   920                           	fcall	_commandd
   921  02BF  2124               	goto	l1145
   922  02C0  2AC2               	line	161
   923                           ;PiCr-25.09.22.c: 161:         if (volt < 189 && volt > 175) {
   924                           	
   925                           l105:	
   926  02C1                     	goto	l1145
   927  02C1  2AC2               	line	162
   928                           ;PiCr-25.09.22.c: 162:             ADC();
   929                           	
   930                           l104:	
   931  02C2                     	line	164
   932                           	
   933                           l1145:	
   934  02C2                     ;PiCr-25.09.22.c: 164:                 codeAddress = 0b10110101;
   935                           	movlw	0
   936  02C2  3000               	bcf	status, 5	;RP0=0, select bank0
   937  02C3  1283               	subwf	(_volt+1),w
   938  02C4  0221               	movlw	0C8h
   939  02C5  30C8               	skipnz
   940  02C6  1903               	subwf	(_volt),w
   941  02C7  0220               	skipnc
   942  02C8  1803               	goto	u1051
   943  02C9  2ACB               	goto	u1050
   944  02CA  2ACC               u1051:
   945  02CB                     	goto	l1159
   946  02CB  2AF4               u1050:
   947  02CC                     	
   948                           l1147:	
   949  02CC                     	movlw	0
   950  02CC  3000               	subwf	(_volt+1),w
   951  02CD  0221               	movlw	0BEh
   952  02CE  30BE               	skipnz
   953  02CF  1903               	subwf	(_volt),w
   954  02D0  0220               	skipc
   955  02D1  1C03               	goto	u1061
   956  02D2  2AD4               	goto	u1060
   957  02D3  2AD5               u1061:
   958  02D4                     	goto	l1159
   959  02D4  2AF4               u1060:
   960  02D5                     	line	165
   961                           	
   962                           l1149:	
   963  02D5                     ;PiCr-25.09.22.c: 165:                 codeCommand = 0b01000010;
   964                           	fcall	_ADC
   965  02D5  207B               	line	166
   966                           	
   967                           l1151:	
   968  02D6                     ;PiCr-25.09.22.c: 166:                 commandd();
   969                           	movlw	0
   970  02D6  3000               	bcf	status, 5	;RP0=0, select bank0
   971  02D7  1283               	subwf	(_volt+1),w
   972  02D8  0221               	movlw	0C8h
   973  02D9  30C8               	skipnz
   974  02DA  1903               	subwf	(_volt),w
   975  02DB  0220               	skipnc
   976  02DC  1803               	goto	u1071
   977  02DD  2ADF               	goto	u1070
   978  02DE  2AE0               u1071:
   979  02DF                     	goto	l1159
   980  02DF  2AF4               u1070:
   981  02E0                     	
   982                           l1153:	
   983  02E0                     	movlw	0
   984  02E0  3000               	subwf	(_volt+1),w
   985  02E1  0221               	movlw	0BEh
   986  02E2  30BE               	skipnz
   987  02E3  1903               	subwf	(_volt),w
   988  02E4  0220               	skipc
   989  02E5  1C03               	goto	u1081
   990  02E6  2AE8               	goto	u1080
   991  02E7  2AE9               u1081:
   992  02E8                     	goto	l1159
   993  02E8  2AF4               u1080:
   994  02E9                     	line	167
   995                           	
   996                           l1155:	
   997  02E9                     ;PiCr-25.09.22.c: 167:             }
   998                           	movlw	low(0B5h)
   999  02E9  30B5               	movwf	(??_main+0)+0
  1000  02EA  00A9               	movf	(??_main+0)+0,w
  1001  02EB  0829               	movwf	(_codeAddress)
  1002  02EC  00AD               	line	168
  1003                           ;PiCr-25.09.22.c: 168:         }
  1004                           	movlw	low(058h)
  1005  02ED  3058               	movwf	(??_main+0)+0
  1006  02EE  00A9               	movf	(??_main+0)+0,w
  1007  02EF  0829               	movwf	(_codeCommand)
  1008  02F0  00AC               	line	169
  1009                           	
  1010                           l1157:	
  1011  02F1                     ;PiCr-25.09.22.c: 169: 
  1012                           	fcall	_commandd
  1013  02F1  2124               	goto	l1159
  1014  02F2  2AF4               	line	170
  1015                           ;PiCr-25.09.22.c: 170:         if (volt < 175 && volt > 163) {
  1016                           	
  1017                           l107:	
  1018  02F3                     	goto	l1159
  1019  02F3  2AF4               	line	171
  1020                           ;PiCr-25.09.22.c: 171:             ADC();
  1021                           	
  1022                           l106:	
  1023  02F4                     	line	173
  1024                           	
  1025                           l1159:	
  1026  02F4                     ;PiCr-25.09.22.c: 173:                 codeAddress = 0b10110101;
  1027                           	movlw	0
  1028  02F4  3000               	bcf	status, 5	;RP0=0, select bank0
  1029  02F5  1283               	subwf	(_volt+1),w
  1030  02F6  0221               	movlw	0BDh
  1031  02F7  30BD               	skipnz
  1032  02F8  1903               	subwf	(_volt),w
  1033  02F9  0220               	skipnc
  1034  02FA  1803               	goto	u1091
  1035  02FB  2AFD               	goto	u1090
  1036  02FC  2AFE               u1091:
  1037  02FD                     	goto	l1173
  1038  02FD  2B26               u1090:
  1039  02FE                     	
  1040                           l1161:	
  1041  02FE                     	movlw	0
  1042  02FE  3000               	subwf	(_volt+1),w
  1043  02FF  0221               	movlw	0B0h
  1044  0300  30B0               	skipnz
  1045  0301  1903               	subwf	(_volt),w
  1046  0302  0220               	skipc
  1047  0303  1C03               	goto	u1101
  1048  0304  2B06               	goto	u1100
  1049  0305  2B07               u1101:
  1050  0306                     	goto	l1173
  1051  0306  2B26               u1100:
  1052  0307                     	line	174
  1053                           	
  1054                           l1163:	
  1055  0307                     ;PiCr-25.09.22.c: 174:                 codeCommand = 0b11000010;
  1056                           	fcall	_ADC
  1057  0307  207B               	line	175
  1058                           	
  1059                           l1165:	
  1060  0308                     ;PiCr-25.09.22.c: 175:                 commandd();
  1061                           	movlw	0
  1062  0308  3000               	bcf	status, 5	;RP0=0, select bank0
  1063  0309  1283               	subwf	(_volt+1),w
  1064  030A  0221               	movlw	0BDh
  1065  030B  30BD               	skipnz
  1066  030C  1903               	subwf	(_volt),w
  1067  030D  0220               	skipnc
  1068  030E  1803               	goto	u1111
  1069  030F  2B11               	goto	u1110
  1070  0310  2B12               u1111:
  1071  0311                     	goto	l1173
  1072  0311  2B26               u1110:
  1073  0312                     	
  1074                           l1167:	
  1075  0312                     	movlw	0
  1076  0312  3000               	subwf	(_volt+1),w
  1077  0313  0221               	movlw	0B0h
  1078  0314  30B0               	skipnz
  1079  0315  1903               	subwf	(_volt),w
  1080  0316  0220               	skipc
  1081  0317  1C03               	goto	u1121
  1082  0318  2B1A               	goto	u1120
  1083  0319  2B1B               u1121:
  1084  031A                     	goto	l1173
  1085  031A  2B26               u1120:
  1086  031B                     	line	176
  1087                           	
  1088                           l1169:	
  1089  031B                     ;PiCr-25.09.22.c: 176:             }
  1090                           	movlw	low(0B5h)
  1091  031B  30B5               	movwf	(??_main+0)+0
  1092  031C  00A9               	movf	(??_main+0)+0,w
  1093  031D  0829               	movwf	(_codeAddress)
  1094  031E  00AD               	line	177
  1095                           ;PiCr-25.09.22.c: 177:         }
  1096                           	movlw	low(042h)
  1097  031F  3042               	movwf	(??_main+0)+0
  1098  0320  00A9               	movf	(??_main+0)+0,w
  1099  0321  0829               	movwf	(_codeCommand)
  1100  0322  00AC               	line	178
  1101                           	
  1102                           l1171:	
  1103  0323                     ;PiCr-25.09.22.c: 178: 
  1104                           	fcall	_commandd
  1105  0323  2124               	goto	l1173
  1106  0324  2B26               	line	179
  1107                           ;PiCr-25.09.22.c: 179:         if (volt < 163 && volt > 148) {
  1108                           	
  1109                           l109:	
  1110  0325                     	goto	l1173
  1111  0325  2B26               	line	180
  1112                           ;PiCr-25.09.22.c: 180:             ADC();
  1113                           	
  1114                           l108:	
  1115  0326                     	line	182
  1116                           	
  1117                           l1173:	
  1118  0326                     ;PiCr-25.09.22.c: 182:                 codeAddress = 0b10110101;
  1119                           	movlw	0
  1120  0326  3000               	bcf	status, 5	;RP0=0, select bank0
  1121  0327  1283               	subwf	(_volt+1),w
  1122  0328  0221               	movlw	0AFh
  1123  0329  30AF               	skipnz
  1124  032A  1903               	subwf	(_volt),w
  1125  032B  0220               	skipnc
  1126  032C  1803               	goto	u1131
  1127  032D  2B2F               	goto	u1130
  1128  032E  2B30               u1131:
  1129  032F                     	goto	l1187
  1130  032F  2B58               u1130:
  1131  0330                     	
  1132                           l1175:	
  1133  0330                     	movlw	0
  1134  0330  3000               	subwf	(_volt+1),w
  1135  0331  0221               	movlw	0A4h
  1136  0332  30A4               	skipnz
  1137  0333  1903               	subwf	(_volt),w
  1138  0334  0220               	skipc
  1139  0335  1C03               	goto	u1141
  1140  0336  2B38               	goto	u1140
  1141  0337  2B39               u1141:
  1142  0338                     	goto	l1187
  1143  0338  2B58               u1140:
  1144  0339                     	line	183
  1145                           	
  1146                           l1177:	
  1147  0339                     ;PiCr-25.09.22.c: 183:                 codeCommand = 0b11010000;
  1148                           	fcall	_ADC
  1149  0339  207B               	line	184
  1150                           	
  1151                           l1179:	
  1152  033A                     ;PiCr-25.09.22.c: 184:                 commandd();
  1153                           	movlw	0
  1154  033A  3000               	bcf	status, 5	;RP0=0, select bank0
  1155  033B  1283               	subwf	(_volt+1),w
  1156  033C  0221               	movlw	0AFh
  1157  033D  30AF               	skipnz
  1158  033E  1903               	subwf	(_volt),w
  1159  033F  0220               	skipnc
  1160  0340  1803               	goto	u1151
  1161  0341  2B43               	goto	u1150
  1162  0342  2B44               u1151:
  1163  0343                     	goto	l1187
  1164  0343  2B58               u1150:
  1165  0344                     	
  1166                           l1181:	
  1167  0344                     	movlw	0
  1168  0344  3000               	subwf	(_volt+1),w
  1169  0345  0221               	movlw	0A4h
  1170  0346  30A4               	skipnz
  1171  0347  1903               	subwf	(_volt),w
  1172  0348  0220               	skipc
  1173  0349  1C03               	goto	u1161
  1174  034A  2B4C               	goto	u1160
  1175  034B  2B4D               u1161:
  1176  034C                     	goto	l1187
  1177  034C  2B58               u1160:
  1178  034D                     	line	185
  1179                           	
  1180                           l1183:	
  1181  034D                     ;PiCr-25.09.22.c: 185:             }
  1182                           	movlw	low(0B5h)
  1183  034D  30B5               	movwf	(??_main+0)+0
  1184  034E  00A9               	movf	(??_main+0)+0,w
  1185  034F  0829               	movwf	(_codeAddress)
  1186  0350  00AD               	line	186
  1187                           ;PiCr-25.09.22.c: 186:         }
  1188                           	movlw	low(0C2h)
  1189  0351  30C2               	movwf	(??_main+0)+0
  1190  0352  00A9               	movf	(??_main+0)+0,w
  1191  0353  0829               	movwf	(_codeCommand)
  1192  0354  00AC               	line	187
  1193                           	
  1194                           l1185:	
  1195  0355                     ;PiCr-25.09.22.c: 187: 
  1196                           	fcall	_commandd
  1197  0355  2124               	goto	l1187
  1198  0356  2B58               	line	188
  1199                           ;PiCr-25.09.22.c: 188:         if (volt < 148 && volt > 70) {
  1200                           	
  1201                           l111:	
  1202  0357                     	goto	l1187
  1203  0357  2B58               	line	189
  1204                           ;PiCr-25.09.22.c: 189:             ADC();
  1205                           	
  1206                           l110:	
  1207  0358                     	line	191
  1208                           	
  1209                           l1187:	
  1210  0358                     ;PiCr-25.09.22.c: 191:                 codeAddress = 0b10110101;
  1211                           	movlw	0
  1212  0358  3000               	bcf	status, 5	;RP0=0, select bank0
  1213  0359  1283               	subwf	(_volt+1),w
  1214  035A  0221               	movlw	0A3h
  1215  035B  30A3               	skipnz
  1216  035C  1903               	subwf	(_volt),w
  1217  035D  0220               	skipnc
  1218  035E  1803               	goto	u1171
  1219  035F  2B61               	goto	u1170
  1220  0360  2B62               u1171:
  1221  0361                     	goto	l1201
  1222  0361  2B8A               u1170:
  1223  0362                     	
  1224                           l1189:	
  1225  0362                     	movlw	0
  1226  0362  3000               	subwf	(_volt+1),w
  1227  0363  0221               	movlw	095h
  1228  0364  3095               	skipnz
  1229  0365  1903               	subwf	(_volt),w
  1230  0366  0220               	skipc
  1231  0367  1C03               	goto	u1181
  1232  0368  2B6A               	goto	u1180
  1233  0369  2B6B               u1181:
  1234  036A                     	goto	l1201
  1235  036A  2B8A               u1180:
  1236  036B                     	line	192
  1237                           	
  1238                           l1191:	
  1239  036B                     ;PiCr-25.09.22.c: 192:                 codeCommand = 0b01010000;
  1240                           	fcall	_ADC
  1241  036B  207B               	line	193
  1242                           	
  1243                           l1193:	
  1244  036C                     ;PiCr-25.09.22.c: 193:                 commandd();
  1245                           	movlw	0
  1246  036C  3000               	bcf	status, 5	;RP0=0, select bank0
  1247  036D  1283               	subwf	(_volt+1),w
  1248  036E  0221               	movlw	0A3h
  1249  036F  30A3               	skipnz
  1250  0370  1903               	subwf	(_volt),w
  1251  0371  0220               	skipnc
  1252  0372  1803               	goto	u1191
  1253  0373  2B75               	goto	u1190
  1254  0374  2B76               u1191:
  1255  0375                     	goto	l1201
  1256  0375  2B8A               u1190:
  1257  0376                     	
  1258                           l1195:	
  1259  0376                     	movlw	0
  1260  0376  3000               	subwf	(_volt+1),w
  1261  0377  0221               	movlw	095h
  1262  0378  3095               	skipnz
  1263  0379  1903               	subwf	(_volt),w
  1264  037A  0220               	skipc
  1265  037B  1C03               	goto	u1201
  1266  037C  2B7E               	goto	u1200
  1267  037D  2B7F               u1201:
  1268  037E                     	goto	l1201
  1269  037E  2B8A               u1200:
  1270  037F                     	line	194
  1271                           	
  1272                           l1197:	
  1273  037F                     ;PiCr-25.09.22.c: 194:             }
  1274                           	movlw	low(0B5h)
  1275  037F  30B5               	movwf	(??_main+0)+0
  1276  0380  00A9               	movf	(??_main+0)+0,w
  1277  0381  0829               	movwf	(_codeAddress)
  1278  0382  00AD               	line	195
  1279                           ;PiCr-25.09.22.c: 195:         }
  1280                           	movlw	low(0D0h)
  1281  0383  30D0               	movwf	(??_main+0)+0
  1282  0384  00A9               	movf	(??_main+0)+0,w
  1283  0385  0829               	movwf	(_codeCommand)
  1284  0386  00AC               	line	196
  1285                           	
  1286                           l1199:	
  1287  0387                     ;PiCr-25.09.22.c: 196: 
  1288                           	fcall	_commandd
  1289  0387  2124               	goto	l1201
  1290  0388  2B8A               	line	197
  1291                           ;PiCr-25.09.22.c: 197:         if (volt < 70 && volt > 1) {
  1292                           	
  1293                           l113:	
  1294  0389                     	goto	l1201
  1295  0389  2B8A               	line	198
  1296                           ;PiCr-25.09.22.c: 198:             ADC();
  1297                           	
  1298                           l112:	
  1299  038A                     	line	200
  1300                           	
  1301                           l1201:	
  1302  038A                     ;PiCr-25.09.22.c: 200:                 codeAddress = 0b10110101;
  1303                           	movlw	0
  1304  038A  3000               	bcf	status, 5	;RP0=0, select bank0
  1305  038B  1283               	subwf	(_volt+1),w
  1306  038C  0221               	movlw	094h
  1307  038D  3094               	skipnz
  1308  038E  1903               	subwf	(_volt),w
  1309  038F  0220               	skipnc
  1310  0390  1803               	goto	u1211
  1311  0391  2B93               	goto	u1210
  1312  0392  2B94               u1211:
  1313  0393                     	goto	l1215
  1314  0393  2BBC               u1210:
  1315  0394                     	
  1316                           l1203:	
  1317  0394                     	movlw	0
  1318  0394  3000               	subwf	(_volt+1),w
  1319  0395  0221               	movlw	047h
  1320  0396  3047               	skipnz
  1321  0397  1903               	subwf	(_volt),w
  1322  0398  0220               	skipc
  1323  0399  1C03               	goto	u1221
  1324  039A  2B9C               	goto	u1220
  1325  039B  2B9D               u1221:
  1326  039C                     	goto	l1215
  1327  039C  2BBC               u1220:
  1328  039D                     	line	201
  1329                           	
  1330                           l1205:	
  1331  039D                     ;PiCr-25.09.22.c: 201:                 codeCommand = 0b00000010;
  1332                           	fcall	_ADC
  1333  039D  207B               	line	202
  1334                           	
  1335                           l1207:	
  1336  039E                     ;PiCr-25.09.22.c: 202:                 commandd();
  1337                           	movlw	0
  1338  039E  3000               	bcf	status, 5	;RP0=0, select bank0
  1339  039F  1283               	subwf	(_volt+1),w
  1340  03A0  0221               	movlw	094h
  1341  03A1  3094               	skipnz
  1342  03A2  1903               	subwf	(_volt),w
  1343  03A3  0220               	skipnc
  1344  03A4  1803               	goto	u1231
  1345  03A5  2BA7               	goto	u1230
  1346  03A6  2BA8               u1231:
  1347  03A7                     	goto	l1215
  1348  03A7  2BBC               u1230:
  1349  03A8                     	
  1350                           l1209:	
  1351  03A8                     	movlw	0
  1352  03A8  3000               	subwf	(_volt+1),w
  1353  03A9  0221               	movlw	047h
  1354  03AA  3047               	skipnz
  1355  03AB  1903               	subwf	(_volt),w
  1356  03AC  0220               	skipc
  1357  03AD  1C03               	goto	u1241
  1358  03AE  2BB0               	goto	u1240
  1359  03AF  2BB1               u1241:
  1360  03B0                     	goto	l1215
  1361  03B0  2BBC               u1240:
  1362  03B1                     	line	203
  1363                           	
  1364                           l1211:	
  1365  03B1                     ;PiCr-25.09.22.c: 203:             }
  1366                           	movlw	low(0B5h)
  1367  03B1  30B5               	movwf	(??_main+0)+0
  1368  03B2  00A9               	movf	(??_main+0)+0,w
  1369  03B3  0829               	movwf	(_codeAddress)
  1370  03B4  00AD               	line	204
  1371                           ;PiCr-25.09.22.c: 204:         }
  1372                           	movlw	low(050h)
  1373  03B5  3050               	movwf	(??_main+0)+0
  1374  03B6  00A9               	movf	(??_main+0)+0,w
  1375  03B7  0829               	movwf	(_codeCommand)
  1376  03B8  00AC               	line	205
  1377                           	
  1378                           l1213:	
  1379  03B9                     ;PiCr-25.09.22.c: 205:     }
  1380                           	fcall	_commandd
  1381  03B9  2124               	goto	l1215
  1382  03BA  2BBC               	line	206
  1383                           ;PiCr-25.09.22.c: 206: }
  1384                           	
  1385                           l115:	
  1386  03BB                     	goto	l1215
  1387  03BB  2BBC               	line	207
  1388                           	
  1389                           l114:	
  1390  03BC                     	line	209
  1391                           	
  1392                           l1215:	
  1393  03BC                     	movlw	0
  1394  03BC  3000               	bcf	status, 5	;RP0=0, select bank0
  1395  03BD  1283               	subwf	(_volt+1),w
  1396  03BE  0221               	movlw	046h
  1397  03BF  3046               	skipnz
  1398  03C0  1903               	subwf	(_volt),w
  1399  03C1  0220               	skipnc
  1400  03C2  1803               	goto	u1251
  1401  03C3  2BC5               	goto	u1250
  1402  03C4  2BC6               u1251:
  1403  03C5                     	goto	l1095
  1404  03C5  2A17               u1250:
  1405  03C6                     	
  1406                           l1217:	
  1407  03C6                     	movlw	0
  1408  03C6  3000               	subwf	(_volt+1),w
  1409  03C7  0221               	movlw	02h
  1410  03C8  3002               	skipnz
  1411  03C9  1903               	subwf	(_volt),w
  1412  03CA  0220               	skipc
  1413  03CB  1C03               	goto	u1261
  1414  03CC  2BCE               	goto	u1260
  1415  03CD  2BCF               u1261:
  1416  03CE                     	goto	l1095
  1417  03CE  2A17               u1260:
  1418  03CF                     	line	210
  1419                           	
  1420                           l1219:	
  1421  03CF                     	fcall	_ADC
  1422  03CF  207B               	line	211
  1423                           	
  1424                           l1221:	
  1425  03D0                     	movlw	0
  1426  03D0  3000               	bcf	status, 5	;RP0=0, select bank0
  1427  03D1  1283               	subwf	(_volt+1),w
  1428  03D2  0221               	movlw	046h
  1429  03D3  3046               	skipnz
  1430  03D4  1903               	subwf	(_volt),w
  1431  03D5  0220               	skipnc
  1432  03D6  1803               	goto	u1271
  1433  03D7  2BD9               	goto	u1270
  1434  03D8  2BDA               u1271:
  1435  03D9                     	goto	l1095
  1436  03D9  2A17               u1270:
  1437  03DA                     	
  1438                           l1223:	
  1439  03DA                     	movlw	0
  1440  03DA  3000               	subwf	(_volt+1),w
  1441  03DB  0221               	movlw	02h
  1442  03DC  3002               	skipnz
  1443  03DD  1903               	subwf	(_volt),w
  1444  03DE  0220               	skipc
  1445  03DF  1C03               	goto	u1281
  1446  03E0  2BE2               	goto	u1280
  1447  03E1  2BE3               u1281:
  1448  03E2                     	goto	l1095
  1449  03E2  2A17               u1280:
  1450  03E3                     	line	212
  1451                           	
  1452                           l1225:	
  1453  03E3                     	movlw	low(0B5h)
  1454  03E3  30B5               	movwf	(??_main+0)+0
  1455  03E4  00A9               	movf	(??_main+0)+0,w
  1456  03E5  0829               	movwf	(_codeAddress)
  1457  03E6  00AD               	line	213
  1458                           	movlw	low(02h)
  1459  03E7  3002               	movwf	(??_main+0)+0
  1460  03E8  00A9               	movf	(??_main+0)+0,w
  1461  03E9  0829               	movwf	(_codeCommand)
  1462  03EA  00AC               	line	214
  1463                           	
  1464                           l1227:	
  1465  03EB                     	fcall	_commandd
  1466  03EB  2124               	goto	l1095
  1467  03EC  2A17               	line	215
  1468                           	
  1469                           l117:	
  1470  03ED                     	goto	l1095
  1471  03ED  2A17               	line	216
  1472                           	
  1473                           l116:	
  1474  03EE                     	goto	l1095
  1475  03EE  2A17               	line	217
  1476                           	
  1477                           l118:	
  1478  03EF                     	goto	l1095
  1479  03EF  2A17               	
  1480                           l119:	
  1481  03F0                     	line	218
  1482                           	
  1483                           l120:	
  1484  03F0                     	global	start
  1485                           	ljmp	start
  1486  03F0  2800               	opt stack 0
  1487                           GLOBAL	__end_of_main
  1488                           	__end_of_main:
  1489  03F1                     	signat	_main,89
  1490                           	global	_commandd
  1491                           
  1492 ;; *************** function _commandd *****************
  1493 ;; Defined at:
  1494 ;;		line 50 in file "PiCr-25.09.22.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;		None
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;		None
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      void 
  1501 ;; Registers used:
  1502 ;;		wreg, status,2, status,0, pclath, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMMON   BANK0
  1508 ;;      Params:         0       0
  1509 ;;      Locals:         0       0
  1510 ;;      Temps:          0       1
  1511 ;;      Totals:         0       1
  1512 ;;Total ram usage:        1 bytes
  1513 ;; Hardware stack levels used:    1
  1514 ;; Hardware stack levels required when called:    1
  1515 ;; This function calls:
  1516 ;;		_bit0
  1517 ;;		_bit1
  1518 ;;		_ms9And4ms
  1519 ;; This function is called by:
  1520 ;;		_main
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1524                           	line	50
  1525                           global __ptext1
  1526                           __ptext1:	;psect for function _commandd
  1527  0124                     psect	text1
  1528                           	file	"PiCr-25.09.22.c"
  1529                           	line	50
  1530                           	global	__size_of_commandd
  1531                           	__size_of_commandd	equ	__end_of_commandd-_commandd
  1532  00D2                     	
  1533                           _commandd:	
  1534  0124                     ;incstack = 0
  1535                           	opt	stack 6
  1536                           ; Regs used in _commandd: [wreg+status,2+status,0+pclath+cstack]
  1537                           	line	51
  1538                           	
  1539                           l997:	
  1540  0124                     ;PiCr-25.09.22.c: 51:     while (loopBit > 0) {
  1541                           	fcall	_ms9And4ms
  1542  0124  20F6               	line	52
  1543                           	
  1544                           l999:	
  1545  0125                     ;PiCr-25.09.22.c: 52:         loopBit--;
  1546                           	movlw	low(08h)
  1547  0125  3008               	bcf	status, 5	;RP0=0, select bank0
  1548  0126  1283               	movwf	(??_commandd+0)+0
  1549  0127  00A8               	movf	(??_commandd+0)+0,w
  1550  0128  0828               	movwf	(_loopBit)
  1551  0129  00A4               	line	53
  1552                           ;PiCr-25.09.22.c: 53:         if (!(codeAddress & (1 << loopBit))) {
  1553                           	goto	l1009
  1554  012A  2952               	
  1555                           l59:	
  1556  012B                     	line	54
  1557                           	
  1558                           l1001:	
  1559  012B                     ;PiCr-25.09.22.c: 54:             bit0();
  1560                           	movlw	01h
  1561  012B  3001               	subwf	(_loopBit),f
  1562  012C  02A4               	line	55
  1563                           ;PiCr-25.09.22.c: 55:         } else if (codeAddress & (1 << loopBit)) {
  1564                           	movlw	low(01h)
  1565  012D  3001               	movwf	(??_commandd+0)+0
  1566  012E  00A8               	incf	(_loopBit),w
  1567  012F  0A24               	goto	u714
  1568  0130  2933               u715:
  1569  0131                     	clrc
  1570  0131  1003               	rlf	(??_commandd+0)+0,f
  1571  0132  0DA8               u714:
  1572  0133                     	addlw	-1
  1573  0133  3EFF               	skipz
  1574  0134  1D03               	goto	u715
  1575  0135  2931               	movf	0+(??_commandd+0)+0,w
  1576  0136  0828               	andwf	(_codeAddress),w
  1577  0137  052D               	btfss	status,2
  1578  0138  1D03               	goto	u721
  1579  0139  293B               	goto	u720
  1580  013A  293C               u721:
  1581  013B                     	goto	l1005
  1582  013B  293E               u720:
  1583  013C                     	line	56
  1584                           	
  1585                           l1003:	
  1586  013C                     ;PiCr-25.09.22.c: 56:             bit1();
  1587                           	fcall	_bit0
  1588  013C  209D               	line	57
  1589                           ;PiCr-25.09.22.c: 57:         }
  1590                           	goto	l1009
  1591  013D  2952               	
  1592                           l60:	
  1593  013E                     	
  1594                           l1005:	
  1595  013E                     	movlw	low(01h)
  1596  013E  3001               	bcf	status, 5	;RP0=0, select bank0
  1597  013F  1283               	movwf	(??_commandd+0)+0
  1598  0140  00A8               	incf	(_loopBit),w
  1599  0141  0A24               	goto	u734
  1600  0142  2945               u735:
  1601  0143                     	clrc
  1602  0143  1003               	rlf	(??_commandd+0)+0,f
  1603  0144  0DA8               u734:
  1604  0145                     	addlw	-1
  1605  0145  3EFF               	skipz
  1606  0146  1D03               	goto	u735
  1607  0147  2943               	movf	0+(??_commandd+0)+0,w
  1608  0148  0828               	andwf	(_codeAddress),w
  1609  0149  052D               	btfsc	status,2
  1610  014A  1903               	goto	u741
  1611  014B  294D               	goto	u740
  1612  014C  294E               u741:
  1613  014D                     	goto	l1009
  1614  014D  2952               u740:
  1615  014E                     	line	58
  1616                           	
  1617                           l1007:	
  1618  014E                     ;PiCr-25.09.22.c: 58:     }
  1619                           	fcall	_bit1
  1620  014E  20C8               	goto	l1009
  1621  014F  2952               	line	59
  1622                           ;PiCr-25.09.22.c: 59:     codeAddress = ~codeAddress;
  1623                           	
  1624                           l62:	
  1625  0150                     	goto	l1009
  1626  0150  2952               	
  1627                           l61:	
  1628  0151                     	goto	l1009
  1629  0151  2952               	line	60
  1630                           ;PiCr-25.09.22.c: 60:     loopBit = 8;
  1631                           	
  1632                           l58:	
  1633  0152                     	line	53
  1634                           	
  1635                           l1009:	
  1636  0152                     ;PiCr-25.09.22.c: 53:         if (!(codeAddress & (1 << loopBit))) {
  1637                           	bcf	status, 5	;RP0=0, select bank0
  1638  0152  1283               	movf	((_loopBit)),w
  1639  0153  0824               	btfss	status,2
  1640  0154  1D03               	goto	u751
  1641  0155  2957               	goto	u750
  1642  0156  2958               u751:
  1643  0157                     	goto	l1001
  1644  0157  292B               u750:
  1645  0158                     	
  1646                           l63:	
  1647  0158                     	line	61
  1648                           ;PiCr-25.09.22.c: 61:     while (loopBit > 0) {
  1649                           	comf	(_codeAddress),f
  1650  0158  09AD               	line	62
  1651                           	
  1652                           l1011:	
  1653  0159                     ;PiCr-25.09.22.c: 62:         loopBit--;
  1654                           	movlw	low(08h)
  1655  0159  3008               	movwf	(??_commandd+0)+0
  1656  015A  00A8               	movf	(??_commandd+0)+0,w
  1657  015B  0828               	movwf	(_loopBit)
  1658  015C  00A4               	line	63
  1659                           ;PiCr-25.09.22.c: 63:         if (!(codeCommand & (1 << loopBit))) {
  1660                           	goto	l1021
  1661  015D  2985               	
  1662                           l65:	
  1663  015E                     	line	64
  1664                           	
  1665                           l1013:	
  1666  015E                     ;PiCr-25.09.22.c: 64:             bit0();
  1667                           	movlw	01h
  1668  015E  3001               	subwf	(_loopBit),f
  1669  015F  02A4               	line	65
  1670                           ;PiCr-25.09.22.c: 65:         } else if (codeCommand & (1 << loopBit)) {
  1671                           	movlw	low(01h)
  1672  0160  3001               	movwf	(??_commandd+0)+0
  1673  0161  00A8               	incf	(_loopBit),w
  1674  0162  0A24               	goto	u764
  1675  0163  2966               u765:
  1676  0164                     	clrc
  1677  0164  1003               	rlf	(??_commandd+0)+0,f
  1678  0165  0DA8               u764:
  1679  0166                     	addlw	-1
  1680  0166  3EFF               	skipz
  1681  0167  1D03               	goto	u765
  1682  0168  2964               	movf	0+(??_commandd+0)+0,w
  1683  0169  0828               	andwf	(_codeAddress),w
  1684  016A  052D               	btfss	status,2
  1685  016B  1D03               	goto	u771
  1686  016C  296E               	goto	u770
  1687  016D  296F               u771:
  1688  016E                     	goto	l1017
  1689  016E  2971               u770:
  1690  016F                     	line	66
  1691                           	
  1692                           l1015:	
  1693  016F                     ;PiCr-25.09.22.c: 66:             bit1();
  1694                           	fcall	_bit0
  1695  016F  209D               	line	67
  1696                           ;PiCr-25.09.22.c: 67:         }
  1697                           	goto	l1021
  1698  0170  2985               	
  1699                           l66:	
  1700  0171                     	
  1701                           l1017:	
  1702  0171                     	movlw	low(01h)
  1703  0171  3001               	bcf	status, 5	;RP0=0, select bank0
  1704  0172  1283               	movwf	(??_commandd+0)+0
  1705  0173  00A8               	incf	(_loopBit),w
  1706  0174  0A24               	goto	u784
  1707  0175  2978               u785:
  1708  0176                     	clrc
  1709  0176  1003               	rlf	(??_commandd+0)+0,f
  1710  0177  0DA8               u784:
  1711  0178                     	addlw	-1
  1712  0178  3EFF               	skipz
  1713  0179  1D03               	goto	u785
  1714  017A  2976               	movf	0+(??_commandd+0)+0,w
  1715  017B  0828               	andwf	(_codeAddress),w
  1716  017C  052D               	btfsc	status,2
  1717  017D  1903               	goto	u791
  1718  017E  2980               	goto	u790
  1719  017F  2981               u791:
  1720  0180                     	goto	l1021
  1721  0180  2985               u790:
  1722  0181                     	line	68
  1723                           	
  1724                           l1019:	
  1725  0181                     ;PiCr-25.09.22.c: 68:     }
  1726                           	fcall	_bit1
  1727  0181  20C8               	goto	l1021
  1728  0182  2985               	line	69
  1729                           ;PiCr-25.09.22.c: 69:     codeCommand = ~codeCommand;
  1730                           	
  1731                           l68:	
  1732  0183                     	goto	l1021
  1733  0183  2985               	
  1734                           l67:	
  1735  0184                     	goto	l1021
  1736  0184  2985               	line	70
  1737                           ;PiCr-25.09.22.c: 70:     loopBit = 8;
  1738                           	
  1739                           l64:	
  1740  0185                     	line	63
  1741                           	
  1742                           l1021:	
  1743  0185                     ;PiCr-25.09.22.c: 63:         if (!(codeCommand & (1 << loopBit))) {
  1744                           	bcf	status, 5	;RP0=0, select bank0
  1745  0185  1283               	movf	((_loopBit)),w
  1746  0186  0824               	btfss	status,2
  1747  0187  1D03               	goto	u801
  1748  0188  298A               	goto	u800
  1749  0189  298B               u801:
  1750  018A                     	goto	l1013
  1751  018A  295E               u800:
  1752  018B                     	
  1753                           l69:	
  1754  018B                     	line	71
  1755                           ;PiCr-25.09.22.c: 71:     while (loopBit > 0) {
  1756                           	comf	(_codeAddress),f
  1757  018B  09AD               	line	72
  1758                           	
  1759                           l1023:	
  1760  018C                     ;PiCr-25.09.22.c: 72:         loopBit--;
  1761                           	movlw	low(08h)
  1762  018C  3008               	movwf	(??_commandd+0)+0
  1763  018D  00A8               	movf	(??_commandd+0)+0,w
  1764  018E  0828               	movwf	(_loopBit)
  1765  018F  00A4               	line	73
  1766                           ;PiCr-25.09.22.c: 73:         if (!(codeCommand & (1 << loopBit))) {
  1767                           	goto	l1033
  1768  0190  29B8               	
  1769                           l71:	
  1770  0191                     	line	74
  1771                           	
  1772                           l1025:	
  1773  0191                     ;PiCr-25.09.22.c: 74:             bit0();
  1774                           	movlw	01h
  1775  0191  3001               	subwf	(_loopBit),f
  1776  0192  02A4               	line	75
  1777                           ;PiCr-25.09.22.c: 75:         } else if (codeCommand & (1 << loopBit)) {
  1778                           	movlw	low(01h)
  1779  0193  3001               	movwf	(??_commandd+0)+0
  1780  0194  00A8               	incf	(_loopBit),w
  1781  0195  0A24               	goto	u814
  1782  0196  2999               u815:
  1783  0197                     	clrc
  1784  0197  1003               	rlf	(??_commandd+0)+0,f
  1785  0198  0DA8               u814:
  1786  0199                     	addlw	-1
  1787  0199  3EFF               	skipz
  1788  019A  1D03               	goto	u815
  1789  019B  2997               	movf	0+(??_commandd+0)+0,w
  1790  019C  0828               	andwf	(_codeCommand),w
  1791  019D  052C               	btfss	status,2
  1792  019E  1D03               	goto	u821
  1793  019F  29A1               	goto	u820
  1794  01A0  29A2               u821:
  1795  01A1                     	goto	l1029
  1796  01A1  29A4               u820:
  1797  01A2                     	line	76
  1798                           	
  1799                           l1027:	
  1800  01A2                     ;PiCr-25.09.22.c: 76:             bit1();
  1801                           	fcall	_bit0
  1802  01A2  209D               	line	77
  1803                           ;PiCr-25.09.22.c: 77:         }
  1804                           	goto	l1033
  1805  01A3  29B8               	
  1806                           l72:	
  1807  01A4                     	
  1808                           l1029:	
  1809  01A4                     	movlw	low(01h)
  1810  01A4  3001               	bcf	status, 5	;RP0=0, select bank0
  1811  01A5  1283               	movwf	(??_commandd+0)+0
  1812  01A6  00A8               	incf	(_loopBit),w
  1813  01A7  0A24               	goto	u834
  1814  01A8  29AB               u835:
  1815  01A9                     	clrc
  1816  01A9  1003               	rlf	(??_commandd+0)+0,f
  1817  01AA  0DA8               u834:
  1818  01AB                     	addlw	-1
  1819  01AB  3EFF               	skipz
  1820  01AC  1D03               	goto	u835
  1821  01AD  29A9               	movf	0+(??_commandd+0)+0,w
  1822  01AE  0828               	andwf	(_codeCommand),w
  1823  01AF  052C               	btfsc	status,2
  1824  01B0  1903               	goto	u841
  1825  01B1  29B3               	goto	u840
  1826  01B2  29B4               u841:
  1827  01B3                     	goto	l1033
  1828  01B3  29B8               u840:
  1829  01B4                     	line	78
  1830                           	
  1831                           l1031:	
  1832  01B4                     ;PiCr-25.09.22.c: 78:     }
  1833                           	fcall	_bit1
  1834  01B4  20C8               	goto	l1033
  1835  01B5  29B8               	line	79
  1836                           ;PiCr-25.09.22.c: 79:     bit0();
  1837                           	
  1838                           l74:	
  1839  01B6                     	goto	l1033
  1840  01B6  29B8               	
  1841                           l73:	
  1842  01B7                     	goto	l1033
  1843  01B7  29B8               	line	80
  1844                           ;PiCr-25.09.22.c: 80:     codeCommand = ~codeCommand;
  1845                           	
  1846                           l70:	
  1847  01B8                     	line	73
  1848                           	
  1849                           l1033:	
  1850  01B8                     ;PiCr-25.09.22.c: 73:         if (!(codeCommand & (1 << loopBit))) {
  1851                           	bcf	status, 5	;RP0=0, select bank0
  1852  01B8  1283               	movf	((_loopBit)),w
  1853  01B9  0824               	btfss	status,2
  1854  01BA  1D03               	goto	u851
  1855  01BB  29BD               	goto	u850
  1856  01BC  29BE               u851:
  1857  01BD                     	goto	l1025
  1858  01BD  2991               u850:
  1859  01BE                     	
  1860                           l75:	
  1861  01BE                     	line	81
  1862                           ;PiCr-25.09.22.c: 81: }
  1863                           	comf	(_codeCommand),f
  1864  01BE  09AC               	line	82
  1865                           	
  1866                           l1035:	
  1867  01BF                     ;PiCr-25.09.22.c: 82: 
  1868                           	movlw	low(08h)
  1869  01BF  3008               	movwf	(??_commandd+0)+0
  1870  01C0  00A8               	movf	(??_commandd+0)+0,w
  1871  01C1  0828               	movwf	(_loopBit)
  1872  01C2  00A4               	line	83
  1873                           ;PiCr-25.09.22.c: 83: void ADC() {
  1874                           	goto	l1045
  1875  01C3  29EB               	
  1876                           l77:	
  1877  01C4                     	line	84
  1878                           	
  1879                           l1037:	
  1880  01C4                     ;PiCr-25.09.22.c: 84:     ADON = 1;
  1881                           	movlw	01h
  1882  01C4  3001               	subwf	(_loopBit),f
  1883  01C5  02A4               	line	85
  1884                           ;PiCr-25.09.22.c: 85:     _delay((unsigned long)((3)*(4000000/4000.0)));
  1885                           	movlw	low(01h)
  1886  01C6  3001               	movwf	(??_commandd+0)+0
  1887  01C7  00A8               	incf	(_loopBit),w
  1888  01C8  0A24               	goto	u864
  1889  01C9  29CC               u865:
  1890  01CA                     	clrc
  1891  01CA  1003               	rlf	(??_commandd+0)+0,f
  1892  01CB  0DA8               u864:
  1893  01CC                     	addlw	-1
  1894  01CC  3EFF               	skipz
  1895  01CD  1D03               	goto	u865
  1896  01CE  29CA               	movf	0+(??_commandd+0)+0,w
  1897  01CF  0828               	andwf	(_codeCommand),w
  1898  01D0  052C               	btfss	status,2
  1899  01D1  1D03               	goto	u871
  1900  01D2  29D4               	goto	u870
  1901  01D3  29D5               u871:
  1902  01D4                     	goto	l1041
  1903  01D4  29D7               u870:
  1904  01D5                     	line	86
  1905                           	
  1906                           l1039:	
  1907  01D5                     ;PiCr-25.09.22.c: 86:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  1908                           	fcall	_bit0
  1909  01D5  209D               	line	87
  1910                           ;PiCr-25.09.22.c: 87:     GO_DONE = 1;
  1911                           	goto	l1045
  1912  01D6  29EB               	
  1913                           l78:	
  1914  01D7                     	
  1915                           l1041:	
  1916  01D7                     	movlw	low(01h)
  1917  01D7  3001               	bcf	status, 5	;RP0=0, select bank0
  1918  01D8  1283               	movwf	(??_commandd+0)+0
  1919  01D9  00A8               	incf	(_loopBit),w
  1920  01DA  0A24               	goto	u884
  1921  01DB  29DE               u885:
  1922  01DC                     	clrc
  1923  01DC  1003               	rlf	(??_commandd+0)+0,f
  1924  01DD  0DA8               u884:
  1925  01DE                     	addlw	-1
  1926  01DE  3EFF               	skipz
  1927  01DF  1D03               	goto	u885
  1928  01E0  29DC               	movf	0+(??_commandd+0)+0,w
  1929  01E1  0828               	andwf	(_codeCommand),w
  1930  01E2  052C               	btfsc	status,2
  1931  01E3  1903               	goto	u891
  1932  01E4  29E6               	goto	u890
  1933  01E5  29E7               u891:
  1934  01E6                     	goto	l1045
  1935  01E6  29EB               u890:
  1936  01E7                     	line	88
  1937                           	
  1938                           l1043:	
  1939  01E7                     ;PiCr-25.09.22.c: 88:     while (GO_DONE);
  1940                           	fcall	_bit1
  1941  01E7  20C8               	goto	l1045
  1942  01E8  29EB               	line	89
  1943                           ;PiCr-25.09.22.c: 89:     volt = ADRESH;
  1944                           	
  1945                           l80:	
  1946  01E9                     	goto	l1045
  1947  01E9  29EB               	
  1948                           l79:	
  1949  01EA                     	goto	l1045
  1950  01EA  29EB               	line	90
  1951                           ;PiCr-25.09.22.c: 90:     ADON = 0;
  1952                           	
  1953                           l76:	
  1954  01EB                     	line	83
  1955                           	
  1956                           l1045:	
  1957  01EB                     ;PiCr-25.09.22.c: 83: void ADC() {
  1958                           	bcf	status, 5	;RP0=0, select bank0
  1959  01EB  1283               	movf	((_loopBit)),w
  1960  01EC  0824               	btfss	status,2
  1961  01ED  1D03               	goto	u901
  1962  01EE  29F0               	goto	u900
  1963  01EF  29F1               u901:
  1964  01F0                     	goto	l1037
  1965  01F0  29C4               u900:
  1966  01F1                     	goto	l1047
  1967  01F1  29F2               	
  1968                           l81:	
  1969  01F2                     	line	91
  1970                           	
  1971                           l1047:	
  1972  01F2                     ;PiCr-25.09.22.c: 91: }
  1973                           	fcall	_bit0
  1974  01F2  209D               	line	92
  1975                           	
  1976                           l1049:	
  1977  01F3                     ;PiCr-25.09.22.c: 92: 
  1978                           	bcf	status, 5	;RP0=0, select bank0
  1979  01F3  1283               	comf	(_codeCommand),f
  1980  01F4  09AC               	line	93
  1981                           	
  1982                           l82:	
  1983  01F5                     	return
  1984  01F5  0008               	opt stack 0
  1985                           GLOBAL	__end_of_commandd
  1986                           	__end_of_commandd:
  1987  01F6                     	signat	_commandd,89
  1988                           	global	_ms9And4ms
  1989                           
  1990 ;; *************** function _ms9And4ms *****************
  1991 ;; Defined at:
  1992 ;;		line 20 in file "PiCr-25.09.22.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;		None
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;		None
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  1    wreg      void 
  1999 ;; Registers used:
  2000 ;;		wreg, status,2
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMMON   BANK0
  2006 ;;      Params:         0       0
  2007 ;;      Locals:         0       0
  2008 ;;      Temps:          0       2
  2009 ;;      Totals:         0       2
  2010 ;;Total ram usage:        2 bytes
  2011 ;; Hardware stack levels used:    1
  2012 ;; This function calls:
  2013 ;;		Nothing
  2014 ;; This function is called by:
  2015 ;;		_commandd
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2019                           	line	20
  2020                           global __ptext2
  2021                           __ptext2:	;psect for function _ms9And4ms
  2022  00F6                     psect	text2
  2023                           	file	"PiCr-25.09.22.c"
  2024                           	line	20
  2025                           	global	__size_of_ms9And4ms
  2026                           	__size_of_ms9And4ms	equ	__end_of_ms9And4ms-_ms9And4ms
  2027  002E                     	
  2028                           _ms9And4ms:	
  2029  00F6                     ;incstack = 0
  2030                           	opt	stack 6
  2031                           ; Regs used in _ms9And4ms: [wreg+status,2]
  2032                           	line	21
  2033                           	
  2034                           l961:	
  2035  00F6                     ;PiCr-25.09.22.c: 21:         _delay((unsigned long)((10)*(4000000/4000000.0)));
  2036                           	bcf	status, 5	;RP0=0, select bank0
  2037  00F6  1283               	clrf	(_i)
  2038  00F7  01A2               	clrf	(_i+1)
  2039  00F8  01A3               	
  2040                           l963:	
  2041  00F9                     	movlw	01h
  2042  00F9  3001               	subwf	(_i+1),w
  2043  00FA  0223               	movlw	02Ch
  2044  00FB  302C               	skipnz
  2045  00FC  1903               	subwf	(_i),w
  2046  00FD  0222               	skipc
  2047  00FE  1C03               	goto	u651
  2048  00FF  2901               	goto	u650
  2049  0100  2902               u651:
  2050  0101                     	goto	l43
  2051  0101  2904               u650:
  2052  0102                     	goto	l44
  2053  0102  291A               	
  2054                           l965:	
  2055  0103                     	goto	l44
  2056  0103  291A               	
  2057                           l43:	
  2058  0104                     	line	22
  2059                           ;PiCr-25.09.22.c: 22:         GP2 = 0;
  2060                           	bsf	(42/8),(42)&7	;volatile
  2061  0104  1505               	line	23
  2062                           	
  2063                           l967:	
  2064  0105                     ;PiCr-25.09.22.c: 23:     }
  2065                           	opt asmopt_push
  2066                           opt asmopt_off
  2067                           	movlw	3
  2068  0105  3003               movwf	((??_ms9And4ms+0)+0),f
  2069  0106  00A6               	u1307:
  2070  0107                     decfsz	(??_ms9And4ms+0)+0,f
  2071  0107  0BA6               	goto	u1307
  2072  0108  2907               opt asmopt_pop
  2073                           
  2074                           	line	24
  2075                           	
  2076                           l969:	
  2077  0109                     ;PiCr-25.09.22.c: 24:     GP2 = 0;
  2078                           	bcf	status, 5	;RP0=0, select bank0
  2079  0109  1283               	bcf	(42/8),(42)&7	;volatile
  2080  010A  1105               	line	25
  2081                           ;PiCr-25.09.22.c: 25:     _delay((unsigned long)((1650)*(4000000/4000000.0)));
  2082                           	movlw	01h
  2083  010B  3001               	addwf	(_i),f
  2084  010C  07A2               	skipnc
  2085  010D  1803               	incf	(_i+1),f
  2086  010E  0AA3               	movlw	0
  2087  010F  3000               	addwf	(_i+1),f
  2088  0110  07A3               	movlw	01h
  2089  0111  3001               	subwf	(_i+1),w
  2090  0112  0223               	movlw	02Ch
  2091  0113  302C               	skipnz
  2092  0114  1903               	subwf	(_i),w
  2093  0115  0222               	skipc
  2094  0116  1C03               	goto	u661
  2095  0117  2919               	goto	u660
  2096  0118  291A               u661:
  2097  0119                     	goto	l43
  2098  0119  2904               u660:
  2099  011A                     	
  2100                           l44:	
  2101  011A                     	line	26
  2102                           ;PiCr-25.09.22.c: 26: }
  2103                           	bcf	(42/8),(42)&7	;volatile
  2104  011A  1105               	line	27
  2105                           	
  2106                           l971:	
  2107  011B                     ;PiCr-25.09.22.c: 27: 
  2108                           	opt asmopt_push
  2109                           opt asmopt_off
  2110                           movlw	6
  2111  011B  3006               movwf	((??_ms9And4ms+0)+0+1),f
  2112  011C  00A7               	movlw	215
  2113  011D  30D7               movwf	((??_ms9And4ms+0)+0),f
  2114  011E  00A6               	u1317:
  2115  011F                     decfsz	((??_ms9And4ms+0)+0),f
  2116  011F  0BA6               	goto	u1317
  2117  0120  291F               	decfsz	((??_ms9And4ms+0)+0+1),f
  2118  0121  0BA7               	goto	u1317
  2119  0122  291F               opt asmopt_pop
  2120                           
  2121                           	line	28
  2122                           	
  2123                           l45:	
  2124  0123                     	return
  2125  0123  0008               	opt stack 0
  2126                           GLOBAL	__end_of_ms9And4ms
  2127                           	__end_of_ms9And4ms:
  2128  0124                     	signat	_ms9And4ms,89
  2129                           	global	_bit1
  2130                           
  2131 ;; *************** function _bit1 *****************
  2132 ;; Defined at:
  2133 ;;		line 30 in file "PiCr-25.09.22.c"
  2134 ;; Parameters:    Size  Location     Type
  2135 ;;		None
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;		None
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  1    wreg      void 
  2140 ;; Registers used:
  2141 ;;		wreg, status,2
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMMON   BANK0
  2147 ;;      Params:         0       0
  2148 ;;      Locals:         0       0
  2149 ;;      Temps:          0       1
  2150 ;;      Totals:         0       1
  2151 ;;Total ram usage:        1 bytes
  2152 ;; Hardware stack levels used:    1
  2153 ;; This function calls:
  2154 ;;		Nothing
  2155 ;; This function is called by:
  2156 ;;		_commandd
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2160                           	line	30
  2161                           global __ptext3
  2162                           __ptext3:	;psect for function _bit1
  2163  00C8                     psect	text3
  2164                           	file	"PiCr-25.09.22.c"
  2165                           	line	30
  2166                           	global	__size_of_bit1
  2167                           	__size_of_bit1	equ	__end_of_bit1-_bit1
  2168  002E                     	
  2169                           _bit1:	
  2170  00C8                     ;incstack = 0
  2171                           	opt	stack 6
  2172                           ; Regs used in _bit1: [wreg+status,2]
  2173                           	line	31
  2174                           	
  2175                           l973:	
  2176  00C8                     ;PiCr-25.09.22.c: 31:         _delay((unsigned long)((10)*(4000000/4000000.0)));
  2177                           	bcf	status, 5	;RP0=0, select bank0
  2178  00C8  1283               	clrf	(_i)
  2179  00C9  01A2               	clrf	(_i+1)
  2180  00CA  01A3               	
  2181                           l975:	
  2182  00CB                     	movlw	0
  2183  00CB  3000               	subwf	(_i+1),w
  2184  00CC  0223               	movlw	013h
  2185  00CD  3013               	skipnz
  2186  00CE  1903               	subwf	(_i),w
  2187  00CF  0222               	skipc
  2188  00D0  1C03               	goto	u671
  2189  00D1  28D3               	goto	u670
  2190  00D2  28D4               u671:
  2191  00D3                     	goto	l48
  2192  00D3  28D6               u670:
  2193  00D4                     	goto	l49
  2194  00D4  28EC               	
  2195                           l977:	
  2196  00D5                     	goto	l49
  2197  00D5  28EC               	
  2198                           l48:	
  2199  00D6                     	line	32
  2200                           ;PiCr-25.09.22.c: 32:         GP2 = 0;
  2201                           	bsf	(42/8),(42)&7	;volatile
  2202  00D6  1505               	line	33
  2203                           	
  2204                           l979:	
  2205  00D7                     ;PiCr-25.09.22.c: 33:     }
  2206                           	opt asmopt_push
  2207                           opt asmopt_off
  2208                           	movlw	3
  2209  00D7  3003               movwf	((??_bit1+0)+0),f
  2210  00D8  00A6               	u1327:
  2211  00D9                     decfsz	(??_bit1+0)+0,f
  2212  00D9  0BA6               	goto	u1327
  2213  00DA  28D9               opt asmopt_pop
  2214                           
  2215                           	line	34
  2216                           	
  2217                           l981:	
  2218  00DB                     ;PiCr-25.09.22.c: 34:     GP2 = 0;
  2219                           	bcf	status, 5	;RP0=0, select bank0
  2220  00DB  1283               	bcf	(42/8),(42)&7	;volatile
  2221  00DC  1105               	line	35
  2222                           ;PiCr-25.09.22.c: 35:     _delay((unsigned long)((450)*(4000000/4000000.0)));
  2223                           	movlw	01h
  2224  00DD  3001               	addwf	(_i),f
  2225  00DE  07A2               	skipnc
  2226  00DF  1803               	incf	(_i+1),f
  2227  00E0  0AA3               	movlw	0
  2228  00E1  3000               	addwf	(_i+1),f
  2229  00E2  07A3               	movlw	0
  2230  00E3  3000               	subwf	(_i+1),w
  2231  00E4  0223               	movlw	013h
  2232  00E5  3013               	skipnz
  2233  00E6  1903               	subwf	(_i),w
  2234  00E7  0222               	skipc
  2235  00E8  1C03               	goto	u681
  2236  00E9  28EB               	goto	u680
  2237  00EA  28EC               u681:
  2238  00EB                     	goto	l48
  2239  00EB  28D6               u680:
  2240  00EC                     	
  2241                           l49:	
  2242  00EC                     	line	36
  2243                           ;PiCr-25.09.22.c: 36: }
  2244                           	bcf	(42/8),(42)&7	;volatile
  2245  00EC  1105               	line	37
  2246                           	
  2247                           l983:	
  2248  00ED                     ;PiCr-25.09.22.c: 37: 
  2249                           	opt asmopt_push
  2250                           opt asmopt_off
  2251                           	movlw	235
  2252  00ED  30EB               movwf	((??_bit1+0)+0),f
  2253  00EE  00A6               	u1337:
  2254  00EF                     	nop2
  2255  00EF  28F0               	nop2
  2256  00F0  28F1               decfsz	(??_bit1+0)+0,f
  2257  00F1  0BA6               	goto	u1337
  2258  00F2  28EF               	nop2
  2259  00F3  28F4               	nop2
  2260  00F4  28F5               opt asmopt_pop
  2261                           
  2262                           	line	38
  2263                           	
  2264                           l50:	
  2265  00F5                     	return
  2266  00F5  0008               	opt stack 0
  2267                           GLOBAL	__end_of_bit1
  2268                           	__end_of_bit1:
  2269  00F6                     	signat	_bit1,89
  2270                           	global	_bit0
  2271                           
  2272 ;; *************** function _bit0 *****************
  2273 ;; Defined at:
  2274 ;;		line 40 in file "PiCr-25.09.22.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;		None
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;		None
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      void 
  2281 ;; Registers used:
  2282 ;;		wreg, status,2
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMMON   BANK0
  2288 ;;      Params:         0       0
  2289 ;;      Locals:         0       0
  2290 ;;      Temps:          0       1
  2291 ;;      Totals:         0       1
  2292 ;;Total ram usage:        1 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; This function calls:
  2295 ;;		Nothing
  2296 ;; This function is called by:
  2297 ;;		_commandd
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  2301                           	line	40
  2302                           global __ptext4
  2303                           __ptext4:	;psect for function _bit0
  2304  009D                     psect	text4
  2305                           	file	"PiCr-25.09.22.c"
  2306                           	line	40
  2307                           	global	__size_of_bit0
  2308                           	__size_of_bit0	equ	__end_of_bit0-_bit0
  2309  002B                     	
  2310                           _bit0:	
  2311  009D                     ;incstack = 0
  2312                           	opt	stack 6
  2313                           ; Regs used in _bit0: [wreg+status,2]
  2314                           	line	41
  2315                           	
  2316                           l985:	
  2317  009D                     ;PiCr-25.09.22.c: 41:     while (loopBit > 0) {
  2318                           	bcf	status, 5	;RP0=0, select bank0
  2319  009D  1283               	clrf	(_i)
  2320  009E  01A2               	clrf	(_i+1)
  2321  009F  01A3               	
  2322                           l987:	
  2323  00A0                     	movlw	0
  2324  00A0  3000               	subwf	(_i+1),w
  2325  00A1  0223               	movlw	013h
  2326  00A2  3013               	skipnz
  2327  00A3  1903               	subwf	(_i),w
  2328  00A4  0222               	skipc
  2329  00A5  1C03               	goto	u691
  2330  00A6  28A8               	goto	u690
  2331  00A7  28A9               u691:
  2332  00A8                     	goto	l53
  2333  00A8  28AB               u690:
  2334  00A9                     	goto	l54
  2335  00A9  28C1               	
  2336                           l989:	
  2337  00AA                     	goto	l54
  2338  00AA  28C1               	
  2339                           l53:	
  2340  00AB                     	line	42
  2341                           ;PiCr-25.09.22.c: 42:         loopBit--;
  2342                           	bsf	(42/8),(42)&7	;volatile
  2343  00AB  1505               	line	43
  2344                           	
  2345                           l991:	
  2346  00AC                     ;PiCr-25.09.22.c: 43:         if (!(codeAddress & (1 << loopBit))) {
  2347                           	opt asmopt_push
  2348                           opt asmopt_off
  2349                           	movlw	3
  2350  00AC  3003               movwf	((??_bit0+0)+0),f
  2351  00AD  00A6               	u1347:
  2352  00AE                     decfsz	(??_bit0+0)+0,f
  2353  00AE  0BA6               	goto	u1347
  2354  00AF  28AE               opt asmopt_pop
  2355                           
  2356                           	line	44
  2357                           	
  2358                           l993:	
  2359  00B0                     ;PiCr-25.09.22.c: 44:             bit0();
  2360                           	bcf	status, 5	;RP0=0, select bank0
  2361  00B0  1283               	bcf	(42/8),(42)&7	;volatile
  2362  00B1  1105               	line	45
  2363                           ;PiCr-25.09.22.c: 45:         } else if (codeAddress & (1 << loopBit)) {
  2364                           	movlw	01h
  2365  00B2  3001               	addwf	(_i),f
  2366  00B3  07A2               	skipnc
  2367  00B4  1803               	incf	(_i+1),f
  2368  00B5  0AA3               	movlw	0
  2369  00B6  3000               	addwf	(_i+1),f
  2370  00B7  07A3               	movlw	0
  2371  00B8  3000               	subwf	(_i+1),w
  2372  00B9  0223               	movlw	013h
  2373  00BA  3013               	skipnz
  2374  00BB  1903               	subwf	(_i),w
  2375  00BC  0222               	skipc
  2376  00BD  1C03               	goto	u701
  2377  00BE  28C0               	goto	u700
  2378  00BF  28C1               u701:
  2379  00C0                     	goto	l53
  2380  00C0  28AB               u700:
  2381  00C1                     	
  2382                           l54:	
  2383  00C1                     	line	46
  2384                           ;PiCr-25.09.22.c: 46:             bit1();
  2385                           	bcf	(42/8),(42)&7	;volatile
  2386  00C1  1105               	line	47
  2387                           	
  2388                           l995:	
  2389  00C2                     ;PiCr-25.09.22.c: 47:         }
  2390                           	opt asmopt_push
  2391                           opt asmopt_off
  2392                           	movlw	149
  2393  00C2  3095               movwf	((??_bit0+0)+0),f
  2394  00C3  00A6               	u1357:
  2395  00C4                     decfsz	(??_bit0+0)+0,f
  2396  00C4  0BA6               	goto	u1357
  2397  00C5  28C4               	nop2
  2398  00C6  28C7               opt asmopt_pop
  2399                           
  2400                           	line	48
  2401                           	
  2402                           l55:	
  2403  00C7                     	return
  2404  00C7  0008               	opt stack 0
  2405                           GLOBAL	__end_of_bit0
  2406                           	__end_of_bit0:
  2407  00C8                     	signat	_bit0,89
  2408                           	global	_ADC1
  2409                           
  2410 ;; *************** function _ADC1 *****************
  2411 ;; Defined at:
  2412 ;;		line 105 in file "PiCr-25.09.22.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;		None
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;		None
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  1    wreg      void 
  2419 ;; Registers used:
  2420 ;;		wreg
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMMON   BANK0
  2426 ;;      Params:         0       0
  2427 ;;      Locals:         0       0
  2428 ;;      Temps:          0       2
  2429 ;;      Totals:         0       2
  2430 ;;Total ram usage:        2 bytes
  2431 ;; Hardware stack levels used:    1
  2432 ;; This function calls:
  2433 ;;		Nothing
  2434 ;; This function is called by:
  2435 ;;		_main
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  2439                           	line	105
  2440                           global __ptext5
  2441                           __ptext5:	;psect for function _ADC1
  2442  0060                     psect	text5
  2443                           	file	"PiCr-25.09.22.c"
  2444                           	line	105
  2445                           	global	__size_of_ADC1
  2446                           	__size_of_ADC1	equ	__end_of_ADC1-_ADC1
  2447  001B                     	
  2448                           _ADC1:	
  2449  0060                     ;incstack = 0
  2450                           	opt	stack 7
  2451                           ; Regs used in _ADC1: [wreg]
  2452                           	line	106
  2453                           	
  2454                           l1061:	
  2455  0060                     ;PiCr-25.09.22.c: 106:     OSCCAL = 0b10000000;
  2456                           	bcf	status, 5	;RP0=0, select bank0
  2457  0060  1283               	bsf	(248/8),(248)&7	;volatile
  2458  0061  141F               	line	107
  2459                           	
  2460                           l1063:	
  2461  0062                     ;PiCr-25.09.22.c: 107:     TRISIO = 0b00010000;
  2462                           	opt asmopt_push
  2463                           opt asmopt_off
  2464                           movlw	39
  2465  0062  3027               movwf	((??_ADC1+0)+0+1),f
  2466  0063  00A7               	movlw	245
  2467  0064  30F5               movwf	((??_ADC1+0)+0),f
  2468  0065  00A6               	u1367:
  2469  0066                     decfsz	((??_ADC1+0)+0),f
  2470  0066  0BA6               	goto	u1367
  2471  0067  2866               	decfsz	((??_ADC1+0)+0+1),f
  2472  0068  0BA7               	goto	u1367
  2473  0069  2866               opt asmopt_pop
  2474                           
  2475                           	line	108
  2476                           	
  2477                           l1065:	
  2478  006A                     ;PiCr-25.09.22.c: 108:     RP0 = 0;
  2479                           	bcf	status, 5	;RP0=0, select bank0
  2480  006A  1283               	bsf	(249/8),(249)&7	;volatile
  2481  006B  149F               	line	109
  2482                           ;PiCr-25.09.22.c: 109:     ADCON0 = 0b00001100;
  2483                           	goto	l91
  2484  006C  286D               	
  2485                           l92:	
  2486  006D                     	
  2487                           l91:	
  2488  006D                     	btfsc	(249/8),(249)&7	;volatile
  2489  006D  189F               	goto	u921
  2490  006E  2870               	goto	u920
  2491  006F  2871               u921:
  2492  0070                     	goto	l91
  2493  0070  286D               u920:
  2494  0071                     	goto	l1067
  2495  0071  2872               	
  2496                           l93:	
  2497  0072                     	line	110
  2498                           	
  2499                           l1067:	
  2500  0072                     ;PiCr-25.09.22.c: 110:     INTCON = 0b00000000;
  2501                           	movf	(30),w	;volatile
  2502  0072  081E               	movwf	(??_ADC1+0)+0
  2503  0073  00A6               	clrf	(??_ADC1+0)+0+1
  2504  0074  01A7               	movf	0+(??_ADC1+0)+0,w
  2505  0075  0826               	movwf	(_volt)
  2506  0076  00A0               	movf	1+(??_ADC1+0)+0,w
  2507  0077  0827               	movwf	(_volt+1)
  2508  0078  00A1               	line	111
  2509                           	
  2510                           l1069:	
  2511  0079                     ;PiCr-25.09.22.c: 111:     RP0 = 1;
  2512                           	bcf	(248/8),(248)&7	;volatile
  2513  0079  101F               	line	112
  2514                           	
  2515                           l94:	
  2516  007A                     	return
  2517  007A  0008               	opt stack 0
  2518                           GLOBAL	__end_of_ADC1
  2519                           	__end_of_ADC1:
  2520  007B                     	signat	_ADC1,89
  2521                           	global	_ADC
  2522                           
  2523 ;; *************** function _ADC *****************
  2524 ;; Defined at:
  2525 ;;		line 95 in file "PiCr-25.09.22.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;		None
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;		None
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  1    wreg      void 
  2532 ;; Registers used:
  2533 ;;		wreg
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMMON   BANK0
  2539 ;;      Params:         0       0
  2540 ;;      Locals:         0       0
  2541 ;;      Temps:          0       2
  2542 ;;      Totals:         0       2
  2543 ;;Total ram usage:        2 bytes
  2544 ;; Hardware stack levels used:    1
  2545 ;; This function calls:
  2546 ;;		Nothing
  2547 ;; This function is called by:
  2548 ;;		_main
  2549 ;; This function uses a non-reentrant model
  2550 ;;
  2551                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  2552                           	line	95
  2553                           global __ptext6
  2554                           __ptext6:	;psect for function _ADC
  2555  007B                     psect	text6
  2556                           	file	"PiCr-25.09.22.c"
  2557                           	line	95
  2558                           	global	__size_of_ADC
  2559                           	__size_of_ADC	equ	__end_of_ADC-_ADC
  2560  0022                     	
  2561                           _ADC:	
  2562  007B                     ;incstack = 0
  2563                           	opt	stack 7
  2564                           ; Regs used in _ADC: [wreg]
  2565                           	line	96
  2566                           	
  2567                           l1051:	
  2568  007B                     ;PiCr-25.09.22.c: 96:     GO_DONE = 1;
  2569                           	bcf	status, 5	;RP0=0, select bank0
  2570  007B  1283               	bsf	(248/8),(248)&7	;volatile
  2571  007C  141F               	line	97
  2572                           	
  2573                           l1053:	
  2574  007D                     ;PiCr-25.09.22.c: 97:     while (GO_DONE);
  2575                           	opt asmopt_push
  2576                           opt asmopt_off
  2577                           movlw	4
  2578  007D  3004               movwf	((??_ADC+0)+0+1),f
  2579  007E  00A7               	movlw	228
  2580  007F  30E4               movwf	((??_ADC+0)+0),f
  2581  0080  00A6               	u1377:
  2582  0081                     decfsz	((??_ADC+0)+0),f
  2583  0081  0BA6               	goto	u1377
  2584  0082  2881               	decfsz	((??_ADC+0)+0+1),f
  2585  0083  0BA7               	goto	u1377
  2586  0084  2881               	nop
  2587  0085  0000               opt asmopt_pop
  2588                           
  2589                           	line	98
  2590                           ;PiCr-25.09.22.c: 98:     volt = ADRESH;
  2591                           	opt asmopt_push
  2592                           opt asmopt_off
  2593                           	movlw	66
  2594  0086  3042               	bcf	status, 5	;RP0=0, select bank0
  2595  0087  1283               movwf	((??_ADC+0)+0),f
  2596  0088  00A6               	u1387:
  2597  0089                     decfsz	(??_ADC+0)+0,f
  2598  0089  0BA6               	goto	u1387
  2599  008A  2889               	nop
  2600  008B  0000               opt asmopt_pop
  2601                           
  2602                           	line	99
  2603                           	
  2604                           l1055:	
  2605  008C                     ;PiCr-25.09.22.c: 99:     ADON = 0;
  2606                           	bcf	status, 5	;RP0=0, select bank0
  2607  008C  1283               	bsf	(249/8),(249)&7	;volatile
  2608  008D  149F               	line	100
  2609                           ;PiCr-25.09.22.c: 100: }
  2610                           	goto	l85
  2611  008E  288F               	
  2612                           l86:	
  2613  008F                     	
  2614                           l85:	
  2615  008F                     	btfsc	(249/8),(249)&7	;volatile
  2616  008F  189F               	goto	u911
  2617  0090  2892               	goto	u910
  2618  0091  2893               u911:
  2619  0092                     	goto	l85
  2620  0092  288F               u910:
  2621  0093                     	goto	l1057
  2622  0093  2894               	
  2623                           l87:	
  2624  0094                     	line	101
  2625                           	
  2626                           l1057:	
  2627  0094                     ;PiCr-25.09.22.c: 101: 
  2628                           	movf	(30),w	;volatile
  2629  0094  081E               	movwf	(??_ADC+0)+0
  2630  0095  00A6               	clrf	(??_ADC+0)+0+1
  2631  0096  01A7               	movf	0+(??_ADC+0)+0,w
  2632  0097  0826               	movwf	(_volt)
  2633  0098  00A0               	movf	1+(??_ADC+0)+0,w
  2634  0099  0827               	movwf	(_volt+1)
  2635  009A  00A1               	line	102
  2636                           	
  2637                           l1059:	
  2638  009B                     ;PiCr-25.09.22.c: 102: void main(void) {
  2639                           	bcf	(248/8),(248)&7	;volatile
  2640  009B  101F               	line	103
  2641                           	
  2642                           l88:	
  2643  009C                     	return
  2644  009C  0008               	opt stack 0
  2645                           GLOBAL	__end_of_ADC
  2646                           	__end_of_ADC:
  2647  009D                     	signat	_ADC,89
  2648                           global	___latbits
  2649                           ___latbits	equ	0
  2650  0000                     	global	btemp
  2651                           	btemp set 05Eh
  2652  005E                     
  2653                           	DABS	1,94,2	;btemp
  2654                           	global	wtemp0
  2655                           	wtemp0 set btemp+0
  2656  005E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      5      14

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_commandd
    _commandd->_ms9And4ms

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              3 BANK0      2     2      0
                                _ADC
                               _ADC1
                           _commandd
 ---------------------------------------------------------------------------------
 (1) _commandd                                             1     1      0       0
                                              2 BANK0      1     1      0
                               _bit0
                               _bit1
                          _ms9And4ms
 ---------------------------------------------------------------------------------
 (2) _ms9And4ms                                            2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _bit1                                                 1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _bit0                                                 1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC1                                                 2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   _ADC1
   _commandd
     _bit0
     _bit1
     _ms9And4ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               3E      5       E       4       22.6%
BITBANK0            3E      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       E       6        0.0%
ABS                  0      0       E       5        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Sep 25 16:17:35 2022

             __CFG_CP$ON 0000                        _i 0022                       l50 00F5  
                     l43 0104                       l44 011A                       l60 013E  
                     l53 00AB                       l45 0123                       l61 0151  
                     l54 00C1                       l70 01B8                       l62 0150  
                     l55 00C7                       l71 0191                       l63 0158  
                     l48 00D6                       l80 01E9                       l72 01A4  
                     l64 0185                       l49 00EC                       l81 01F2  
                     l73 01B7                       l65 015E                       l82 01F5  
                     l74 01B6                       l66 0171                       l58 0152  
                     l91 006D                       l75 01BE                       l67 0184  
                     l59 012B                       l92 006D                       l76 01EB  
                     l68 0183                       l85 008F                       l93 0072  
                     l77 01C4                       l69 018B                       l86 008F  
                     l94 007A                       l78 01D7                       l87 0094  
                     l79 01EA                       l88 009C                       l99 0217  
            __CFG_CPD$ON 0000                      l100 024A                      l101 0249  
                    l110 0358                      l102 0290                      l111 0357  
                    l103 028F                      l120 03F0                      l112 038A  
                    l104 02C2                      l113 0389                      l105 02C1  
                    l114 03BC                      l106 02F4                      l115 03BB  
                    l107 02F3                      l116 03EE                      l108 0326  
                    l117 03ED                      l109 0325                      l118 03EF  
                    l119 03F0                      _ADC 007B                      l961 00F6  
                    l971 011B                      l963 00F9                      l981 00DB  
                    l973 00C8                      l965 0103                      _GP2 002A  
                    l991 00AC                      l983 00ED                      l975 00CB  
                    l967 0105                      l993 00B0                      l985 009D  
                    l977 00D5                      l969 0109                      l995 00C2  
                    l987 00A0                      l979 00D7                      l989 00AA  
                    l997 0124                      l999 0125                      _RP0 001D  
                    u700 00C1                      u701 00C0                      u800 018B  
                    u720 013C                      u801 018A                      u721 013B  
                    u650 0102                      u714 0133                      u651 0101  
                    u715 0131                      u660 011A                      u900 01F1  
                    u820 01A2                      u740 014E                      u661 0119  
                    u901 01F0                      u821 01A1                      u741 014D  
                    u910 0093                      u670 00D4                      u814 0199  
                    u750 0158                      u734 0145                      u911 0092  
                    u671 00D3                      u815 0197                      u751 0157  
                    u735 0143                      u920 0071                      u680 00EC  
                    u840 01B4                      u921 0070                      u681 00EB  
                    u841 01B3                      u690 00A9                      u850 01BE  
                    u834 01AB                      u770 016F                      u930 0222  
                    u691 00A8                      u851 01BD                      u835 01A9  
                    u771 016E                      u931 0221                      u764 0166  
                    u940 022B                      u765 0164                      u941 022A  
                    u870 01D5                      u790 0181                      u950 0236  
                    u871 01D4                      u791 0180                      u951 0235  
                    u864 01CC                      u784 0178                      u960 023F  
                    u865 01CA                      u785 0176                      u961 023E  
                    u890 01E7                      u970 0254                      u891 01E6  
                    u971 0253                      u884 01DE                      u980 025D  
                    u885 01DC                      u981 025C                      u990 0268  
                    u991 0267                     ?_ADC 0026                     l1001 012B  
                   l1011 0159                     l1003 013C                     l1013 015E  
                   l1021 0185                     l1005 013E                     l1101 022B  
                   l1031 01B4                     l1023 018C                     l1015 016F  
                   l1007 014E                     l1103 022C                     l1111 024A  
                   l1041 01D7                     l1025 0191                     l1033 01B8  
                   l1017 0171                     l1009 0152                     l1201 038A  
                   l1121 0271                     l1113 0254                     l1105 0236  
                   l1051 007B                     l1043 01E7                     l1035 01BF  
                   l1027 01A2                     l1019 0181                     l1211 03B1  
                   l1203 0394                     l1123 0279                     l1115 025D  
                   l1131 0290                     l1107 023F                     l1053 007D  
                   l1061 0060                     l1037 01C4                     l1045 01EB  
                   l1029 01A4                     l1221 03D0                     l1213 03B9  
                   l1205 039D                     l1141 02B7                     l1133 029A  
                   l1125 027A                     l1117 025E                     l1109 0247  
                   l1055 008C                     l1063 0062                     l1047 01F2  
                   l1039 01D5                     l1223 03DA                     l1207 039E  
                   l1215 03BC                     l1151 02D6                     l1143 02BF  
                   l1135 02A3                     l1127 0284                     l1119 0268  
                   l1071 01F6                     l1057 0094                     l1065 006A  
                   l1049 01F3                     l1225 03E3                     l1217 03C6  
                   l1209 03A8                     l1161 02FE                     l1153 02E0  
                   l1137 02A4                     l1145 02C2                     l1129 0289  
                   l1081 0205                     l1073 01F8                     l1059 009B  
                   l1067 0072                     l1227 03EB                     l1219 03CF  
                   l1171 0323                     l1163 0307                     l1155 02E9  
                   l1147 02CC                     l1139 02AE                     l1091 0211  
                   l1083 0206                     l1075 01FA                     l1069 0079  
                   l1181 0344                     l1165 0308                     l1173 0326  
                   l1157 02F1                     l1149 02D5                     l1093 0215  
                   l1085 0209                     l1077 0200                     l1191 036B  
                   l1183 034D                     l1175 0330                     l1167 0312  
                   l1159 02F4                     l1095 0217                     l1087 020B  
                   l1079 0204                     l1193 036C                     l1185 0355  
                   l1177 0339                     l1169 031B                     l1097 0218  
                   l1089 020D                     l1195 0376                     l1179 033A  
                   l1187 0358                     l1099 0222                     l1197 037F  
                   l1189 0362                     l1199 0387                     _ADC1 0060  
                   _ADON 00F8                     u1000 0271                     u1001 0270  
                   u1010 029A                     u1011 0299                     u1100 0307  
                   u1020 02A3                     u1101 0306                     u1021 02A2  
                   u1110 0312                     u1030 02AE                     u1111 0311  
                   u1031 02AD                     u1200 037F                     u1120 031B  
                   u1040 02B7                     u1201 037E                     u1121 031A  
                   u1041 02B6                     u1210 0394                     u1130 0330  
                   u1050 02CC                     u1211 0393                     u1131 032F  
                   u1051 02CB                     u1220 039D                     u1140 0339  
                   u1060 02D5                     u1221 039C                     u1141 0338  
                   u1061 02D4                     u1230 03A8                     u1150 0344  
                   u1070 02E0                     u1231 03A7                     u1151 0343  
                   u1071 02DF                     u1240 03B1                     u1160 034D  
                   u1080 02E9                     u1241 03B0                     u1161 034C  
                   u1081 02E8                     u1250 03C6                     u1170 0362  
                   u1090 02FE                     u1307 0107                     u1251 03C5  
                   u1171 0361                     u1091 02FD                     u1260 03CF  
                   u1180 036B                     u1317 011F                     u1261 03CE  
                   u1181 036A                     u1270 03DA                     u1190 0376  
                   u1327 00D9                     u1271 03D9                     u1191 0375  
                   u1280 03E3                     u1337 00EF                     u1281 03E2  
                   u1347 00AE                     u1357 00C4                     u1367 0066  
                   u1377 0081                     u1297 027F                     u1387 0089  
                   _bit0 009D                     _bit1 00C8                     _main 01F6  
                   btemp 005E                     _volt 0020                     start 0000  
                  ??_ADC 0026                    ?_ADC1 0026                    ?_bit0 0026  
                  ?_bit1 0026                    ?_main 0026            __CFG_WDTE$OFF 0000  
                  _CMCON 0019                    _ANSEL 009F                    _Reg_1 0025  
         __CFG_BOREN$OFF 0000                    status 0003                    wtemp0 005E  
           __end_of_ADC1 007B           __CFG_MCLRE$OFF 0000          __initialization 03F1  
           __end_of_bit0 00C8             __end_of_bit1 00F6             __end_of_main 03F1  
                 ??_ADC1 0026                   ??_bit0 0026                   ??_bit1 0026  
                 ??_main 0029                   _ADCON0 001F                   _ADRESH 001E  
                 _INTCON 000B                   _OSCCAL 0090                   _TRISIO 0085  
         __CFG_PWRTE$OFF 0000         __end_of_commandd 01F6  __end_of__initialization 03FD  
           __pidataBANK0 005D       __size_of_ms9And4ms 002E               __pbssBANK0 0020  
             __pmaintext 01F6                  _GO_DONE 00F9                ?_commandd 0026  
      __end_of_ms9And4ms 0124                  __ptext1 0124                  __ptext2 00F6  
                __ptext3 00C8                  __ptext4 009D                  __ptext5 0060  
                __ptext6 007B             __size_of_ADC 0022                  _loopBit 0024  
             ??_commandd 0028     end_of_initialization 03FD          _codeCommandPlus 002B  
    start_initialization 03F1              __end_of_ADC 009D              __pdataBANK0 002B  
              ___latbits 0000            __pcstackBANK0 0026              _codeAddress 002D  
      __size_of_commandd 00D2              _codeCommand 002C                _ms9And4ms 00F6  
             ?_ms9And4ms 0026                 _commandd 0124            __size_of_ADC1 001B  
          __size_of_bit0 002B            __size_of_bit1 002E            __size_of_main 01FB  
            ??_ms9And4ms 0026               _OPTION_REG 0081        __CFG_FOSC$INTRCIO 0000  
