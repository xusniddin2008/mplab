

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Mar 26 04:23:32 2021

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC12F1822 Definitions
    37                           ; 
    38  0008                     fsr0h equ 05h
    39  0005                     fsr0l equ 04h
    40  0004                     fsr1h equ 07h
    41  0007                     fsr1l equ 06h
    42  0006                     indf equ 00h
    43  0000                     indf0 equ 00h
    44  0000                     indf1 equ 01h
    45  0001                     intcon equ 0Bh
    46  000B                     pc equ 02h
    47  0002                     pcl equ 02h
    48  0002                     pclath equ 0Ah
    49  000A                     status equ 03h
    50  0003                     wreg equ 09h
    51  0009                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     pushw	macro
    88                           	movwi fsr1++
    89                           	endm
    90  0000                     popw	macro
    91                           	moviw --fsr1
    92                           	endm
    93  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
    94                           INDF0 equ 00h ;# 
    95  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
    96                           INDF1 equ 01h ;# 
    97  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
    98                           PCL equ 02h ;# 
    99  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   100                           STATUS equ 03h ;# 
   101  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   102                           FSR0L equ 04h ;# 
   103  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   104                           FSR0H equ 05h ;# 
   105  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   106                           FSR1L equ 06h ;# 
   107  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   108                           FSR1H equ 07h ;# 
   109  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   110                           BSR equ 08h ;# 
   111  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   112                           WREG equ 09h ;# 
   113  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   114                           PCLATH equ 0Ah ;# 
   115  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   116                           INTCON equ 0Bh ;# 
   117  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   118                           PORTA equ 0Ch ;# 
   119  000C                     # 721 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   120                           PIR1 equ 011h ;# 
   121  0011                     # 783 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   122                           PIR2 equ 012h ;# 
   123  0012                     # 823 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   124                           TMR0 equ 015h ;# 
   125  0015                     # 843 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   126                           TMR1 equ 016h ;# 
   127  0016                     # 850 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   128                           TMR1L equ 016h ;# 
   129  0016                     # 870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   130                           TMR1H equ 017h ;# 
   131  0017                     # 890 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   132                           T1CON equ 018h ;# 
   133  0018                     # 962 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   134                           T1GCON equ 019h ;# 
   135  0019                     # 1039 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   136                           TMR2 equ 01Ah ;# 
   137  001A                     # 1059 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   138                           PR2 equ 01Bh ;# 
   139  001B                     # 1079 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   140                           T2CON equ 01Ch ;# 
   141  001C                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   142                           CPSCON0 equ 01Eh ;# 
   143  001E                     # 1210 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   144                           CPSCON1 equ 01Fh ;# 
   145  001F                     # 1244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   146                           TRISA equ 08Ch ;# 
   147  008C                     # 1294 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   148                           PIE1 equ 091h ;# 
   149  0091                     # 1356 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   150                           PIE2 equ 092h ;# 
   151  0092                     # 1396 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   152                           OPTION_REG equ 095h ;# 
   153  0095                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   154                           PCON equ 096h ;# 
   155  0096                     # 1530 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   156                           WDTCON equ 097h ;# 
   157  0097                     # 1589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   158                           OSCTUNE equ 098h ;# 
   159  0098                     # 1647 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   160                           OSCCON equ 099h ;# 
   161  0099                     # 1719 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   162                           OSCSTAT equ 09Ah ;# 
   163  009A                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   164                           ADRES equ 09Bh ;# 
   165  009B                     # 1788 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   166                           ADRESL equ 09Bh ;# 
   167  009B                     # 1808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   168                           ADRESH equ 09Ch ;# 
   169  009C                     # 1828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   170                           ADCON0 equ 09Dh ;# 
   171  009D                     # 1917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   172                           ADCON1 equ 09Eh ;# 
   173  009E                     # 1983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   174                           LATA equ 010Ch ;# 
   175  010C                     # 2028 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   176                           CM1CON0 equ 0111h ;# 
   177  0111                     # 2085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   178                           CM1CON1 equ 0112h ;# 
   179  0112                     # 2139 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   180                           CMOUT equ 0115h ;# 
   181  0115                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   182                           BORCON equ 0116h ;# 
   183  0116                     # 2186 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   184                           FVRCON equ 0117h ;# 
   185  0117                     # 2262 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   186                           DACCON0 equ 0118h ;# 
   187  0118                     # 2317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   188                           DACCON1 equ 0119h ;# 
   189  0119                     # 2369 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   190                           SRCON0 equ 011Ah ;# 
   191  011A                     # 2440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   192                           SRCON1 equ 011Bh ;# 
   193  011B                     # 2492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   194                           APFCON equ 011Dh ;# 
   195  011D                     # 2497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   196                           APFCON0 equ 011Dh ;# 
   197  011D                     # 2634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   198                           ANSELA equ 018Ch ;# 
   199  018C                     # 2681 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   200                           EEADR equ 0191h ;# 
   201  0191                     # 2688 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   202                           EEADRL equ 0191h ;# 
   203  0191                     # 2708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   204                           EEADRH equ 0192h ;# 
   205  0192                     # 2728 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   206                           EEDAT equ 0193h ;# 
   207  0193                     # 2735 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   208                           EEDATL equ 0193h ;# 
   209  0193                     # 2740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   210                           EEDATA equ 0193h ;# 
   211  0193                     # 2773 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   212                           EEDATH equ 0194h ;# 
   213  0194                     # 2793 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   214                           EECON1 equ 0195h ;# 
   215  0195                     # 2855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   216                           EECON2 equ 0196h ;# 
   217  0196                     # 2875 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   218                           RCREG equ 0199h ;# 
   219  0199                     # 2895 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   220                           TXREG equ 019Ah ;# 
   221  019A                     # 2915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   222                           SP1BRG equ 019Bh ;# 
   223  019B                     # 2922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   224                           SP1BRGL equ 019Bh ;# 
   225  019B                     # 2927 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   226                           SPBRG equ 019Bh ;# 
   227  019B                     # 2931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   228                           SPBRGL equ 019Bh ;# 
   229  019B                     # 2976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   230                           SP1BRGH equ 019Ch ;# 
   231  019C                     # 2981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   232                           SPBRGH equ 019Ch ;# 
   233  019C                     # 3014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   234                           RCSTA equ 019Dh ;# 
   235  019D                     # 3076 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   236                           TXSTA equ 019Eh ;# 
   237  019E                     # 3138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   238                           BAUDCON equ 019Fh ;# 
   239  019F                     # 3190 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   240                           WPUA equ 020Ch ;# 
   241  020C                     # 3248 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   242                           SSP1BUF equ 0211h ;# 
   243  0211                     # 3253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   244                           SSPBUF equ 0211h ;# 
   245  0211                     # 3286 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   246                           SSP1ADD equ 0212h ;# 
   247  0212                     # 3291 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   248                           SSPADD equ 0212h ;# 
   249  0212                     # 3324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   250                           SSP1MSK equ 0213h ;# 
   251  0213                     # 3329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   252                           SSPMSK equ 0213h ;# 
   253  0213                     # 3362 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   254                           SSP1STAT equ 0214h ;# 
   255  0214                     # 3367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   256                           SSPSTAT equ 0214h ;# 
   257  0214                     # 3484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   258                           SSP1CON1 equ 0215h ;# 
   259  0215                     # 3489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   260                           SSPCON1 equ 0215h ;# 
   261  0215                     # 3493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   262                           SSPCON equ 0215h ;# 
   263  0215                     # 3688 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   264                           SSP1CON2 equ 0216h ;# 
   265  0216                     # 3693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   266                           SSPCON2 equ 0216h ;# 
   267  0216                     # 3810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   268                           SSP1CON3 equ 0217h ;# 
   269  0217                     # 3815 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   270                           SSPCON3 equ 0217h ;# 
   271  0217                     # 3932 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   272                           CCPR1 equ 0291h ;# 
   273  0291                     # 3939 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   274                           CCPR1L equ 0291h ;# 
   275  0291                     # 3959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   276                           CCPR1H equ 0292h ;# 
   277  0292                     # 3979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   278                           CCP1CON equ 0293h ;# 
   279  0293                     # 4061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   280                           PWM1CON equ 0294h ;# 
   281  0294                     # 4131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   282                           CCP1AS equ 0295h ;# 
   283  0295                     # 4136 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   284                           ECCP1AS equ 0295h ;# 
   285  0295                     # 4293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   286                           PSTR1CON equ 0296h ;# 
   287  0296                     # 4337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   288                           IOCAP equ 0391h ;# 
   289  0391                     # 4395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   290                           IOCAN equ 0392h ;# 
   291  0392                     # 4453 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   292                           IOCAF equ 0393h ;# 
   293  0393                     # 4511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   294                           CLKRCON equ 039Ah ;# 
   295  039A                     # 4587 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   296                           MDCON equ 039Ch ;# 
   297  039C                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   298                           MDSRC equ 039Dh ;# 
   299  039D                     # 4691 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   300                           MDCARL equ 039Eh ;# 
   301  039E                     # 4756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   302                           MDCARH equ 039Fh ;# 
   303  039F                     # 4821 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   304                           STATUS_SHAD equ 0FE4h ;# 
   305  0FE4                     # 4853 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   306                           WREG_SHAD equ 0FE5h ;# 
   307  0FE5                     # 4873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   308                           BSR_SHAD equ 0FE6h ;# 
   309  0FE6                     # 4893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   310                           PCLATH_SHAD equ 0FE7h ;# 
   311  0FE7                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   312                           FSR0L_SHAD equ 0FE8h ;# 
   313  0FE8                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   314                           FSR0H_SHAD equ 0FE9h ;# 
   315  0FE9                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   316                           FSR1L_SHAD equ 0FEAh ;# 
   317  0FEA                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   318                           FSR1H_SHAD equ 0FEBh ;# 
   319  0FEB                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   320                           STKPTR equ 0FEDh ;# 
   321  0FED                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   322                           TOSL equ 0FEEh ;# 
   323  0FEE                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   324                           TOSH equ 0FEFh ;# 
   325  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   326                           INDF0 equ 00h ;# 
   327  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   328                           INDF1 equ 01h ;# 
   329  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   330                           PCL equ 02h ;# 
   331  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   332                           STATUS equ 03h ;# 
   333  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   334                           FSR0L equ 04h ;# 
   335  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   336                           FSR0H equ 05h ;# 
   337  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   338                           FSR1L equ 06h ;# 
   339  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   340                           FSR1H equ 07h ;# 
   341  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   342                           BSR equ 08h ;# 
   343  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   344                           WREG equ 09h ;# 
   345  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   346                           PCLATH equ 0Ah ;# 
   347  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   348                           INTCON equ 0Bh ;# 
   349  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   350                           PORTA equ 0Ch ;# 
   351  000C                     # 721 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   352                           PIR1 equ 011h ;# 
   353  0011                     # 783 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   354                           PIR2 equ 012h ;# 
   355  0012                     # 823 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   356                           TMR0 equ 015h ;# 
   357  0015                     # 843 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   358                           TMR1 equ 016h ;# 
   359  0016                     # 850 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   360                           TMR1L equ 016h ;# 
   361  0016                     # 870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   362                           TMR1H equ 017h ;# 
   363  0017                     # 890 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   364                           T1CON equ 018h ;# 
   365  0018                     # 962 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   366                           T1GCON equ 019h ;# 
   367  0019                     # 1039 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   368                           TMR2 equ 01Ah ;# 
   369  001A                     # 1059 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   370                           PR2 equ 01Bh ;# 
   371  001B                     # 1079 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   372                           T2CON equ 01Ch ;# 
   373  001C                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   374                           CPSCON0 equ 01Eh ;# 
   375  001E                     # 1210 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   376                           CPSCON1 equ 01Fh ;# 
   377  001F                     # 1244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   378                           TRISA equ 08Ch ;# 
   379  008C                     # 1294 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   380                           PIE1 equ 091h ;# 
   381  0091                     # 1356 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   382                           PIE2 equ 092h ;# 
   383  0092                     # 1396 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   384                           OPTION_REG equ 095h ;# 
   385  0095                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   386                           PCON equ 096h ;# 
   387  0096                     # 1530 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   388                           WDTCON equ 097h ;# 
   389  0097                     # 1589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   390                           OSCTUNE equ 098h ;# 
   391  0098                     # 1647 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   392                           OSCCON equ 099h ;# 
   393  0099                     # 1719 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   394                           OSCSTAT equ 09Ah ;# 
   395  009A                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   396                           ADRES equ 09Bh ;# 
   397  009B                     # 1788 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   398                           ADRESL equ 09Bh ;# 
   399  009B                     # 1808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   400                           ADRESH equ 09Ch ;# 
   401  009C                     # 1828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   402                           ADCON0 equ 09Dh ;# 
   403  009D                     # 1917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   404                           ADCON1 equ 09Eh ;# 
   405  009E                     # 1983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   406                           LATA equ 010Ch ;# 
   407  010C                     # 2028 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   408                           CM1CON0 equ 0111h ;# 
   409  0111                     # 2085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   410                           CM1CON1 equ 0112h ;# 
   411  0112                     # 2139 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   412                           CMOUT equ 0115h ;# 
   413  0115                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   414                           BORCON equ 0116h ;# 
   415  0116                     # 2186 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   416                           FVRCON equ 0117h ;# 
   417  0117                     # 2262 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   418                           DACCON0 equ 0118h ;# 
   419  0118                     # 2317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   420                           DACCON1 equ 0119h ;# 
   421  0119                     # 2369 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   422                           SRCON0 equ 011Ah ;# 
   423  011A                     # 2440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   424                           SRCON1 equ 011Bh ;# 
   425  011B                     # 2492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   426                           APFCON equ 011Dh ;# 
   427  011D                     # 2497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   428                           APFCON0 equ 011Dh ;# 
   429  011D                     # 2634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   430                           ANSELA equ 018Ch ;# 
   431  018C                     # 2681 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   432                           EEADR equ 0191h ;# 
   433  0191                     # 2688 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   434                           EEADRL equ 0191h ;# 
   435  0191                     # 2708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   436                           EEADRH equ 0192h ;# 
   437  0192                     # 2728 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   438                           EEDAT equ 0193h ;# 
   439  0193                     # 2735 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   440                           EEDATL equ 0193h ;# 
   441  0193                     # 2740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   442                           EEDATA equ 0193h ;# 
   443  0193                     # 2773 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   444                           EEDATH equ 0194h ;# 
   445  0194                     # 2793 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   446                           EECON1 equ 0195h ;# 
   447  0195                     # 2855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   448                           EECON2 equ 0196h ;# 
   449  0196                     # 2875 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   450                           RCREG equ 0199h ;# 
   451  0199                     # 2895 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   452                           TXREG equ 019Ah ;# 
   453  019A                     # 2915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   454                           SP1BRG equ 019Bh ;# 
   455  019B                     # 2922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   456                           SP1BRGL equ 019Bh ;# 
   457  019B                     # 2927 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   458                           SPBRG equ 019Bh ;# 
   459  019B                     # 2931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   460                           SPBRGL equ 019Bh ;# 
   461  019B                     # 2976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   462                           SP1BRGH equ 019Ch ;# 
   463  019C                     # 2981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   464                           SPBRGH equ 019Ch ;# 
   465  019C                     # 3014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   466                           RCSTA equ 019Dh ;# 
   467  019D                     # 3076 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   468                           TXSTA equ 019Eh ;# 
   469  019E                     # 3138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   470                           BAUDCON equ 019Fh ;# 
   471  019F                     # 3190 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   472                           WPUA equ 020Ch ;# 
   473  020C                     # 3248 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   474                           SSP1BUF equ 0211h ;# 
   475  0211                     # 3253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   476                           SSPBUF equ 0211h ;# 
   477  0211                     # 3286 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   478                           SSP1ADD equ 0212h ;# 
   479  0212                     # 3291 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   480                           SSPADD equ 0212h ;# 
   481  0212                     # 3324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   482                           SSP1MSK equ 0213h ;# 
   483  0213                     # 3329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   484                           SSPMSK equ 0213h ;# 
   485  0213                     # 3362 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   486                           SSP1STAT equ 0214h ;# 
   487  0214                     # 3367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   488                           SSPSTAT equ 0214h ;# 
   489  0214                     # 3484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   490                           SSP1CON1 equ 0215h ;# 
   491  0215                     # 3489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   492                           SSPCON1 equ 0215h ;# 
   493  0215                     # 3493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   494                           SSPCON equ 0215h ;# 
   495  0215                     # 3688 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   496                           SSP1CON2 equ 0216h ;# 
   497  0216                     # 3693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   498                           SSPCON2 equ 0216h ;# 
   499  0216                     # 3810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   500                           SSP1CON3 equ 0217h ;# 
   501  0217                     # 3815 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   502                           SSPCON3 equ 0217h ;# 
   503  0217                     # 3932 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   504                           CCPR1 equ 0291h ;# 
   505  0291                     # 3939 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   506                           CCPR1L equ 0291h ;# 
   507  0291                     # 3959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   508                           CCPR1H equ 0292h ;# 
   509  0292                     # 3979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   510                           CCP1CON equ 0293h ;# 
   511  0293                     # 4061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   512                           PWM1CON equ 0294h ;# 
   513  0294                     # 4131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   514                           CCP1AS equ 0295h ;# 
   515  0295                     # 4136 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   516                           ECCP1AS equ 0295h ;# 
   517  0295                     # 4293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   518                           PSTR1CON equ 0296h ;# 
   519  0296                     # 4337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   520                           IOCAP equ 0391h ;# 
   521  0391                     # 4395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   522                           IOCAN equ 0392h ;# 
   523  0392                     # 4453 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   524                           IOCAF equ 0393h ;# 
   525  0393                     # 4511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   526                           CLKRCON equ 039Ah ;# 
   527  039A                     # 4587 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   528                           MDCON equ 039Ch ;# 
   529  039C                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   530                           MDSRC equ 039Dh ;# 
   531  039D                     # 4691 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   532                           MDCARL equ 039Eh ;# 
   533  039E                     # 4756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   534                           MDCARH equ 039Fh ;# 
   535  039F                     # 4821 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   536                           STATUS_SHAD equ 0FE4h ;# 
   537  0FE4                     # 4853 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   538                           WREG_SHAD equ 0FE5h ;# 
   539  0FE5                     # 4873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   540                           BSR_SHAD equ 0FE6h ;# 
   541  0FE6                     # 4893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   542                           PCLATH_SHAD equ 0FE7h ;# 
   543  0FE7                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   544                           FSR0L_SHAD equ 0FE8h ;# 
   545  0FE8                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   546                           FSR0H_SHAD equ 0FE9h ;# 
   547  0FE9                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   548                           FSR1L_SHAD equ 0FEAh ;# 
   549  0FEA                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   550                           FSR1H_SHAD equ 0FEBh ;# 
   551  0FEB                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   552                           STKPTR equ 0FEDh ;# 
   553  0FED                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   554                           TOSL equ 0FEEh ;# 
   555  0FEE                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   556                           TOSH equ 0FEFh ;# 
   557  0FEF                     	FNCALL	_main,___flmul
   558                           	FNCALL	_main,___fltol
   559                           	FNCALL	_main,___xxtofl
   560                           	FNCALL	_main,_down
   561                           	FNCALL	_main,_downInner
   562                           	FNCALL	_main,_test_bit
   563                           	FNCALL	_main,_up
   564                           	FNCALL	_main,_upInner
   565                           	FNCALL	___flmul,__Umul8_16
   566                           	FNROOT	_main
   567                           	global	_sek
   568                           	global	_www
   569                           	global	_qqq
   570                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
   571                           global __pidataBANK0
   572                           __pidataBANK0:
   573  01F8                     	file	"Encoder.c"
   574                           	line	45
   575                           
   576                           ;initializer for _sek
   577                           	retlw	032h
   578  01F8  3432               	line	42
   579                           
   580                           ;initializer for _www
   581                           	retlw	0FFh
   582  01F9  34FF               	line	41
   583                           
   584                           ;initializer for _qqq
   585                           	retlw	0FFh
   586  01FA  34FF               	global	_qqq1
   587                           	global	_www1
   588                           	global	_time
   589                           	global	_u
   590                           	global	_PORTA
   591                           _PORTA	set	0xC
   592  000C                     	global	_RA4
   593                           _RA4	set	0x64
   594  0064                     	global	_RA5
   595                           _RA5	set	0x65
   596  0065                     	global	_RA1
   597                           _RA1	set	0x61
   598  0061                     	global	_RA0
   599                           _RA0	set	0x60
   600  0060                     	global	_ADCON0
   601                           _ADCON0	set	0x9D
   602  009D                     	global	_OSCCON
   603                           _OSCCON	set	0x99
   604  0099                     	global	_TRISA
   605                           _TRISA	set	0x8C
   606  008C                     	global	_ANSELA
   607                           _ANSELA	set	0x18C
   608  018C                     ; #config settings
   609                           global __CFG_FOSC$INTOSC
   610                           __CFG_FOSC$INTOSC equ 0x0
   611  0000                     global __CFG_WDTE$OFF
   612                           __CFG_WDTE$OFF equ 0x0
   613  0000                     global __CFG_PWRTE$OFF
   614                           __CFG_PWRTE$OFF equ 0x0
   615  0000                     global __CFG_MCLRE$OFF
   616                           __CFG_MCLRE$OFF equ 0x0
   617  0000                     global __CFG_CP$ON
   618                           __CFG_CP$ON equ 0x0
   619  0000                     global __CFG_CPD$ON
   620                           __CFG_CPD$ON equ 0x0
   621  0000                     global __CFG_BOREN$ON
   622                           __CFG_BOREN$ON equ 0x0
   623  0000                     global __CFG_CLKOUTEN$OFF
   624                           __CFG_CLKOUTEN$OFF equ 0x0
   625  0000                     global __CFG_IESO$OFF
   626                           __CFG_IESO$OFF equ 0x0
   627  0000                     global __CFG_FCMEN$OFF
   628                           __CFG_FCMEN$OFF equ 0x0
   629  0000                     global __CFG_WRT$OFF
   630                           __CFG_WRT$OFF equ 0x0
   631  0000                     global __CFG_PLLEN$OFF
   632                           __CFG_PLLEN$OFF equ 0x0
   633  0000                     global __CFG_STVREN$ON
   634                           __CFG_STVREN$ON equ 0x0
   635  0000                     global __CFG_BORV$LO
   636                           __CFG_BORV$LO equ 0x0
   637  0000                     global __CFG_LVP$OFF
   638                           __CFG_LVP$OFF equ 0x0
   639  0000                     	file	"C:\Users\User\AppData\Local\Temp\s34s."
   640                           	line	#
   641                           psect cinit,class=CODE,delta=2
   642                           global start_initialization
   643                           start_initialization:
   644  07EB                     
   645                           global __initialization
   646                           __initialization:
   647  07EB                     psect	bssBANK0,class=BANK0,space=1,noexec
   648                           global __pbssBANK0
   649                           __pbssBANK0:
   650  004A                     _qqq1:
   651  004A                            ds      1
   652  004A                     
   653                           _www1:
   654  004B                            ds      1
   655  004B                     
   656                           _time:
   657  004C                            ds      1
   658  004C                     
   659                           _i:
   660  004D                            ds      1
   661  004D                     
   662                           _u:
   663  004E                            ds      1
   664  004E                     
   665                           _y:
   666  004F                            ds      1
   667  004F                     
   668                           _x:
   669  0050                            ds      1
   670  0050                     
   671                           psect	dataBANK0,class=BANK0,space=1,noexec
   672                           global __pdataBANK0
   673                           __pdataBANK0:
   674  0051                     	file	"Encoder.c"
   675                           	line	45
   676                           _sek:
   677  0051                            ds      1
   678  0051                     
   679                           psect	dataBANK0
   680                           	file	"Encoder.c"
   681                           	line	42
   682                           _www:
   683  0052                            ds      1
   684  0052                     
   685                           psect	dataBANK0
   686                           	file	"Encoder.c"
   687                           	line	41
   688                           _qqq:
   689  0053                            ds      1
   690  0053                     
   691                           	file	"C:\Users\User\AppData\Local\Temp\s34s."
   692                           	line	#
   693                           ; Initialize objects allocated to BANK0
   694                           	global __pidataBANK0,__pdataBANK0
   695                           psect cinit,class=CODE,delta=2,merge=1
   696                           	fcall	__pidataBANK0+0		;fetch initializer
   697  07EB  3181  21F8  3187   	movwf	__pdataBANK0+0&07fh		
   698  07EE  00D1               	fcall	__pidataBANK0+1		;fetch initializer
   699  07EF  3181  21F9  3187   	movwf	__pdataBANK0+1&07fh		
   700  07F2  00D2               	fcall	__pidataBANK0+2		;fetch initializer
   701  07F3  3181  21FA  3187   	movwf	__pdataBANK0+2&07fh		
   702  07F6  00D3               	line	#
   703                           ; Clear objects allocated to BANK0
   704                           psect cinit,class=CODE,delta=2,merge=1
   705                           	global __pbssBANK0
   706                           	clrf	((__pbssBANK0)+0)&07Fh
   707  07F7  01CA               	clrf	((__pbssBANK0)+1)&07Fh
   708  07F8  01CB               	clrf	((__pbssBANK0)+2)&07Fh
   709  07F9  01CC               	clrf	((__pbssBANK0)+3)&07Fh
   710  07FA  01CD               	clrf	((__pbssBANK0)+4)&07Fh
   711  07FB  01CE               	clrf	((__pbssBANK0)+5)&07Fh
   712  07FC  01CF               	clrf	((__pbssBANK0)+6)&07Fh
   713  07FD  01D0               psect cinit,class=CODE,delta=2,merge=1
   714                           global end_of_initialization,__end_of__initialization
   715                           
   716                           ;End of C runtime variable initialization code
   717                           
   718                           end_of_initialization:
   719  07FE                     __end_of__initialization:
   720  07FE                     movlb 0
   721  07FE  0020               ljmp _main	;jump to C main() function
   722  07FF  2C16               psect	cstackCOMMON,class=COMMON,space=1,noexec
   723                           global __pcstackCOMMON
   724                           __pcstackCOMMON:
   725  0070                     ?_up:	; 1 bytes @ 0x0
   726  0070                     ??_up:	; 1 bytes @ 0x0
   727  0070                     ?_upInner:	; 1 bytes @ 0x0
   728  0070                     ??_upInner:	; 1 bytes @ 0x0
   729  0070                     ?_down:	; 1 bytes @ 0x0
   730  0070                     ??_down:	; 1 bytes @ 0x0
   731  0070                     ?_downInner:	; 1 bytes @ 0x0
   732  0070                     ??_downInner:	; 1 bytes @ 0x0
   733  0070                     ?_main:	; 1 bytes @ 0x0
   734  0070                     	global	?__Umul8_16
   735                           ?__Umul8_16:	; 2 bytes @ 0x0
   736  0070                     	global	?_test_bit
   737                           ?_test_bit:	; 2 bytes @ 0x0
   738  0070                     	global	?___xxtofl
   739                           ?___xxtofl:	; 4 bytes @ 0x0
   740  0070                     	global	__Umul8_16@multiplicand
   741                           __Umul8_16@multiplicand:	; 1 bytes @ 0x0
   742  0070                     	global	test_bit@aValue
   743                           test_bit@aValue:	; 2 bytes @ 0x0
   744  0070                     	global	___xxtofl@val
   745                           ___xxtofl@val:	; 4 bytes @ 0x0
   746  0070                     	ds	2
   747  0070                     ??__Umul8_16:	; 1 bytes @ 0x2
   748  0072                     	global	test_bit@aNumber
   749                           test_bit@aNumber:	; 2 bytes @ 0x2
   750  0072                     	ds	2
   751  0072                     ??_test_bit:	; 1 bytes @ 0x4
   752  0074                     ??___xxtofl:	; 1 bytes @ 0x4
   753  0074                     	global	__Umul8_16@product
   754                           __Umul8_16@product:	; 2 bytes @ 0x4
   755  0074                     	ds	2
   756  0074                     	global	__Umul8_16@word_mpld
   757                           __Umul8_16@word_mpld:	; 2 bytes @ 0x6
   758  0076                     	ds	2
   759  0076                     	global	___xxtofl@sign
   760                           ___xxtofl@sign:	; 1 bytes @ 0x8
   761  0078                     	global	__Umul8_16@multiplier
   762                           __Umul8_16@multiplier:	; 1 bytes @ 0x8
   763  0078                     	ds	1
   764  0078                     	global	___xxtofl@exp
   765                           ___xxtofl@exp:	; 1 bytes @ 0x9
   766  0079                     	ds	1
   767  0079                     	global	___xxtofl@arg
   768                           ___xxtofl@arg:	; 4 bytes @ 0xA
   769  007A                     	ds	4
   770  007A                     psect	cstackBANK0,class=BANK0,space=1,noexec
   771                           global __pcstackBANK0
   772                           __pcstackBANK0:
   773  0020                     	global	?___flmul
   774                           ?___flmul:	; 4 bytes @ 0x0
   775  0020                     	global	___flmul@b
   776                           ___flmul@b:	; 4 bytes @ 0x0
   777  0020                     	ds	4
   778  0020                     	global	___flmul@a
   779                           ___flmul@a:	; 4 bytes @ 0x4
   780  0024                     	ds	4
   781  0024                     ??___flmul:	; 1 bytes @ 0x8
   782  0028                     	ds	5
   783  0028                     	global	___flmul@sign
   784                           ___flmul@sign:	; 1 bytes @ 0xD
   785  002D                     	ds	1
   786  002D                     	global	___flmul@grs
   787                           ___flmul@grs:	; 4 bytes @ 0xE
   788  002E                     	ds	4
   789  002E                     	global	___flmul@aexp
   790                           ___flmul@aexp:	; 1 bytes @ 0x12
   791  0032                     	ds	1
   792  0032                     	global	___flmul@bexp
   793                           ___flmul@bexp:	; 1 bytes @ 0x13
   794  0033                     	ds	1
   795  0033                     	global	___flmul@prod
   796                           ___flmul@prod:	; 4 bytes @ 0x14
   797  0034                     	ds	4
   798  0034                     	global	___flmul@temp
   799                           ___flmul@temp:	; 2 bytes @ 0x18
   800  0038                     	ds	2
   801  0038                     	global	?___fltol
   802                           ?___fltol:	; 4 bytes @ 0x1A
   803  003A                     	global	___fltol@f1
   804                           ___fltol@f1:	; 4 bytes @ 0x1A
   805  003A                     	ds	4
   806  003A                     ??___fltol:	; 1 bytes @ 0x1E
   807  003E                     	ds	5
   808  003E                     	global	___fltol@sign1
   809                           ___fltol@sign1:	; 1 bytes @ 0x23
   810  0043                     	ds	1
   811  0043                     	global	___fltol@exp1
   812                           ___fltol@exp1:	; 1 bytes @ 0x24
   813  0044                     	ds	1
   814  0044                     ??_main:	; 1 bytes @ 0x25
   815  0045                     	ds	5
   816  0045                     ;!
   817                           ;!Data Sizes:
   818                           ;!    Strings     0
   819                           ;!    Constant    0
   820                           ;!    Data        3
   821                           ;!    BSS         7
   822                           ;!    Persistent  0
   823                           ;!    Stack       0
   824                           ;!
   825                           ;!Auto Spaces:
   826                           ;!    Space          Size  Autos    Used
   827                           ;!    COMMON           14     14      14
   828                           ;!    BANK0            80     42      52
   829                           ;!    BANK1            32      0       0
   830                           
   831                           ;!
   832                           ;!Pointer List with Targets:
   833                           ;!
   834                           ;!    None.
   835                           
   836                           
   837                           ;!
   838                           ;!Critical Paths under _main in COMMON
   839                           ;!
   840                           ;!    _main->___xxtofl
   841                           ;!    ___fltol->___xxtofl
   842                           ;!    ___flmul->___xxtofl
   843                           ;!
   844                           ;!Critical Paths under _main in BANK0
   845                           ;!
   846                           ;!    _main->___fltol
   847                           ;!    ___fltol->___flmul
   848                           ;!
   849                           ;!Critical Paths under _main in BANK1
   850                           ;!
   851                           ;!    None.
   852                           
   853 ;;
   854 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   855 ;;
   856                           
   857                           ;!
   858                           ;!Call Graph Tables:
   859                           ;!
   860                           ;! ---------------------------------------------------------------------------------
   861                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   862                           ;! ---------------------------------------------------------------------------------
   863                           ;! (0) _main                                                 5     5      0    4076
   864                           ;!                                             37 BANK0      5     5      0
   865                           ;!                            ___flmul
   866                           ;!                            ___fltol
   867                           ;!                           ___xxtofl
   868                           ;!                               _down
   869                           ;!                          _downInner
   870                           ;!                           _test_bit
   871                           ;!                                 _up
   872                           ;!                            _upInner
   873                           ;! ---------------------------------------------------------------------------------
   874                           ;! (1) _upInner                                              1     1      0       0
   875                           ;!                                              0 COMMON     1     1      0
   876                           ;! ---------------------------------------------------------------------------------
   877                           ;! (1) _up                                                   2     2      0       0
   878                           ;!                                              0 COMMON     2     2      0
   879                           ;! ---------------------------------------------------------------------------------
   880                           ;! (1) _test_bit                                             6     2      4     956
   881                           ;!                                              0 COMMON     6     2      4
   882                           ;! ---------------------------------------------------------------------------------
   883                           ;! (1) _downInner                                            1     1      0       0
   884                           ;!                                              0 COMMON     1     1      0
   885                           ;! ---------------------------------------------------------------------------------
   886                           ;! (1) _down                                                 2     2      0       0
   887                           ;!                                              0 COMMON     2     2      0
   888                           ;! ---------------------------------------------------------------------------------
   889                           ;! (1) ___xxtofl                                            14    10      4     398
   890                           ;!                                              0 COMMON    14    10      4
   891                           ;! ---------------------------------------------------------------------------------
   892                           ;! (1) ___fltol                                             11     7      4     305
   893                           ;!                                             26 BANK0     11     7      4
   894                           ;!                            ___flmul (ARG)
   895                           ;!                           ___xxtofl (ARG)
   896                           ;! ---------------------------------------------------------------------------------
   897                           ;! (1) ___flmul                                             26    18      8    2417
   898                           ;!                                              0 BANK0     26    18      8
   899                           ;!                          __Umul8_16
   900                           ;!                           ___xxtofl (ARG)
   901                           ;! ---------------------------------------------------------------------------------
   902                           ;! (2) __Umul8_16                                            9     7      2     799
   903                           ;!                                              0 COMMON     9     7      2
   904                           ;! ---------------------------------------------------------------------------------
   905                           ;! Estimated maximum stack depth 2
   906                           ;! ---------------------------------------------------------------------------------
   907                           ;!
   908                           ;! Call Graph Graphs:
   909                           ;!
   910                           ;! _main (ROOT)
   911                           ;!   ___flmul
   912                           ;!     __Umul8_16
   913                           ;!     ___xxtofl (ARG)
   914                           ;!   ___fltol
   915                           ;!     ___flmul (ARG)
   916                           ;!       __Umul8_16
   917                           ;!       ___xxtofl (ARG)
   918                           ;!     ___xxtofl (ARG)
   919                           ;!   ___xxtofl
   920                           ;!   _down
   921                           ;!   _downInner
   922                           ;!   _test_bit
   923                           ;!   _up
   924                           ;!   _upInner
   925                           ;!
   926                           
   927                           ;! Address spaces:
   928                           
   929                           ;!Name               Size   Autos  Total    Cost      Usage
   930                           ;!BIGRAM              70      0       0       0        0.0%
   931                           ;!EEDATA             100      0       0       0        0.0%
   932                           ;!NULL                 0      0       0       0        0.0%
   933                           ;!CODE                 0      0       0       0        0.0%
   934                           ;!BITCOMMON            E      0       0       1        0.0%
   935                           ;!BITSFR0              0      0       0       1        0.0%
   936                           ;!SFR0                 0      0       0       1        0.0%
   937                           ;!COMMON               E      E       E       2      100.0%
   938                           ;!BITSFR1              0      0       0       2        0.0%
   939                           ;!SFR1                 0      0       0       2        0.0%
   940                           ;!BITSFR2              0      0       0       3        0.0%
   941                           ;!SFR2                 0      0       0       3        0.0%
   942                           ;!STACK                0      0       0       3        0.0%
   943                           ;!BITSFR3              0      0       0       4        0.0%
   944                           ;!SFR3                 0      0       0       4        0.0%
   945                           ;!ABS                  0      0      42       4        0.0%
   946                           ;!BITBANK0            50      0       0       5        0.0%
   947                           ;!BITSFR4              0      0       0       5        0.0%
   948                           ;!SFR4                 0      0       0       5        0.0%
   949                           ;!BANK0               50     2A      34       6       65.0%
   950                           ;!BITSFR5              0      0       0       6        0.0%
   951                           ;!SFR5                 0      0       0       6        0.0%
   952                           ;!BITBANK1            20      0       0       7        0.0%
   953                           ;!BITSFR6              0      0       0       7        0.0%
   954                           ;!SFR6                 0      0       0       7        0.0%
   955                           ;!BANK1               20      0       0       8        0.0%
   956                           ;!BITSFR7              0      0       0       8        0.0%
   957                           ;!SFR7                 0      0       0       8        0.0%
   958                           ;!BITSFR8              0      0       0       9        0.0%
   959                           ;!SFR8                 0      0       0       9        0.0%
   960                           ;!DATA                 0      0      42       9        0.0%
   961                           ;!BITSFR9              0      0       0      10        0.0%
   962                           ;!SFR9                 0      0       0      10        0.0%
   963                           ;!BITSFR10             0      0       0      11        0.0%
   964                           ;!SFR10                0      0       0      11        0.0%
   965                           ;!BITSFR11             0      0       0      12        0.0%
   966                           ;!SFR11                0      0       0      12        0.0%
   967                           ;!BITSFR12             0      0       0      13        0.0%
   968                           ;!SFR12                0      0       0      13        0.0%
   969                           ;!BITSFR13             0      0       0      14        0.0%
   970                           ;!SFR13                0      0       0      14        0.0%
   971                           ;!BITSFR14             0      0       0      15        0.0%
   972                           ;!SFR14                0      0       0      15        0.0%
   973                           ;!BITSFR15             0      0       0      16        0.0%
   974                           ;!SFR15                0      0       0      16        0.0%
   975                           ;!BITSFR16             0      0       0      17        0.0%
   976                           ;!SFR16                0      0       0      17        0.0%
   977                           ;!BITSFR17             0      0       0      18        0.0%
   978                           ;!SFR17                0      0       0      18        0.0%
   979                           ;!BITSFR18             0      0       0      19        0.0%
   980                           ;!SFR18                0      0       0      19        0.0%
   981                           ;!BITSFR19             0      0       0      20        0.0%
   982                           ;!SFR19                0      0       0      20        0.0%
   983                           ;!BITSFR20             0      0       0      21        0.0%
   984                           ;!SFR20                0      0       0      21        0.0%
   985                           ;!BITSFR21             0      0       0      22        0.0%
   986                           ;!SFR21                0      0       0      22        0.0%
   987                           ;!BITSFR22             0      0       0      23        0.0%
   988                           ;!SFR22                0      0       0      23        0.0%
   989                           ;!BITSFR23             0      0       0      24        0.0%
   990                           ;!SFR23                0      0       0      24        0.0%
   991                           ;!BITSFR24             0      0       0      25        0.0%
   992                           ;!SFR24                0      0       0      25        0.0%
   993                           ;!BITSFR25             0      0       0      26        0.0%
   994                           ;!SFR25                0      0       0      26        0.0%
   995                           ;!BITSFR26             0      0       0      27        0.0%
   996                           ;!SFR26                0      0       0      27        0.0%
   997                           ;!BITSFR27             0      0       0      28        0.0%
   998                           ;!SFR27                0      0       0      28        0.0%
   999                           ;!BITSFR28             0      0       0      29        0.0%
  1000                           ;!SFR28                0      0       0      29        0.0%
  1001                           ;!BITSFR29             0      0       0      30        0.0%
  1002                           ;!SFR29                0      0       0      30        0.0%
  1003                           ;!BITSFR30             0      0       0      31        0.0%
  1004                           ;!SFR30                0      0       0      31        0.0%
  1005                           ;!BITSFR31             0      0       0      32        0.0%
  1006                           ;!SFR31                0      0       0      32        0.0%
  1007                           
  1008                           	global	_main
  1009                           
  1010 ;; *************** function _main *****************
  1011 ;; Defined at:
  1012 ;;		line 111 in file "Encoder.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2, status,0, pclath, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : B1F/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMMON   BANK0   BANK1
  1026 ;;      Params:         0       0       0
  1027 ;;      Locals:         0       0       0
  1028 ;;      Temps:          0       5       0
  1029 ;;      Totals:         0       5       0
  1030 ;;Total ram usage:        5 bytes
  1031 ;; Hardware stack levels required when called:    2
  1032 ;; This function calls:
  1033 ;;		___flmul
  1034 ;;		___fltol
  1035 ;;		___xxtofl
  1036 ;;		_down
  1037 ;;		_downInner
  1038 ;;		_test_bit
  1039 ;;		_up
  1040 ;;		_upInner
  1041 ;; This function is called by:
  1042 ;;		Startup code after reset
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1,group=0
  1046                           	file	"Encoder.c"
  1047                           	line	111
  1048                           global __pmaintext
  1049                           __pmaintext:	;psect for function _main
  1050  0416                     psect	maintext
  1051                           	file	"Encoder.c"
  1052                           	line	111
  1053                           	global	__size_of_main
  1054                           	__size_of_main	equ	__end_of_main-_main
  1055  016A                     	
  1056                           _main:	
  1057  0416                     ;incstack = 0
  1058                           	opt	stack 14
  1059                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1060                           	line	112
  1061                           	
  1062                           l1266:	
  1063  0416                     ;Encoder.c: 112:                     u = 0;
  1064                           	movlw	low(0F0h)
  1065  0416  30F0               	movlb 1	; select bank1
  1066  0417  0021               	movwf	(153)^080h	;volatile
  1067  0418  0099               	line	113
  1068                           	
  1069                           l1268:	
  1070  0419                     ;Encoder.c: 113:                     sek = sek * 1;
  1071                           	movlb 3	; select bank3
  1072  0419  0023               	clrf	(396)^0180h	;volatile
  1073  041A  018C               	line	114
  1074                           	
  1075                           l1270:	
  1076  041B                     ;Encoder.c: 114:                 }
  1077                           	movlb 1	; select bank1
  1078  041B  0021               	clrf	(157)^080h	;volatile
  1079  041C  019D               	line	115
  1080                           	
  1081                           l1272:	
  1082  041D                     ;Encoder.c: 115:                 _delay((unsigned long)((1)*(32000000L/4000.0)));
  1083                           	movlb 0	; select bank0
  1084  041D  0020               	clrf	(12)	;volatile
  1085  041E  018C               	line	116
  1086                           	
  1087                           l1274:	
  1088  041F                     ;Encoder.c: 116:             }
  1089                           	movlw	low(033h)
  1090  041F  3033               	movlb 1	; select bank1
  1091  0420  0021               	movwf	(140)^080h	;volatile
  1092  0421  008C               	goto	l1276
  1093  0422  2C23               	line	117
  1094                           ;Encoder.c: 117:             RA1 = 0;
  1095                           	
  1096                           l68:	
  1097  0423                     	line	118
  1098                           	
  1099                           l1276:	
  1100  0423                     ;Encoder.c: 118:             TRISA = 0b00110011;
  1101                           	movlb 0	; select bank0
  1102  0423  0020               	movf	(_qqq),w
  1103  0424  0853               	movwf	(??_main+0)+0
  1104  0425  00C5               	clrf	(??_main+0)+0+1
  1105  0426  01C6               	movf	0+(??_main+0)+0,w
  1106  0427  0845               	movwf	(test_bit@aValue)
  1107  0428  00F0               	movf	1+(??_main+0)+0,w
  1108  0429  0846               	movwf	(test_bit@aValue+1)
  1109  042A  00F1               	movlw	0
  1110  042B  3000               	movwf	(test_bit@aNumber)
  1111  042C  00F2               	movwf	(test_bit@aNumber+1)
  1112  042D  00F3               	fcall	_test_bit
  1113  042E  3181  21FB  3184   	clrc
  1114  0431  1003               	movlb 0	; select bank0
  1115  0432  0020               	btfsc	(101/8),(101)&7	;volatile
  1116  0433  1A8C               	setc
  1117  0434  1403               	movlw	0
  1118  0435  3000               	addwfc	wreg,w
  1119  0436  3D09               	movwf	(??_main+2)+0
  1120  0437  00C7               	clrf	(??_main+2)+0+1
  1121  0438  01C8               	movf	(1+(?_test_bit)),w
  1122  0439  0871               	xorwf	1+(??_main+2)+0,w
  1123  043A  0648               	skipz
  1124  043B  1D03               	goto	u1235
  1125  043C  2C3F               	movf	(0+(?_test_bit)),w
  1126  043D  0870               	xorwf	0+(??_main+2)+0,w
  1127  043E  0647               u1235:
  1128  043F                     
  1129                           	skipz
  1130  043F  1D03               	goto	u1231
  1131  0440  2C42               	goto	u1230
  1132  0441  2C43               u1231:
  1133  0442                     	goto	l1308
  1134  0442  2CE9               u1230:
  1135  0443                     	line	119
  1136                           	
  1137                           l1278:	
  1138  0443                     ;Encoder.c: 119:         }
  1139                           	fcall	_up
  1140  0443  3182  222F  3184   	line	120
  1141                           	
  1142                           l1280:	
  1143  0446                     ;Encoder.c: 120:         sek = 50;
  1144                           	movlb 0	; select bank0
  1145  0446  0020               	clrf	(_u)
  1146  0447  01CE               	
  1147                           l1282:	
  1148  0448                     	movlw	low(064h)
  1149  0448  3064               	subwf	(_u),w
  1150  0449  024E               	skipc
  1151  044A  1C03               	goto	u1241
  1152  044B  2C4D               	goto	u1240
  1153  044C  2C4E               u1241:
  1154  044D                     	goto	l1286
  1155  044D  2C50               u1240:
  1156  044E                     	goto	l71
  1157  044E  2CE4               	
  1158                           l1284:	
  1159  044F                     	goto	l71
  1160  044F  2CE4               	
  1161                           l70:	
  1162  0450                     	line	121
  1163                           	
  1164                           l1286:	
  1165  0450                     ;Encoder.c: 121:     }
  1166                           	movf	(_qqq),w
  1167  0450  0853               	movwf	(??_main+0)+0
  1168  0451  00C5               	clrf	(??_main+0)+0+1
  1169  0452  01C6               	movf	0+(??_main+0)+0,w
  1170  0453  0845               	movwf	(test_bit@aValue)
  1171  0454  00F0               	movf	1+(??_main+0)+0,w
  1172  0455  0846               	movwf	(test_bit@aValue+1)
  1173  0456  00F1               	movlw	0
  1174  0457  3000               	movwf	(test_bit@aNumber)
  1175  0458  00F2               	movwf	(test_bit@aNumber+1)
  1176  0459  00F3               	fcall	_test_bit
  1177  045A  3181  21FB  3184   	clrc
  1178  045D  1003               	movlb 0	; select bank0
  1179  045E  0020               	btfsc	(100/8),(100)&7	;volatile
  1180  045F  1A0C               	setc
  1181  0460  1403               	movlw	0
  1182  0461  3000               	addwfc	wreg,w
  1183  0462  3D09               	movwf	(??_main+2)+0
  1184  0463  00C7               	clrf	(??_main+2)+0+1
  1185  0464  01C8               	movf	(1+(?_test_bit)),w
  1186  0465  0871               	xorwf	1+(??_main+2)+0,w
  1187  0466  0648               	skipz
  1188  0467  1D03               	goto	u1255
  1189  0468  2C6B               	movf	(0+(?_test_bit)),w
  1190  0469  0870               	xorwf	0+(??_main+2)+0,w
  1191  046A  0647               u1255:
  1192  046B                     
  1193                           	skipz
  1194  046B  1D03               	goto	u1251
  1195  046C  2C6E               	goto	u1250
  1196  046D  2C6F               u1251:
  1197  046E                     	goto	l1294
  1198  046E  2CAB               u1250:
  1199  046F                     	line	122
  1200                           	
  1201                           l1288:	
  1202  046F                     ;Encoder.c: 122: }
  1203                           	fcall	_upInner
  1204  046F  3182  22A2  3184   	line	123
  1205                           	
  1206                           l1290:	
  1207  0472                     	movlb 0	; select bank0
  1208  0472  0020               	clrf	(_u)
  1209  0473  01CE               	line	124
  1210                           	
  1211                           l1292:	
  1212  0474                     	movf	(_sek),w
  1213  0474  0851               	movwf	(??_main+0)+0
  1214  0475  00C5               	clrf	(??_main+0)+0+1
  1215  0476  01C6               	clrf	(??_main+0)+0+2
  1216  0477  01C7               	clrf	(??_main+0)+0+3
  1217  0478  01C8               	movf	3+(??_main+0)+0,w
  1218  0479  0848               	movwf	(___xxtofl@val+3)
  1219  047A  00F3               	movf	2+(??_main+0)+0,w
  1220  047B  0847               	movwf	(___xxtofl@val+2)
  1221  047C  00F2               	movf	1+(??_main+0)+0,w
  1222  047D  0846               	movwf	(___xxtofl@val+1)
  1223  047E  00F1               	movf	0+(??_main+0)+0,w
  1224  047F  0845               	movwf	(___xxtofl@val)
  1225  0480  00F0               
  1226                           	movlw	low(01h)
  1227  0481  3001               	fcall	___xxtofl
  1228  0482  3183  2362  3184   	movf	(3+(?___xxtofl)),w
  1229  0485  0873               	movlb 0	; select bank0
  1230  0486  0020               	movwf	(___flmul@a+3)
  1231  0487  00A7               	movf	(2+(?___xxtofl)),w
  1232  0488  0872               	movwf	(___flmul@a+2)
  1233  0489  00A6               	movf	(1+(?___xxtofl)),w
  1234  048A  0871               	movwf	(___flmul@a+1)
  1235  048B  00A5               	movf	(0+(?___xxtofl)),w
  1236  048C  0870               	movwf	(___flmul@a)
  1237  048D  00A4               
  1238                           	movlw	0x3f
  1239  048E  303F               	movwf	(___flmul@b+3)
  1240  048F  00A3               	movlw	0x8c
  1241  0490  308C               	movwf	(___flmul@b+2)
  1242  0491  00A2               	movlw	0xcc
  1243  0492  30CC               	movwf	(___flmul@b+1)
  1244  0493  00A1               	movlw	0xcd
  1245  0494  30CD               	movwf	(___flmul@b)
  1246  0495  00A0               
  1247                           	fcall	___flmul
  1248  0496  3185  2580  3184   	movlb 0	; select bank0
  1249  0499  0020               	movf	(3+(?___flmul)),w
  1250  049A  0823               	movwf	(___fltol@f1+3)
  1251  049B  00BD               	movf	(2+(?___flmul)),w
  1252  049C  0822               	movwf	(___fltol@f1+2)
  1253  049D  00BC               	movf	(1+(?___flmul)),w
  1254  049E  0821               	movwf	(___fltol@f1+1)
  1255  049F  00BB               	movf	(0+(?___flmul)),w
  1256  04A0  0820               	movwf	(___fltol@f1)
  1257  04A1  00BA               
  1258                           	fcall	___fltol
  1259  04A2  3182  22CD  3184   	movlb 0	; select bank0
  1260  04A5  0020               	movf	(0+(?___fltol)),w
  1261  04A6  083A               	movwf	(??_main+4)+0
  1262  04A7  00C9               	movf	(??_main+4)+0,w
  1263  04A8  0849               	movwf	(_sek)
  1264  04A9  00D1               	goto	l1294
  1265  04AA  2CAB               	line	125
  1266                           	
  1267                           l72:	
  1268  04AB                     	line	126
  1269                           	
  1270                           l1294:	
  1271  04AB                     	movf	(_qqq),w
  1272  04AB  0853               	movwf	(??_main+0)+0
  1273  04AC  00C5               	clrf	(??_main+0)+0+1
  1274  04AD  01C6               	movf	0+(??_main+0)+0,w
  1275  04AE  0845               	movwf	(test_bit@aValue)
  1276  04AF  00F0               	movf	1+(??_main+0)+0,w
  1277  04B0  0846               	movwf	(test_bit@aValue+1)
  1278  04B1  00F1               	movlw	0
  1279  04B2  3000               	movwf	(test_bit@aNumber)
  1280  04B3  00F2               	movwf	(test_bit@aNumber+1)
  1281  04B4  00F3               	fcall	_test_bit
  1282  04B5  3181  21FB  3184   	clrc
  1283  04B8  1003               	movlb 0	; select bank0
  1284  04B9  0020               	btfsc	(100/8),(100)&7	;volatile
  1285  04BA  1A0C               	setc
  1286  04BB  1403               	movlw	0
  1287  04BC  3000               	addwfc	wreg,w
  1288  04BD  3D09               	movwf	(??_main+2)+0
  1289  04BE  00C7               	clrf	(??_main+2)+0+1
  1290  04BF  01C8               	movf	(1+(?_test_bit)),w
  1291  04C0  0871               	xorwf	1+(??_main+2)+0,w
  1292  04C1  0648               	skipz
  1293  04C2  1D03               	goto	u1265
  1294  04C3  2CC6               	movf	(0+(?_test_bit)),w
  1295  04C4  0870               	xorwf	0+(??_main+2)+0,w
  1296  04C5  0647               u1265:
  1297  04C6                     
  1298                           	skipz
  1299  04C6  1D03               	goto	u1261
  1300  04C7  2CC9               	goto	u1260
  1301  04C8  2CCA               u1261:
  1302  04C9                     	goto	l1300
  1303  04C9  2CD0               u1260:
  1304  04CA                     	line	127
  1305                           	
  1306                           l1296:	
  1307  04CA                     	fcall	_upInner
  1308  04CA  3182  22A2  3184   	line	128
  1309                           	
  1310                           l1298:	
  1311  04CD                     	movlb 0	; select bank0
  1312  04CD  0020               	clrf	(_u)
  1313  04CE  01CE               	goto	l1300
  1314  04CF  2CD0               	line	130
  1315                           	
  1316                           l73:	
  1317  04D0                     	line	131
  1318                           	
  1319                           l1300:	
  1320  04D0                     	opt asmopt_push
  1321                           opt asmopt_off
  1322                           movlw	11
  1323  04D0  300B               	movlb 0	; select bank0
  1324  04D1  0020               movwf	((??_main+0)+0),f
  1325  04D2  00C5               	movlw	98
  1326  04D3  3062               u1337:
  1327  04D4                     decfsz	wreg
  1328  04D4  0B89               	goto	u1337
  1329  04D5  2CD4               	decfsz	((??_main+0)+0),f
  1330  04D6  0BC5               	goto	u1337
  1331  04D7  2CD4               	nop
  1332  04D8  0000               opt asmopt_pop
  1333                           
  1334                           	line	132
  1335                           	
  1336                           l1302:	
  1337  04D9                     	movlw	low(01h)
  1338  04D9  3001               	movlb 0	; select bank0
  1339  04DA  0020               	movwf	(??_main+0)+0
  1340  04DB  00C5               	movf	(??_main+0)+0,w
  1341  04DC  0845               	addwf	(_u),f
  1342  04DD  07CE               	
  1343                           l1304:	
  1344  04DE                     	movlw	low(064h)
  1345  04DE  3064               	subwf	(_u),w
  1346  04DF  024E               	skipc
  1347  04E0  1C03               	goto	u1271
  1348  04E1  2CE3               	goto	u1270
  1349  04E2  2CE4               u1271:
  1350  04E3                     	goto	l1286
  1351  04E3  2C50               u1270:
  1352  04E4                     	
  1353                           l71:	
  1354  04E4                     	line	133
  1355                           	bcf	(96/8),(96)&7	;volatile
  1356  04E4  100C               	line	134
  1357                           	
  1358                           l1306:	
  1359  04E5                     	movlw	low(033h)
  1360  04E5  3033               	movlb 1	; select bank1
  1361  04E6  0021               	movwf	(140)^080h	;volatile
  1362  04E7  008C               	goto	l1308
  1363  04E8  2CE9               	line	135
  1364                           	
  1365                           l69:	
  1366  04E9                     	line	136
  1367                           	
  1368                           l1308:	
  1369  04E9                     	movlb 0	; select bank0
  1370  04E9  0020               	movf	(_www),w
  1371  04EA  0852               	movwf	(??_main+0)+0
  1372  04EB  00C5               	clrf	(??_main+0)+0+1
  1373  04EC  01C6               	movf	0+(??_main+0)+0,w
  1374  04ED  0845               	movwf	(test_bit@aValue)
  1375  04EE  00F0               	movf	1+(??_main+0)+0,w
  1376  04EF  0846               	movwf	(test_bit@aValue+1)
  1377  04F0  00F1               	movlw	0
  1378  04F1  3000               	movwf	(test_bit@aNumber)
  1379  04F2  00F2               	movwf	(test_bit@aNumber+1)
  1380  04F3  00F3               	fcall	_test_bit
  1381  04F4  3181  21FB  3184   	clrc
  1382  04F7  1003               	movlb 0	; select bank0
  1383  04F8  0020               	btfsc	(100/8),(100)&7	;volatile
  1384  04F9  1A0C               	setc
  1385  04FA  1403               	movlw	0
  1386  04FB  3000               	addwfc	wreg,w
  1387  04FC  3D09               	movwf	(??_main+2)+0
  1388  04FD  00C7               	clrf	(??_main+2)+0+1
  1389  04FE  01C8               	movf	(1+(?_test_bit)),w
  1390  04FF  0871               	xorwf	1+(??_main+2)+0,w
  1391  0500  0648               	skipz
  1392  0501  1D03               	goto	u1285
  1393  0502  2D05               	movf	(0+(?_test_bit)),w
  1394  0503  0870               	xorwf	0+(??_main+2)+0,w
  1395  0504  0647               u1285:
  1396  0505                     
  1397                           	skipz
  1398  0505  1D03               	goto	u1281
  1399  0506  2D08               	goto	u1280
  1400  0507  2D09               u1281:
  1401  0508                     	goto	l74
  1402  0508  2D78               u1280:
  1403  0509                     	line	137
  1404                           	
  1405                           l1310:	
  1406  0509                     	fcall	_down
  1407  0509  3182  220D  3184   	line	138
  1408                           	
  1409                           l1312:	
  1410  050C                     	movlb 0	; select bank0
  1411  050C  0020               	clrf	(_u)
  1412  050D  01CE               	
  1413                           l1314:	
  1414  050E                     	movlw	low(064h)
  1415  050E  3064               	subwf	(_u),w
  1416  050F  024E               	skipc
  1417  0510  1C03               	goto	u1291
  1418  0511  2D13               	goto	u1290
  1419  0512  2D14               u1291:
  1420  0513                     	goto	l1318
  1421  0513  2D16               u1290:
  1422  0514                     	goto	l76
  1423  0514  2D74               	
  1424                           l1316:	
  1425  0515                     	goto	l76
  1426  0515  2D74               	
  1427                           l75:	
  1428  0516                     	line	139
  1429                           	
  1430                           l1318:	
  1431  0516                     	movf	(_www),w
  1432  0516  0852               	movwf	(??_main+0)+0
  1433  0517  00C5               	clrf	(??_main+0)+0+1
  1434  0518  01C6               	movf	0+(??_main+0)+0,w
  1435  0519  0845               	movwf	(test_bit@aValue)
  1436  051A  00F0               	movf	1+(??_main+0)+0,w
  1437  051B  0846               	movwf	(test_bit@aValue+1)
  1438  051C  00F1               	movlw	0
  1439  051D  3000               	movwf	(test_bit@aNumber)
  1440  051E  00F2               	movwf	(test_bit@aNumber+1)
  1441  051F  00F3               	fcall	_test_bit
  1442  0520  3181  21FB  3184   	clrc
  1443  0523  1003               	movlb 0	; select bank0
  1444  0524  0020               	btfsc	(101/8),(101)&7	;volatile
  1445  0525  1A8C               	setc
  1446  0526  1403               	movlw	0
  1447  0527  3000               	addwfc	wreg,w
  1448  0528  3D09               	movwf	(??_main+2)+0
  1449  0529  00C7               	clrf	(??_main+2)+0+1
  1450  052A  01C8               	movf	(1+(?_test_bit)),w
  1451  052B  0871               	xorwf	1+(??_main+2)+0,w
  1452  052C  0648               	skipz
  1453  052D  1D03               	goto	u1305
  1454  052E  2D31               	movf	(0+(?_test_bit)),w
  1455  052F  0870               	xorwf	0+(??_main+2)+0,w
  1456  0530  0647               u1305:
  1457  0531                     
  1458                           	skipz
  1459  0531  1D03               	goto	u1301
  1460  0532  2D34               	goto	u1300
  1461  0533  2D35               u1301:
  1462  0534                     	goto	l1324
  1463  0534  2D3B               u1300:
  1464  0535                     	line	140
  1465                           	
  1466                           l1320:	
  1467  0535                     	fcall	_downInner
  1468  0535  3182  2277  3184   	line	141
  1469                           	
  1470                           l1322:	
  1471  0538                     	movlb 0	; select bank0
  1472  0538  0020               	clrf	(_u)
  1473  0539  01CE               	goto	l1324
  1474  053A  2D3B               	line	143
  1475                           	
  1476                           l77:	
  1477  053B                     	line	144
  1478                           	
  1479                           l1324:	
  1480  053B                     	movf	(_www),w
  1481  053B  0852               	movwf	(??_main+0)+0
  1482  053C  00C5               	clrf	(??_main+0)+0+1
  1483  053D  01C6               	movf	0+(??_main+0)+0,w
  1484  053E  0845               	movwf	(test_bit@aValue)
  1485  053F  00F0               	movf	1+(??_main+0)+0,w
  1486  0540  0846               	movwf	(test_bit@aValue+1)
  1487  0541  00F1               	movlw	0
  1488  0542  3000               	movwf	(test_bit@aNumber)
  1489  0543  00F2               	movwf	(test_bit@aNumber+1)
  1490  0544  00F3               	fcall	_test_bit
  1491  0545  3181  21FB  3184   	clrc
  1492  0548  1003               	movlb 0	; select bank0
  1493  0549  0020               	btfsc	(101/8),(101)&7	;volatile
  1494  054A  1A8C               	setc
  1495  054B  1403               	movlw	0
  1496  054C  3000               	addwfc	wreg,w
  1497  054D  3D09               	movwf	(??_main+2)+0
  1498  054E  00C7               	clrf	(??_main+2)+0+1
  1499  054F  01C8               	movf	(1+(?_test_bit)),w
  1500  0550  0871               	xorwf	1+(??_main+2)+0,w
  1501  0551  0648               	skipz
  1502  0552  1D03               	goto	u1315
  1503  0553  2D56               	movf	(0+(?_test_bit)),w
  1504  0554  0870               	xorwf	0+(??_main+2)+0,w
  1505  0555  0647               u1315:
  1506  0556                     
  1507                           	skipz
  1508  0556  1D03               	goto	u1311
  1509  0557  2D59               	goto	u1310
  1510  0558  2D5A               u1311:
  1511  0559                     	goto	l1330
  1512  0559  2D60               u1310:
  1513  055A                     	line	145
  1514                           	
  1515                           l1326:	
  1516  055A                     	fcall	_downInner
  1517  055A  3182  2277  3184   	line	146
  1518                           	
  1519                           l1328:	
  1520  055D                     	movlb 0	; select bank0
  1521  055D  0020               	clrf	(_u)
  1522  055E  01CE               	goto	l1330
  1523  055F  2D60               	line	148
  1524                           	
  1525                           l78:	
  1526  0560                     	line	149
  1527                           	
  1528                           l1330:	
  1529  0560                     	opt asmopt_push
  1530                           opt asmopt_off
  1531                           movlw	11
  1532  0560  300B               	movlb 0	; select bank0
  1533  0561  0020               movwf	((??_main+0)+0),f
  1534  0562  00C5               	movlw	98
  1535  0563  3062               u1347:
  1536  0564                     decfsz	wreg
  1537  0564  0B89               	goto	u1347
  1538  0565  2D64               	decfsz	((??_main+0)+0),f
  1539  0566  0BC5               	goto	u1347
  1540  0567  2D64               	nop
  1541  0568  0000               opt asmopt_pop
  1542                           
  1543                           	line	150
  1544                           	
  1545                           l1332:	
  1546  0569                     	movlw	low(01h)
  1547  0569  3001               	movlb 0	; select bank0
  1548  056A  0020               	movwf	(??_main+0)+0
  1549  056B  00C5               	movf	(??_main+0)+0,w
  1550  056C  0845               	addwf	(_u),f
  1551  056D  07CE               	
  1552                           l1334:	
  1553  056E                     	movlw	low(064h)
  1554  056E  3064               	subwf	(_u),w
  1555  056F  024E               	skipc
  1556  0570  1C03               	goto	u1321
  1557  0571  2D73               	goto	u1320
  1558  0572  2D74               u1321:
  1559  0573                     	goto	l1318
  1560  0573  2D16               u1320:
  1561  0574                     	
  1562                           l76:	
  1563  0574                     	line	151
  1564                           	bcf	(97/8),(97)&7	;volatile
  1565  0574  108C               	line	152
  1566                           	
  1567                           l1336:	
  1568  0575                     	movlw	low(033h)
  1569  0575  3033               	movlb 1	; select bank1
  1570  0576  0021               	movwf	(140)^080h	;volatile
  1571  0577  008C               	line	153
  1572                           	
  1573                           l74:	
  1574  0578                     	line	154
  1575                           	movlw	low(032h)
  1576  0578  3032               	movlb 0	; select bank0
  1577  0579  0020               	movwf	(??_main+0)+0
  1578  057A  00C5               	movf	(??_main+0)+0,w
  1579  057B  0845               	movwf	(_sek)
  1580  057C  00D1               	goto	l1276
  1581  057D  2C23               	line	155
  1582                           	
  1583                           l79:	
  1584  057E                     	goto	l1276
  1585  057E  2C23               	
  1586                           l80:	
  1587  057F                     	line	156
  1588                           	
  1589                           l81:	
  1590  057F                     	global	start
  1591                           	ljmp	start
  1592  057F  2801               	opt stack 0
  1593                           GLOBAL	__end_of_main
  1594                           	__end_of_main:
  1595  0580                     	signat	_main,89
  1596                           	global	_upInner
  1597                           
  1598 ;; *************** function _upInner *****************
  1599 ;; Defined at:
  1600 ;;		line 62 in file "Encoder.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;		None
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;		None
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  1    wreg      void 
  1607 ;; Registers used:
  1608 ;;		wreg, status,2, status,0
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMMON   BANK0   BANK1
  1614 ;;      Params:         0       0       0
  1615 ;;      Locals:         0       0       0
  1616 ;;      Temps:          1       0       0
  1617 ;;      Totals:         1       0       0
  1618 ;;Total ram usage:        1 bytes
  1619 ;; Hardware stack levels used:    1
  1620 ;; This function calls:
  1621 ;;		Nothing
  1622 ;; This function is called by:
  1623 ;;		_main
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1627                           	line	62
  1628                           global __ptext1
  1629                           __ptext1:	;psect for function _upInner
  1630  02A2                     psect	text1
  1631                           	file	"Encoder.c"
  1632                           	line	62
  1633                           	global	__size_of_upInner
  1634                           	__size_of_upInner	equ	__end_of_upInner-_upInner
  1635  002B                     	
  1636                           _upInner:	
  1637  02A2                     ;incstack = 0
  1638                           	opt	stack 15
  1639                           ; Regs used in _upInner: [wreg+status,2+status,0]
  1640                           	line	63
  1641                           	
  1642                           l1004:	
  1643  02A2                     ;Encoder.c: 63:         }
  1644                           	movlw	low(032h)
  1645  02A2  3032               	movlb 1	; select bank1
  1646  02A3  0021               	movwf	(140)^080h	;volatile
  1647  02A4  008C               	line	64
  1648                           	
  1649                           l1006:	
  1650  02A5                     ;Encoder.c: 64:     for (time = sek; time > 0; time--) {
  1651                           	movlb 0	; select bank0
  1652  02A5  0020               	bsf	(96/8),(96)&7	;volatile
  1653  02A6  140C               	line	65
  1654                           ;Encoder.c: 65:         _delay((unsigned long)((10)*(32000000L/4000.0)));
  1655                           	goto	l49
  1656  02A7  2AAC               	line	66
  1657                           	
  1658                           l1008:	
  1659  02A8                     ;Encoder.c: 66: 
  1660                           	movlw	low(032h)
  1661  02A8  3032               	movwf	(??_upInner+0)+0
  1662  02A9  00F0               	movf	(??_upInner+0)+0,w
  1663  02AA  0870               	movwf	(_sek)
  1664  02AB  00D1               	line	67
  1665                           ;Encoder.c: 67:     }
  1666                           	
  1667                           l49:	
  1668  02AC                     	line	68
  1669                           ;Encoder.c: 68: 
  1670                           	movf	(_sek),w
  1671  02AC  0851               	movwf	(??_upInner+0)+0
  1672  02AD  00F0               	movf	(??_upInner+0)+0,w
  1673  02AE  0870               	movwf	(_time)
  1674  02AF  00CC               	goto	l1014
  1675  02B0  2ABD               	
  1676                           l51:	
  1677  02B1                     	line	69
  1678                           	
  1679                           l1010:	
  1680  02B1                     ;Encoder.c: 69: 
  1681                           	opt asmopt_push
  1682                           opt asmopt_off
  1683                           movlw	104
  1684  02B1  3068               movwf	((??_upInner+0)+0),f
  1685  02B2  00F0               	movlw	228
  1686  02B3  30E4               u1357:
  1687  02B4                     decfsz	wreg
  1688  02B4  0B89               	goto	u1357
  1689  02B5  2AB4               	decfsz	((??_upInner+0)+0),f
  1690  02B6  0BF0               	goto	u1357
  1691  02B7  2AB4               	nop2
  1692  02B8  3200               opt asmopt_pop
  1693                           
  1694                           	line	71
  1695                           	
  1696                           l1012:	
  1697  02B9                     ;Encoder.c: 71:     qqq = ~qqq;
  1698                           	movlw	01h
  1699  02B9  3001               	movlb 0	; select bank0
  1700  02BA  0020               	subwf	(_time),f
  1701  02BB  02CC               	goto	l1014
  1702  02BC  2ABD               	
  1703                           l50:	
  1704  02BD                     	
  1705                           l1014:	
  1706  02BD                     	movf	((_time)),w
  1707  02BD  084C               	btfss	status,2
  1708  02BE  1D03               	goto	u711
  1709  02BF  2AC1               	goto	u710
  1710  02C0  2AC2               u711:
  1711  02C1                     	goto	l1010
  1712  02C1  2AB1               u710:
  1713  02C2                     	
  1714                           l52:	
  1715  02C2                     	line	75
  1716                           ;Encoder.c: 75: }
  1717                           	comf	(_qqq),f
  1718  02C2  09D3               	line	76
  1719                           ;Encoder.c: 76: 
  1720                           	comf	(_www),f
  1721  02C3  09D2               	line	77
  1722                           	
  1723                           l1016:	
  1724  02C4                     ;Encoder.c: 77: void main() {
  1725                           	comf	(_qqq),w
  1726  02C4  0953               	movwf	(??_upInner+0)+0
  1727  02C5  00F0               	movf	(??_upInner+0)+0,w
  1728  02C6  0870               	movwf	(_qqq1)
  1729  02C7  00CA               	line	78
  1730                           ;Encoder.c: 78:     OSCCON = 0xF0;
  1731                           	comf	(_www),w
  1732  02C8  0952               	movwf	(??_upInner+0)+0
  1733  02C9  00F0               	movf	(??_upInner+0)+0,w
  1734  02CA  0870               	movwf	(_www1)
  1735  02CB  00CB               	line	79
  1736                           	
  1737                           l53:	
  1738  02CC                     	return
  1739  02CC  0008               	opt stack 0
  1740                           GLOBAL	__end_of_upInner
  1741                           	__end_of_upInner:
  1742  02CD                     	signat	_upInner,89
  1743                           	global	_up
  1744                           
  1745 ;; *************** function _up *****************
  1746 ;; Defined at:
  1747 ;;		line 51 in file "Encoder.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;		None
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;		None
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      void 
  1754 ;; Registers used:
  1755 ;;		wreg, status,2
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMMON   BANK0   BANK1
  1761 ;;      Params:         0       0       0
  1762 ;;      Locals:         0       0       0
  1763 ;;      Temps:          2       0       0
  1764 ;;      Totals:         2       0       0
  1765 ;;Total ram usage:        2 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_main
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1774                           	line	51
  1775                           global __ptext2
  1776                           __ptext2:	;psect for function _up
  1777  022F                     psect	text2
  1778                           	file	"Encoder.c"
  1779                           	line	51
  1780                           	global	__size_of_up
  1781                           	__size_of_up	equ	__end_of_up-_up
  1782  0022                     	
  1783                           _up:	
  1784  022F                     ;incstack = 0
  1785                           	opt	stack 15
  1786                           ; Regs used in _up: [wreg+status,2]
  1787                           	line	52
  1788                           	
  1789                           l990:	
  1790  022F                     ;Encoder.c: 52:     TRISA = 0b00110011;
  1791                           	movlw	low(032h)
  1792  022F  3032               	movlb 1	; select bank1
  1793  0230  0021               	movwf	(140)^080h	;volatile
  1794  0231  008C               	line	53
  1795                           	
  1796                           l992:	
  1797  0232                     ;Encoder.c: 53:     qqq = ~qqq;
  1798                           	movlb 0	; select bank0
  1799  0232  0020               	bsf	(96/8),(96)&7	;volatile
  1800  0233  140C               	line	54
  1801                           ;Encoder.c: 54:     www = ~www;
  1802                           	opt asmopt_push
  1803                           opt asmopt_off
  1804                           movlw  5
  1805  0234  3005               movwf	((??_up+0)+0+1),f
  1806  0235  00F1               movlw	15
  1807  0236  300F               movwf	((??_up+0)+0),f
  1808  0237  00F0               	movlw	241
  1809  0238  30F1               u1367:
  1810  0239                     decfsz	wreg
  1811  0239  0B89               	goto	u1367
  1812  023A  2A39               	decfsz	((??_up+0)+0),f
  1813  023B  0BF0               	goto	u1367
  1814  023C  2A39               	decfsz	((??_up+0)+0+1),f
  1815  023D  0BF1               	goto	u1367
  1816  023E  2A39               	nop
  1817  023F  0000               opt asmopt_pop
  1818                           
  1819                           	line	55
  1820                           	
  1821                           l994:	
  1822  0240                     ;Encoder.c: 55:     qqq1 = ~qqq;
  1823                           	movlb 0	; select bank0
  1824  0240  0020               	bcf	(96/8),(96)&7	;volatile
  1825  0241  100C               	line	56
  1826                           ;Encoder.c: 56:     www1 = ~www;
  1827                           	movlw	low(033h)
  1828  0242  3033               	movlb 1	; select bank1
  1829  0243  0021               	movwf	(140)^080h	;volatile
  1830  0244  008C               	line	57
  1831                           	
  1832                           l996:	
  1833  0245                     ;Encoder.c: 57: }
  1834                           	movlb 0	; select bank0
  1835  0245  0020               	comf	(_qqq),f
  1836  0246  09D3               	line	58
  1837                           	
  1838                           l998:	
  1839  0247                     ;Encoder.c: 58: void downInner() {
  1840                           	comf	(_www),f
  1841  0247  09D2               	line	59
  1842                           	
  1843                           l1000:	
  1844  0248                     ;Encoder.c: 59:     TRISA = 0b00110001;
  1845                           	comf	(_qqq),w
  1846  0248  0953               	movwf	(??_up+0)+0
  1847  0249  00F0               	movf	(??_up+0)+0,w
  1848  024A  0870               	movwf	(_qqq1)
  1849  024B  00CA               	line	60
  1850                           	
  1851                           l1002:	
  1852  024C                     ;Encoder.c: 60:     RA1 = 1;
  1853                           	comf	(_www),w
  1854  024C  0952               	movwf	(??_up+0)+0
  1855  024D  00F0               	movf	(??_up+0)+0,w
  1856  024E  0870               	movwf	(_www1)
  1857  024F  00CB               	line	61
  1858                           	
  1859                           l46:	
  1860  0250                     	return
  1861  0250  0008               	opt stack 0
  1862                           GLOBAL	__end_of_up
  1863                           	__end_of_up:
  1864  0251                     	signat	_up,89
  1865                           	global	_test_bit
  1866                           
  1867 ;; *************** function _test_bit *****************
  1868 ;; Defined at:
  1869 ;;		line 47 in file "Encoder.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;  aValue          2    0[COMMON] unsigned int 
  1872 ;;  aNumber         2    2[COMMON] unsigned int 
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;		None
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  2    0[COMMON] unsigned int 
  1877 ;; Registers used:
  1878 ;;		wreg, status,2, status,0
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMMON   BANK0   BANK1
  1884 ;;      Params:         4       0       0
  1885 ;;      Locals:         0       0       0
  1886 ;;      Temps:          2       0       0
  1887 ;;      Totals:         6       0       0
  1888 ;;Total ram usage:        6 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; This function calls:
  1891 ;;		Nothing
  1892 ;; This function is called by:
  1893 ;;		_main
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1897                           	line	47
  1898                           global __ptext3
  1899                           __ptext3:	;psect for function _test_bit
  1900  01FB                     psect	text3
  1901                           	file	"Encoder.c"
  1902                           	line	47
  1903                           	global	__size_of_test_bit
  1904                           	__size_of_test_bit	equ	__end_of_test_bit-_test_bit
  1905  0012                     	
  1906                           _test_bit:	
  1907  01FB                     ;incstack = 0
  1908                           	opt	stack 15
  1909                           ; Regs used in _test_bit: [wreg+status,2+status,0]
  1910                           	line	48
  1911                           	
  1912                           l986:	
  1913  01FB                     ;Encoder.c: 48:     TRISA = 0b00110001;
  1914                           	movlw	01h
  1915  01FB  3001               	movwf	(??_test_bit+0)+0
  1916  01FC  00F4               	movlw	0
  1917  01FD  3000               	movwf	(??_test_bit+0)+0+1
  1918  01FE  00F5               	incf	(test_bit@aNumber),w
  1919  01FF  0A72               	goto	u704
  1920  0200  2A03               u705:
  1921  0201                     	lslf	(??_test_bit+0)+0,f
  1922  0201  35F4               	rlf	(??_test_bit+0)+1,f
  1923  0202  0DF5               u704:
  1924  0203                     	decfsz	wreg,f
  1925  0203  0B89               	goto	u705
  1926  0204  2A01               	movf	(test_bit@aValue),w
  1927  0205  0870               	andwf	0+(??_test_bit+0)+0,w
  1928  0206  0574               	movwf	(?_test_bit)
  1929  0207  00F0               	movf	(test_bit@aValue+1),w
  1930  0208  0871               	andwf	1+(??_test_bit+0)+0,w
  1931  0209  0575               	movwf	1+(?_test_bit)
  1932  020A  00F1               	goto	l43
  1933  020B  2A0C               	
  1934                           l988:	
  1935  020C                     	line	49
  1936                           	
  1937                           l43:	
  1938  020C                     	return
  1939  020C  0008               	opt stack 0
  1940                           GLOBAL	__end_of_test_bit
  1941                           	__end_of_test_bit:
  1942  020D                     	signat	_test_bit,8314
  1943                           	global	_downInner
  1944                           
  1945 ;; *************** function _downInner *****************
  1946 ;; Defined at:
  1947 ;;		line 92 in file "Encoder.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;		None
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;		None
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  1    wreg      void 
  1954 ;; Registers used:
  1955 ;;		wreg, status,2, status,0
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMMON   BANK0   BANK1
  1961 ;;      Params:         0       0       0
  1962 ;;      Locals:         0       0       0
  1963 ;;      Temps:          1       0       0
  1964 ;;      Totals:         1       0       0
  1965 ;;Total ram usage:        1 bytes
  1966 ;; Hardware stack levels used:    1
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_main
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1974                           	line	92
  1975                           global __ptext4
  1976                           __ptext4:	;psect for function _downInner
  1977  0277                     psect	text4
  1978                           	file	"Encoder.c"
  1979                           	line	92
  1980                           	global	__size_of_downInner
  1981                           	__size_of_downInner	equ	__end_of_downInner-_downInner
  1982  002B                     	
  1983                           _downInner:	
  1984  0277                     ;incstack = 0
  1985                           	opt	stack 15
  1986                           ; Regs used in _downInner: [wreg+status,2+status,0]
  1987                           	line	93
  1988                           	
  1989                           l1032:	
  1990  0277                     ;Encoder.c: 93:                     upInner();
  1991                           	movlw	low(031h)
  1992  0277  3031               	movlb 1	; select bank1
  1993  0278  0021               	movwf	(140)^080h	;volatile
  1994  0279  008C               	line	94
  1995                           	
  1996                           l1034:	
  1997  027A                     ;Encoder.c: 94:                     u = 0;
  1998                           	movlb 0	; select bank0
  1999  027A  0020               	bsf	(97/8),(97)&7	;volatile
  2000  027B  148C               	line	95
  2001                           ;Encoder.c: 95:                     sek = sek * 1;
  2002                           	goto	l59
  2003  027C  2A81               	line	96
  2004                           	
  2005                           l1036:	
  2006  027D                     ;Encoder.c: 96:                 }
  2007                           	movlw	low(032h)
  2008  027D  3032               	movwf	(??_downInner+0)+0
  2009  027E  00F0               	movf	(??_downInner+0)+0,w
  2010  027F  0870               	movwf	(_sek)
  2011  0280  00D1               	line	97
  2012                           ;Encoder.c: 97:                 _delay((unsigned long)((1)*(32000000L/4000.0)));
  2013                           	
  2014                           l59:	
  2015  0281                     	line	98
  2016                           ;Encoder.c: 98:             }
  2017                           	movf	(_sek),w
  2018  0281  0851               	movwf	(??_downInner+0)+0
  2019  0282  00F0               	movf	(??_downInner+0)+0,w
  2020  0283  0870               	movwf	(_time)
  2021  0284  00CC               	goto	l1042
  2022  0285  2A92               	
  2023                           l61:	
  2024  0286                     	line	99
  2025                           	
  2026                           l1038:	
  2027  0286                     ;Encoder.c: 99:             RA0 = 0;
  2028                           	opt asmopt_push
  2029                           opt asmopt_off
  2030                           movlw	104
  2031  0286  3068               movwf	((??_downInner+0)+0),f
  2032  0287  00F0               	movlw	228
  2033  0288  30E4               u1377:
  2034  0289                     decfsz	wreg
  2035  0289  0B89               	goto	u1377
  2036  028A  2A89               	decfsz	((??_downInner+0)+0),f
  2037  028B  0BF0               	goto	u1377
  2038  028C  2A89               	nop2
  2039  028D  3200               opt asmopt_pop
  2040                           
  2041                           	line	101
  2042                           	
  2043                           l1040:	
  2044  028E                     ;Encoder.c: 101:         }
  2045                           	movlw	01h
  2046  028E  3001               	movlb 0	; select bank0
  2047  028F  0020               	subwf	(_time),f
  2048  0290  02CC               	goto	l1042
  2049  0291  2A92               	
  2050                           l60:	
  2051  0292                     	
  2052                           l1042:	
  2053  0292                     	movf	((_time)),w
  2054  0292  084C               	btfss	status,2
  2055  0293  1D03               	goto	u721
  2056  0294  2A96               	goto	u720
  2057  0295  2A97               u721:
  2058  0296                     	goto	l1038
  2059  0296  2A86               u720:
  2060  0297                     	
  2061                           l62:	
  2062  0297                     	line	105
  2063                           ;Encoder.c: 105:                 if (RA5 == (test_bit(www, 0))) {
  2064                           	comf	(_qqq),f
  2065  0297  09D3               	line	106
  2066                           ;Encoder.c: 106:                     downInner();
  2067                           	comf	(_www),f
  2068  0298  09D2               	line	107
  2069                           	
  2070                           l1044:	
  2071  0299                     ;Encoder.c: 107:                     u = 0;
  2072                           	comf	(_qqq),w
  2073  0299  0953               	movwf	(??_downInner+0)+0
  2074  029A  00F0               	movf	(??_downInner+0)+0,w
  2075  029B  0870               	movwf	(_qqq1)
  2076  029C  00CA               	line	108
  2077                           ;Encoder.c: 108:                     sek = sek * 1;
  2078                           	comf	(_www),w
  2079  029D  0952               	movwf	(??_downInner+0)+0
  2080  029E  00F0               	movf	(??_downInner+0)+0,w
  2081  029F  0870               	movwf	(_www1)
  2082  02A0  00CB               	line	109
  2083                           	
  2084                           l63:	
  2085  02A1                     	return
  2086  02A1  0008               	opt stack 0
  2087                           GLOBAL	__end_of_downInner
  2088                           	__end_of_downInner:
  2089  02A2                     	signat	_downInner,89
  2090                           	global	_down
  2091                           
  2092 ;; *************** function _down *****************
  2093 ;; Defined at:
  2094 ;;		line 81 in file "Encoder.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;		None
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;		None
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  1    wreg      void 
  2101 ;; Registers used:
  2102 ;;		wreg, status,2
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMMON   BANK0   BANK1
  2108 ;;      Params:         0       0       0
  2109 ;;      Locals:         0       0       0
  2110 ;;      Temps:          2       0       0
  2111 ;;      Totals:         2       0       0
  2112 ;;Total ram usage:        2 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; This function calls:
  2115 ;;		Nothing
  2116 ;; This function is called by:
  2117 ;;		_main
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  2121                           	line	81
  2122                           global __ptext5
  2123                           __ptext5:	;psect for function _down
  2124  020D                     psect	text5
  2125                           	file	"Encoder.c"
  2126                           	line	81
  2127                           	global	__size_of_down
  2128                           	__size_of_down	equ	__end_of_down-_down
  2129  0022                     	
  2130                           _down:	
  2131  020D                     ;incstack = 0
  2132                           	opt	stack 15
  2133                           ; Regs used in _down: [wreg+status,2]
  2134                           	line	82
  2135                           	
  2136                           l1018:	
  2137  020D                     ;Encoder.c: 82:     TRISA = 0b00110011;
  2138                           	movlw	low(031h)
  2139  020D  3031               	movlb 1	; select bank1
  2140  020E  0021               	movwf	(140)^080h	;volatile
  2141  020F  008C               	line	83
  2142                           	
  2143                           l1020:	
  2144  0210                     ;Encoder.c: 83:     while (1) {
  2145                           	movlb 0	; select bank0
  2146  0210  0020               	bsf	(97/8),(97)&7	;volatile
  2147  0211  148C               	line	84
  2148                           ;Encoder.c: 84:         if (RA5 == (test_bit(qqq, 0))) {
  2149                           	opt asmopt_push
  2150                           opt asmopt_off
  2151                           movlw  5
  2152  0212  3005               movwf	((??_down+0)+0+1),f
  2153  0213  00F1               movlw	15
  2154  0214  300F               movwf	((??_down+0)+0),f
  2155  0215  00F0               	movlw	241
  2156  0216  30F1               u1387:
  2157  0217                     decfsz	wreg
  2158  0217  0B89               	goto	u1387
  2159  0218  2A17               	decfsz	((??_down+0)+0),f
  2160  0219  0BF0               	goto	u1387
  2161  021A  2A17               	decfsz	((??_down+0)+0+1),f
  2162  021B  0BF1               	goto	u1387
  2163  021C  2A17               	nop
  2164  021D  0000               opt asmopt_pop
  2165                           
  2166                           	line	85
  2167                           	
  2168                           l1022:	
  2169  021E                     ;Encoder.c: 85:             up();
  2170                           	movlb 0	; select bank0
  2171  021E  0020               	bcf	(97/8),(97)&7	;volatile
  2172  021F  108C               	line	86
  2173                           ;Encoder.c: 86:             for (u = 0; u < 100; u++) {
  2174                           	movlw	low(033h)
  2175  0220  3033               	movlb 1	; select bank1
  2176  0221  0021               	movwf	(140)^080h	;volatile
  2177  0222  008C               	line	87
  2178                           	
  2179                           l1024:	
  2180  0223                     ;Encoder.c: 87:                 if (RA4 == (test_bit(qqq, 0))) {
  2181                           	movlb 0	; select bank0
  2182  0223  0020               	comf	(_qqq),f
  2183  0224  09D3               	line	88
  2184                           	
  2185                           l1026:	
  2186  0225                     ;Encoder.c: 88:                     upInner();
  2187                           	comf	(_www),f
  2188  0225  09D2               	line	89
  2189                           	
  2190                           l1028:	
  2191  0226                     ;Encoder.c: 89:                     u = 0;
  2192                           	comf	(_qqq),w
  2193  0226  0953               	movwf	(??_down+0)+0
  2194  0227  00F0               	movf	(??_down+0)+0,w
  2195  0228  0870               	movwf	(_qqq1)
  2196  0229  00CA               	line	90
  2197                           	
  2198                           l1030:	
  2199  022A                     ;Encoder.c: 90:                     sek = sek * 1.1;
  2200                           	comf	(_www),w
  2201  022A  0952               	movwf	(??_down+0)+0
  2202  022B  00F0               	movf	(??_down+0)+0,w
  2203  022C  0870               	movwf	(_www1)
  2204  022D  00CB               	line	91
  2205                           	
  2206                           l56:	
  2207  022E                     	return
  2208  022E  0008               	opt stack 0
  2209                           GLOBAL	__end_of_down
  2210                           	__end_of_down:
  2211  022F                     	signat	_down,89
  2212                           	global	___xxtofl
  2213                           
  2214 ;; *************** function ___xxtofl *****************
  2215 ;; Defined at:
  2216 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;  sign            1    wreg     unsigned char 
  2219 ;;  val             4    0[COMMON] long 
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;  sign            1    8[COMMON] unsigned char 
  2222 ;;  arg             4   10[COMMON] unsigned long 
  2223 ;;  exp             1    9[COMMON] unsigned char 
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  4    0[COMMON] unsigned char 
  2226 ;; Registers used:
  2227 ;;		wreg, status,2, status,0
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMMON   BANK0   BANK1
  2233 ;;      Params:         4       0       0
  2234 ;;      Locals:         6       0       0
  2235 ;;      Temps:          4       0       0
  2236 ;;      Totals:        14       0       0
  2237 ;;Total ram usage:       14 bytes
  2238 ;; Hardware stack levels used:    1
  2239 ;; This function calls:
  2240 ;;		Nothing
  2241 ;; This function is called by:
  2242 ;;		_main
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           psect	text6,local,class=CODE,delta=2,merge=1,group=1
  2246                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
  2247                           	line	10
  2248                           global __ptext6
  2249                           __ptext6:	;psect for function ___xxtofl
  2250  0362                     psect	text6
  2251                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
  2252                           	line	10
  2253                           	global	__size_of___xxtofl
  2254                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  2255  00B4                     	
  2256                           ___xxtofl:	
  2257  0362                     ;incstack = 0
  2258                           	opt	stack 15
  2259                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2260                           ;___xxtofl@sign stored from wreg
  2261                           	movwf	(___xxtofl@sign)
  2262  0362  00F8               	line	15
  2263                           	
  2264                           l1222:	
  2265  0363                     	movf	((___xxtofl@sign)),w
  2266  0363  0878               	btfsc	status,2
  2267  0364  1903               	goto	u1091
  2268  0365  2B67               	goto	u1090
  2269  0366  2B68               u1091:
  2270  0367                     	goto	l1228
  2271  0367  2B7C               u1090:
  2272  0368                     	
  2273                           l1224:	
  2274  0368                     	btfss	(___xxtofl@val+3),7
  2275  0368  1FF3               	goto	u1101
  2276  0369  2B6B               	goto	u1100
  2277  036A  2B6C               u1101:
  2278  036B                     	goto	l1228
  2279  036B  2B7C               u1100:
  2280  036C                     	line	16
  2281                           	
  2282                           l1226:	
  2283  036C                     	comf	(___xxtofl@val)+0,w
  2284  036C  0970               	movwf	(___xxtofl@arg)
  2285  036D  00FA               	comf	(___xxtofl@val)+1,w
  2286  036E  0971               	movwf	(___xxtofl@arg+1)
  2287  036F  00FB               	comf	(___xxtofl@val)+2,w
  2288  0370  0972               	movwf	(___xxtofl@arg+2)
  2289  0371  00FC               	comf	(___xxtofl@val)+3,w
  2290  0372  0973               	movwf	(___xxtofl@arg+3)
  2291  0373  00FD               	incf	(___xxtofl@arg),f
  2292  0374  0AFA               	skipnz
  2293  0375  1903               	incf	(___xxtofl@arg+1),f
  2294  0376  0AFB               	skipnz
  2295  0377  1903               	incf	(___xxtofl@arg+2),f
  2296  0378  0AFC               	skipnz
  2297  0379  1903               	incf	(___xxtofl@arg+3),f
  2298  037A  0AFD               	line	17
  2299                           	goto	l583
  2300  037B  2B84               	line	18
  2301                           	
  2302                           l582:	
  2303  037C                     	line	19
  2304                           	
  2305                           l1228:	
  2306  037C                     	movf	(___xxtofl@val+3),w
  2307  037C  0873               	movwf	(___xxtofl@arg+3)
  2308  037D  00FD               	movf	(___xxtofl@val+2),w
  2309  037E  0872               	movwf	(___xxtofl@arg+2)
  2310  037F  00FC               	movf	(___xxtofl@val+1),w
  2311  0380  0871               	movwf	(___xxtofl@arg+1)
  2312  0381  00FB               	movf	(___xxtofl@val),w
  2313  0382  0870               	movwf	(___xxtofl@arg)
  2314  0383  00FA               
  2315                           	line	20
  2316                           	
  2317                           l583:	
  2318  0384                     	line	21
  2319                           	movf	(___xxtofl@val+3),w
  2320  0384  0873               	iorwf	(___xxtofl@val+2),w
  2321  0385  0472               	iorwf	(___xxtofl@val+1),w
  2322  0386  0471               	iorwf	(___xxtofl@val),w
  2323  0387  0470               	skipz
  2324  0388  1D03               	goto	u1111
  2325  0389  2B8B               	goto	u1110
  2326  038A  2B8C               u1111:
  2327  038B                     	goto	l1234
  2328  038B  2B96               u1110:
  2329  038C                     	line	22
  2330                           	
  2331                           l1230:	
  2332  038C                     	movlw	0x0
  2333  038C  3000               	movwf	(?___xxtofl+3)
  2334  038D  00F3               	movlw	0x0
  2335  038E  3000               	movwf	(?___xxtofl+2)
  2336  038F  00F2               	movlw	0x0
  2337  0390  3000               	movwf	(?___xxtofl+1)
  2338  0391  00F1               	movlw	0x0
  2339  0392  3000               	movwf	(?___xxtofl)
  2340  0393  00F0               
  2341                           	goto	l585
  2342  0394  2C15               	
  2343                           l1232:	
  2344  0395                     	goto	l585
  2345  0395  2C15               	
  2346                           l584:	
  2347  0396                     	line	23
  2348                           	
  2349                           l1234:	
  2350  0396                     	movlw	low(096h)
  2351  0396  3096               	movwf	(??___xxtofl+0)+0
  2352  0397  00F4               	movf	(??___xxtofl+0)+0,w
  2353  0398  0874               	movwf	(___xxtofl@exp)
  2354  0399  00F9               	line	24
  2355                           	goto	l1238
  2356  039A  2BA7               	
  2357                           l587:	
  2358  039B                     	line	25
  2359                           	
  2360                           l1236:	
  2361  039B                     	movlw	low(01h)
  2362  039B  3001               	movwf	(??___xxtofl+0)+0
  2363  039C  00F4               	movf	(??___xxtofl+0)+0,w
  2364  039D  0874               	addwf	(___xxtofl@exp),f
  2365  039E  07F9               	line	26
  2366                           	movlw	01h
  2367  039F  3001               u1125:
  2368  03A0                     	lsrf	(___xxtofl@arg+3),f
  2369  03A0  36FD               	rrf	(___xxtofl@arg+2),f
  2370  03A1  0CFC               	rrf	(___xxtofl@arg+1),f
  2371  03A2  0CFB               	rrf	(___xxtofl@arg),f
  2372  03A3  0CFA               	decfsz	wreg,f
  2373  03A4  0B89               	goto	u1125
  2374  03A5  2BA0               
  2375                           	goto	l1238
  2376  03A6  2BA7               	line	27
  2377                           	
  2378                           l586:	
  2379  03A7                     	line	24
  2380                           	
  2381                           l1238:	
  2382  03A7                     	movlw	high highword(0FE000000h)
  2383  03A7  30FE               	andwf	(___xxtofl@arg+3),w
  2384  03A8  057D               	btfss	status,2
  2385  03A9  1D03               	goto	u1131
  2386  03AA  2BAC               	goto	u1130
  2387  03AB  2BAD               u1131:
  2388  03AC                     	goto	l1236
  2389  03AC  2B9B               u1130:
  2390  03AD                     	goto	l589
  2391  03AD  2BC2               	
  2392                           l588:	
  2393  03AE                     	line	28
  2394                           	goto	l589
  2395  03AE  2BC2               	
  2396                           l590:	
  2397  03AF                     	line	29
  2398                           	
  2399                           l1240:	
  2400  03AF                     	movlw	low(01h)
  2401  03AF  3001               	movwf	(??___xxtofl+0)+0
  2402  03B0  00F4               	movf	(??___xxtofl+0)+0,w
  2403  03B1  0874               	addwf	(___xxtofl@exp),f
  2404  03B2  07F9               	line	30
  2405                           	
  2406                           l1242:	
  2407  03B3                     	movlw	01h
  2408  03B3  3001               	addwf	(___xxtofl@arg),f
  2409  03B4  07FA               	movlw	0
  2410  03B5  3000               	addwfc	(___xxtofl@arg+1),f
  2411  03B6  3DFB               	movlw	0
  2412  03B7  3000               	addwfc	(___xxtofl@arg+2),f
  2413  03B8  3DFC               	movlw	0
  2414  03B9  3000               	addwfc	(___xxtofl@arg+3),f
  2415  03BA  3DFD               	line	31
  2416                           	
  2417                           l1244:	
  2418  03BB                     	movlw	01h
  2419  03BB  3001               u1145:
  2420  03BC                     	lsrf	(___xxtofl@arg+3),f
  2421  03BC  36FD               	rrf	(___xxtofl@arg+2),f
  2422  03BD  0CFC               	rrf	(___xxtofl@arg+1),f
  2423  03BE  0CFB               	rrf	(___xxtofl@arg),f
  2424  03BF  0CFA               	decfsz	wreg,f
  2425  03C0  0B89               	goto	u1145
  2426  03C1  2BBC               
  2427                           	line	32
  2428                           	
  2429                           l589:	
  2430  03C2                     	line	28
  2431                           	movlw	high highword(0FF000000h)
  2432  03C2  30FF               	andwf	(___xxtofl@arg+3),w
  2433  03C3  057D               	btfss	status,2
  2434  03C4  1D03               	goto	u1151
  2435  03C5  2BC7               	goto	u1150
  2436  03C6  2BC8               u1151:
  2437  03C7                     	goto	l1240
  2438  03C7  2BAF               u1150:
  2439  03C8                     	goto	l1248
  2440  03C8  2BD4               	
  2441                           l591:	
  2442  03C9                     	line	33
  2443                           	goto	l1248
  2444  03C9  2BD4               	
  2445                           l593:	
  2446  03CA                     	line	34
  2447                           	
  2448                           l1246:	
  2449  03CA                     	movlw	01h
  2450  03CA  3001               	subwf	(___xxtofl@exp),f
  2451  03CB  02F9               	line	35
  2452                           	movlw	01h
  2453  03CC  3001               u1165:
  2454  03CD                     	lslf	(___xxtofl@arg),f
  2455  03CD  35FA               	rlf	(___xxtofl@arg+1),f
  2456  03CE  0DFB               	rlf	(___xxtofl@arg+2),f
  2457  03CF  0DFC               	rlf	(___xxtofl@arg+3),f
  2458  03D0  0DFD               	decfsz	wreg,f
  2459  03D1  0B89               	goto	u1165
  2460  03D2  2BCD               	goto	l1248
  2461  03D3  2BD4               	line	36
  2462                           	
  2463                           l592:	
  2464  03D4                     	line	33
  2465                           	
  2466                           l1248:	
  2467  03D4                     	btfsc	(___xxtofl@arg+2),(23)&7
  2468  03D4  1BFC               	goto	u1171
  2469  03D5  2BD7               	goto	u1170
  2470  03D6  2BD8               u1171:
  2471  03D7                     	goto	l596
  2472  03D7  2BDF               u1170:
  2473  03D8                     	
  2474                           l1250:	
  2475  03D8                     	movlw	low(02h)
  2476  03D8  3002               	subwf	(___xxtofl@exp),w
  2477  03D9  0279               	skipnc
  2478  03DA  1803               	goto	u1181
  2479  03DB  2BDD               	goto	u1180
  2480  03DC  2BDE               u1181:
  2481  03DD                     	goto	l1246
  2482  03DD  2BCA               u1180:
  2483  03DE                     	goto	l596
  2484  03DE  2BDF               	
  2485                           l595:	
  2486  03DF                     	
  2487                           l596:	
  2488  03DF                     	line	37
  2489                           	btfsc	(___xxtofl@exp),(0)&7
  2490  03DF  1879               	goto	u1191
  2491  03E0  2BE2               	goto	u1190
  2492  03E1  2BE3               u1191:
  2493  03E2                     	goto	l597
  2494  03E2  2BEB               u1190:
  2495  03E3                     	line	38
  2496                           	
  2497                           l1252:	
  2498  03E3                     	movlw	0FFh
  2499  03E3  30FF               	andwf	(___xxtofl@arg),f
  2500  03E4  05FA               	movlw	0FFh
  2501  03E5  30FF               	andwf	(___xxtofl@arg+1),f
  2502  03E6  05FB               	movlw	07Fh
  2503  03E7  307F               	andwf	(___xxtofl@arg+2),f
  2504  03E8  05FC               	movlw	0FFh
  2505  03E9  30FF               	andwf	(___xxtofl@arg+3),f
  2506  03EA  05FD               	
  2507                           l597:	
  2508  03EB                     	line	39
  2509                           	clrc
  2510  03EB  1003               	rrf	(___xxtofl@exp),f
  2511  03EC  0CF9               
  2512                           	line	40
  2513                           	
  2514                           l1254:	
  2515  03ED                     	movf	(___xxtofl@exp),w
  2516  03ED  0879               	movwf	(??___xxtofl+0)+0
  2517  03EE  00F4               	clrf	(??___xxtofl+0)+0+1
  2518  03EF  01F5               	clrf	(??___xxtofl+0)+0+2
  2519  03F0  01F6               	clrf	(??___xxtofl+0)+0+3
  2520  03F1  01F7               	movlw	018h
  2521  03F2  3018               u1205:
  2522  03F3                     	lslf	(??___xxtofl+0)+0,f
  2523  03F3  35F4               	rlf	(??___xxtofl+0)+1,f
  2524  03F4  0DF5               	rlf	(??___xxtofl+0)+2,f
  2525  03F5  0DF6               	rlf	(??___xxtofl+0)+3,f
  2526  03F6  0DF7               u1200:
  2527  03F7                     	decfsz	wreg,f
  2528  03F7  0B89               	goto	u1205
  2529  03F8  2BF3               	movf	0+(??___xxtofl+0)+0,w
  2530  03F9  0874               	iorwf	(___xxtofl@arg),f
  2531  03FA  04FA               	movf	1+(??___xxtofl+0)+0,w
  2532  03FB  0875               	iorwf	(___xxtofl@arg+1),f
  2533  03FC  04FB               	movf	2+(??___xxtofl+0)+0,w
  2534  03FD  0876               	iorwf	(___xxtofl@arg+2),f
  2535  03FE  04FC               	movf	3+(??___xxtofl+0)+0,w
  2536  03FF  0877               	iorwf	(___xxtofl@arg+3),f
  2537  0400  04FD               	line	41
  2538                           	
  2539                           l1256:	
  2540  0401                     	movf	((___xxtofl@sign)),w
  2541  0401  0878               	btfsc	status,2
  2542  0402  1903               	goto	u1211
  2543  0403  2C05               	goto	u1210
  2544  0404  2C06               u1211:
  2545  0405                     	goto	l1262
  2546  0405  2C0C               u1210:
  2547  0406                     	
  2548                           l1258:	
  2549  0406                     	btfss	(___xxtofl@val+3),7
  2550  0406  1FF3               	goto	u1221
  2551  0407  2C09               	goto	u1220
  2552  0408  2C0A               u1221:
  2553  0409                     	goto	l1262
  2554  0409  2C0C               u1220:
  2555  040A                     	line	42
  2556                           	
  2557                           l1260:	
  2558  040A                     	bsf	(___xxtofl@arg)+(31/8),(31)&7
  2559  040A  17FD               	goto	l1262
  2560  040B  2C0C               	
  2561                           l598:	
  2562  040C                     	line	43
  2563                           	
  2564                           l1262:	
  2565  040C                     	movf	(___xxtofl@arg+3),w
  2566  040C  087D               	movwf	(?___xxtofl+3)
  2567  040D  00F3               	movf	(___xxtofl@arg+2),w
  2568  040E  087C               	movwf	(?___xxtofl+2)
  2569  040F  00F2               	movf	(___xxtofl@arg+1),w
  2570  0410  087B               	movwf	(?___xxtofl+1)
  2571  0411  00F1               	movf	(___xxtofl@arg),w
  2572  0412  087A               	movwf	(?___xxtofl)
  2573  0413  00F0               
  2574                           	goto	l585
  2575  0414  2C15               	
  2576                           l1264:	
  2577  0415                     	line	44
  2578                           	
  2579                           l585:	
  2580  0415                     	return
  2581  0415  0008               	opt stack 0
  2582                           GLOBAL	__end_of___xxtofl
  2583                           	__end_of___xxtofl:
  2584  0416                     	signat	___xxtofl,8316
  2585                           	global	___fltol
  2586                           
  2587 ;; *************** function ___fltol *****************
  2588 ;; Defined at:
  2589 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;  f1              4   26[BANK0 ] unsigned char 
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;  exp1            1   36[BANK0 ] unsigned char 
  2594 ;;  sign1           1   35[BANK0 ] unsigned char 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  4   26[BANK0 ] long 
  2597 ;; Registers used:
  2598 ;;		wreg, status,2, status,0
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMMON   BANK0   BANK1
  2604 ;;      Params:         0       4       0
  2605 ;;      Locals:         0       2       0
  2606 ;;      Temps:          0       5       0
  2607 ;;      Totals:         0      11       0
  2608 ;;Total ram usage:       11 bytes
  2609 ;; Hardware stack levels used:    1
  2610 ;; This function calls:
  2611 ;;		Nothing
  2612 ;; This function is called by:
  2613 ;;		_main
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           psect	text7,local,class=CODE,delta=2,merge=1,group=1
  2617                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
  2618                           	line	43
  2619                           global __ptext7
  2620                           __ptext7:	;psect for function ___fltol
  2621  02CD                     psect	text7
  2622                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
  2623                           	line	43
  2624                           	global	__size_of___fltol
  2625                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  2626  0095                     	
  2627                           ___fltol:	
  2628  02CD                     ;incstack = 0
  2629                           	opt	stack 15
  2630                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2631                           	line	47
  2632                           	
  2633                           l1046:	
  2634  02CD                     	movlb 0	; select bank0
  2635  02CD  0020               	movf	(___fltol@f1),w
  2636  02CE  083A               	movwf	(??___fltol+0)+0
  2637  02CF  00BE               	movf	(___fltol@f1+1),w
  2638  02D0  083B               	movwf	((??___fltol+0)+0+1)
  2639  02D1  00BF               	movf	(___fltol@f1+2),w
  2640  02D2  083C               	movwf	((??___fltol+0)+0+2)
  2641  02D3  00C0               	movf	(___fltol@f1+3),w
  2642  02D4  083D               	movwf	((??___fltol+0)+0+3)
  2643  02D5  00C1               	clrc
  2644  02D6  1003               	rlf	(??___fltol+0)+2,w
  2645  02D7  0D40               	rlf	(??___fltol+0)+3,w
  2646  02D8  0D41               	movwf	(??___fltol+4)+0
  2647  02D9  00C2               	movf	(??___fltol+4)+0,w
  2648  02DA  0842               	movwf	(___fltol@exp1)
  2649  02DB  00C4               	movf	(((___fltol@exp1))),w
  2650  02DC  0844               	btfss	status,2
  2651  02DD  1D03               	goto	u731
  2652  02DE  2AE0               	goto	u730
  2653  02DF  2AE1               u731:
  2654  02E0                     	goto	l1052
  2655  02E0  2AEB               u730:
  2656  02E1                     	line	48
  2657                           	
  2658                           l1048:	
  2659  02E1                     	movlw	high highword(0)
  2660  02E1  3000               	movwf	(?___fltol+3)
  2661  02E2  00BD               	movlw	low highword(0)
  2662  02E3  3000               	movwf	(?___fltol+2)
  2663  02E4  00BC               	movlw	high(0)
  2664  02E5  3000               	movwf	(?___fltol+1)
  2665  02E6  00BB               	movlw	low(0)
  2666  02E7  3000               	movwf	(?___fltol)
  2667  02E8  00BA               
  2668                           	goto	l361
  2669  02E9  2B61               	
  2670                           l1050:	
  2671  02EA                     	goto	l361
  2672  02EA  2B61               	
  2673                           l360:	
  2674  02EB                     	line	49
  2675                           	
  2676                           l1052:	
  2677  02EB                     	movf	(___fltol@f1),w
  2678  02EB  083A               	movwf	(??___fltol+0)+0
  2679  02EC  00BE               	movf	(___fltol@f1+1),w
  2680  02ED  083B               	movwf	((??___fltol+0)+0+1)
  2681  02EE  00BF               	movf	(___fltol@f1+2),w
  2682  02EF  083C               	movwf	((??___fltol+0)+0+2)
  2683  02F0  00C0               	movf	(___fltol@f1+3),w
  2684  02F1  083D               	movwf	((??___fltol+0)+0+3)
  2685  02F2  00C1               	movlw	01Fh
  2686  02F3  301F               u745:
  2687  02F4                     	lsrf	(??___fltol+0)+3,f
  2688  02F4  36C1               	rrf	(??___fltol+0)+2,f
  2689  02F5  0CC0               	rrf	(??___fltol+0)+1,f
  2690  02F6  0CBF               	rrf	(??___fltol+0)+0,f
  2691  02F7  0CBE               u740:
  2692  02F8                     	decfsz	wreg,f
  2693  02F8  0B89               	goto	u745
  2694  02F9  2AF4               	movf	0+(??___fltol+0)+0,w
  2695  02FA  083E               	movwf	(??___fltol+4)+0
  2696  02FB  00C2               	movf	(??___fltol+4)+0,w
  2697  02FC  0842               	movwf	(___fltol@sign1)
  2698  02FD  00C3               	line	50
  2699                           	
  2700                           l1054:	
  2701  02FE                     	bsf	(___fltol@f1)+(23/8),(23)&7
  2702  02FE  17BC               	line	51
  2703                           	
  2704                           l1056:	
  2705  02FF                     	movlw	0FFh
  2706  02FF  30FF               	andwf	(___fltol@f1),f
  2707  0300  05BA               	movlw	0FFh
  2708  0301  30FF               	andwf	(___fltol@f1+1),f
  2709  0302  05BB               	movlw	0FFh
  2710  0303  30FF               	andwf	(___fltol@f1+2),f
  2711  0304  05BC               	movlw	0
  2712  0305  3000               	andwf	(___fltol@f1+3),f
  2713  0306  05BD               	line	52
  2714                           	
  2715                           l1058:	
  2716  0307                     	movlw	096h
  2717  0307  3096               	subwf	(___fltol@exp1),f
  2718  0308  02C4               	line	53
  2719                           	
  2720                           l1060:	
  2721  0309                     	btfss	(___fltol@exp1),7
  2722  0309  1FC4               	goto	u751
  2723  030A  2B0C               	goto	u750
  2724  030B  2B0D               u751:
  2725  030C                     	goto	l1070
  2726  030C  2B30               u750:
  2727  030D                     	line	54
  2728                           	
  2729                           l1062:	
  2730  030D                     	movf	(___fltol@exp1),w
  2731  030D  0844               	xorlw	80h
  2732  030E  3A80               	addlw	-((-23)^80h)
  2733  030F  3E97               	skipnc
  2734  0310  1803               	goto	u761
  2735  0311  2B13               	goto	u760
  2736  0312  2B14               u761:
  2737  0313                     	goto	l1068
  2738  0313  2B1F               u760:
  2739  0314                     	line	55
  2740                           	
  2741                           l1064:	
  2742  0314                     	movlw	high highword(0)
  2743  0314  3000               	movwf	(?___fltol+3)
  2744  0315  00BD               	movlw	low highword(0)
  2745  0316  3000               	movwf	(?___fltol+2)
  2746  0317  00BC               	movlw	high(0)
  2747  0318  3000               	movwf	(?___fltol+1)
  2748  0319  00BB               	movlw	low(0)
  2749  031A  3000               	movwf	(?___fltol)
  2750  031B  00BA               
  2751                           	goto	l361
  2752  031C  2B61               	
  2753                           l1066:	
  2754  031D                     	goto	l361
  2755  031D  2B61               	
  2756                           l363:	
  2757  031E                     	goto	l1068
  2758  031E  2B1F               	line	56
  2759                           	
  2760                           l364:	
  2761  031F                     	line	57
  2762                           	
  2763                           l1068:	
  2764  031F                     	movlw	01h
  2765  031F  3001               u775:
  2766  0320                     	lsrf	(___fltol@f1+3),f
  2767  0320  36BD               	rrf	(___fltol@f1+2),f
  2768  0321  0CBC               	rrf	(___fltol@f1+1),f
  2769  0322  0CBB               	rrf	(___fltol@f1),f
  2770  0323  0CBA               	decfsz	wreg,f
  2771  0324  0B89               	goto	u775
  2772  0325  2B20               
  2773                           	movlw	low(01h)
  2774  0326  3001               	movwf	(??___fltol+0)+0
  2775  0327  00BE               	movf	(??___fltol+0)+0,w
  2776  0328  083E               	addwf	(___fltol@exp1),f
  2777  0329  07C4               	btfss	status,2
  2778  032A  1D03               	goto	u781
  2779  032B  2B2D               	goto	u780
  2780  032C  2B2E               u781:
  2781  032D                     	goto	l1068
  2782  032D  2B1F               u780:
  2783  032E                     	goto	l1078
  2784  032E  2B51               	
  2785                           l365:	
  2786  032F                     	line	59
  2787                           	goto	l1078
  2788  032F  2B51               	
  2789                           l362:	
  2790  0330                     	line	60
  2791                           	
  2792                           l1070:	
  2793  0330                     	movlw	low(020h)
  2794  0330  3020               	subwf	(___fltol@exp1),w
  2795  0331  0244               	skipc
  2796  0332  1C03               	goto	u791
  2797  0333  2B35               	goto	u790
  2798  0334  2B36               u791:
  2799  0335                     	goto	l368
  2800  0335  2B4A               u790:
  2801  0336                     	line	61
  2802                           	
  2803                           l1072:	
  2804  0336                     	movlw	high highword(0)
  2805  0336  3000               	movwf	(?___fltol+3)
  2806  0337  00BD               	movlw	low highword(0)
  2807  0338  3000               	movwf	(?___fltol+2)
  2808  0339  00BC               	movlw	high(0)
  2809  033A  3000               	movwf	(?___fltol+1)
  2810  033B  00BB               	movlw	low(0)
  2811  033C  3000               	movwf	(?___fltol)
  2812  033D  00BA               
  2813                           	goto	l361
  2814  033E  2B61               	
  2815                           l1074:	
  2816  033F                     	goto	l361
  2817  033F  2B61               	
  2818                           l367:	
  2819  0340                     	line	62
  2820                           	goto	l368
  2821  0340  2B4A               	
  2822                           l369:	
  2823  0341                     	line	63
  2824                           	
  2825                           l1076:	
  2826  0341                     	movlw	01h
  2827  0341  3001               u805:
  2828  0342                     	lslf	(___fltol@f1),f
  2829  0342  35BA               	rlf	(___fltol@f1+1),f
  2830  0343  0DBB               	rlf	(___fltol@f1+2),f
  2831  0344  0DBC               	rlf	(___fltol@f1+3),f
  2832  0345  0DBD               	decfsz	wreg,f
  2833  0346  0B89               	goto	u805
  2834  0347  2B42               	line	64
  2835                           	movlw	01h
  2836  0348  3001               	subwf	(___fltol@exp1),f
  2837  0349  02C4               	line	65
  2838                           	
  2839                           l368:	
  2840  034A                     	line	62
  2841                           	movf	((___fltol@exp1)),w
  2842  034A  0844               	btfss	status,2
  2843  034B  1D03               	goto	u811
  2844  034C  2B4E               	goto	u810
  2845  034D  2B4F               u811:
  2846  034E                     	goto	l1076
  2847  034E  2B41               u810:
  2848  034F                     	goto	l1078
  2849  034F  2B51               	
  2850                           l370:	
  2851  0350                     	goto	l1078
  2852  0350  2B51               	line	66
  2853                           	
  2854                           l366:	
  2855  0351                     	line	67
  2856                           	
  2857                           l1078:	
  2858  0351                     	movf	((___fltol@sign1)),w
  2859  0351  0843               	btfsc	status,2
  2860  0352  1903               	goto	u821
  2861  0353  2B55               	goto	u820
  2862  0354  2B56               u821:
  2863  0355                     	goto	l371
  2864  0355  2B61               u820:
  2865  0356                     	line	68
  2866                           	
  2867                           l1080:	
  2868  0356                     	comf	(___fltol@f1),f
  2869  0356  09BA               	comf	(___fltol@f1+1),f
  2870  0357  09BB               	comf	(___fltol@f1+2),f
  2871  0358  09BC               	comf	(___fltol@f1+3),f
  2872  0359  09BD               	incf	(___fltol@f1),f
  2873  035A  0ABA               	skipnz
  2874  035B  1903               	incf	(___fltol@f1+1),f
  2875  035C  0ABB               	skipnz
  2876  035D  1903               	incf	(___fltol@f1+2),f
  2877  035E  0ABC               	skipnz
  2878  035F  1903               	incf	(___fltol@f1+3),f
  2879  0360  0ABD               	
  2880                           l371:	
  2881  0361                     	line	69
  2882                           	line	70
  2883                           	
  2884                           l361:	
  2885  0361                     	return
  2886  0361  0008               	opt stack 0
  2887                           GLOBAL	__end_of___fltol
  2888                           	__end_of___fltol:
  2889  0362                     	signat	___fltol,4220
  2890                           	global	___flmul
  2891                           
  2892 ;; *************** function ___flmul *****************
  2893 ;; Defined at:
  2894 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;  b               4    0[BANK0 ] long 
  2897 ;;  a               4    4[BANK0 ] long 
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;  prod            4   20[BANK0 ] struct .
  2900 ;;  grs             4   14[BANK0 ] unsigned long 
  2901 ;;  temp            2   24[BANK0 ] struct .
  2902 ;;  bexp            1   19[BANK0 ] unsigned char 
  2903 ;;  aexp            1   18[BANK0 ] unsigned char 
  2904 ;;  sign            1   13[BANK0 ] unsigned char 
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  4    0[BANK0 ] unsigned char 
  2907 ;; Registers used:
  2908 ;;		wreg, status,2, status,0, pclath, cstack
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMMON   BANK0   BANK1
  2914 ;;      Params:         0       8       0
  2915 ;;      Locals:         0      13       0
  2916 ;;      Temps:          0       5       0
  2917 ;;      Totals:         0      26       0
  2918 ;;Total ram usage:       26 bytes
  2919 ;; Hardware stack levels used:    1
  2920 ;; Hardware stack levels required when called:    1
  2921 ;; This function calls:
  2922 ;;		__Umul8_16
  2923 ;; This function is called by:
  2924 ;;		_main
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           psect	text8,local,class=CODE,delta=2,merge=1,group=1
  2928                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
  2929                           	line	8
  2930                           global __ptext8
  2931                           __ptext8:	;psect for function ___flmul
  2932  0580                     psect	text8
  2933                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
  2934                           	line	8
  2935                           	global	__size_of___flmul
  2936                           	__size_of___flmul	equ	__end_of___flmul-___flmul
  2937  026B                     	
  2938                           ___flmul:	
  2939  0580                     ;incstack = 0
  2940                           	opt	stack 14
  2941                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  2942                           	line	17
  2943                           	
  2944                           l1082:	
  2945  0580                     	movlb 0	; select bank0
  2946  0580  0020               	movf	0+(___flmul@b)+03h,w
  2947  0581  0823               	andlw	080h
  2948  0582  3980               	movwf	(??___flmul+0)+0
  2949  0583  00A8               	movf	(??___flmul+0)+0,w
  2950  0584  0828               	movwf	(___flmul@sign)
  2951  0585  00AD               	line	18
  2952                           	
  2953                           l1084:	
  2954  0586                     	lslf	0+(___flmul@b)+03h,w
  2955  0586  3523               	movwf	(??___flmul+0)+0
  2956  0587  00A8               	movf	(??___flmul+0)+0,w
  2957  0588  0828               	movwf	(___flmul@bexp)
  2958  0589  00B3               	line	19
  2959                           	
  2960                           l1086:	
  2961  058A                     	btfss	0+(___flmul@b)+02h,(7)&7
  2962  058A  1FA2               	goto	u831
  2963  058B  2D8D               	goto	u830
  2964  058C  2D8E               u831:
  2965  058D                     	goto	l1090
  2966  058D  2D90               u830:
  2967  058E                     	line	20
  2968                           	
  2969                           l1088:	
  2970  058E                     	bsf	(___flmul@bexp)+(0/8),(0)&7
  2971  058E  1433               	goto	l1090
  2972  058F  2D90               	line	21
  2973                           	
  2974                           l553:	
  2975  0590                     	line	24
  2976                           	
  2977                           l1090:	
  2978  0590                     	movf	((___flmul@bexp)),w
  2979  0590  0833               	btfsc	status,2
  2980  0591  1903               	goto	u841
  2981  0592  2D94               	goto	u840
  2982  0593  2D95               u841:
  2983  0594                     	goto	l1098
  2984  0594  2DA5               u840:
  2985  0595                     	line	26
  2986                           	
  2987                           l1092:	
  2988  0595                     		incf	((___flmul@bexp)),w
  2989  0595  0A33               	btfss	status,2
  2990  0596  1D03               	goto	u851
  2991  0597  2D99               	goto	u850
  2992  0598  2D9A               u851:
  2993  0599                     	goto	l1096
  2994  0599  2DA3               u850:
  2995  059A                     	line	28
  2996                           	
  2997                           l1094:	
  2998  059A                     	movlw	0x0
  2999  059A  3000               	movwf	(___flmul@b+3)
  3000  059B  00A3               	movlw	0x0
  3001  059C  3000               	movwf	(___flmul@b+2)
  3002  059D  00A2               	movlw	0x0
  3003  059E  3000               	movwf	(___flmul@b+1)
  3004  059F  00A1               	movlw	0x0
  3005  05A0  3000               	movwf	(___flmul@b)
  3006  05A1  00A0               
  3007                           	goto	l1096
  3008  05A2  2DA3               	line	29
  3009                           	
  3010                           l555:	
  3011  05A3                     	line	31
  3012                           	
  3013                           l1096:	
  3014  05A3                     	bsf	(___flmul@b)+(23/8),(23)&7
  3015  05A3  17A2               	line	33
  3016                           	goto	l1100
  3017  05A4  2DAE               	line	34
  3018                           	
  3019                           l554:	
  3020  05A5                     	line	36
  3021                           	
  3022                           l1098:	
  3023  05A5                     	movlw	0x0
  3024  05A5  3000               	movwf	(___flmul@b+3)
  3025  05A6  00A3               	movlw	0x0
  3026  05A7  3000               	movwf	(___flmul@b+2)
  3027  05A8  00A2               	movlw	0x0
  3028  05A9  3000               	movwf	(___flmul@b+1)
  3029  05AA  00A1               	movlw	0x0
  3030  05AB  3000               	movwf	(___flmul@b)
  3031  05AC  00A0               
  3032                           	goto	l1100
  3033  05AD  2DAE               	line	37
  3034                           	
  3035                           l556:	
  3036  05AE                     	line	39
  3037                           	
  3038                           l1100:	
  3039  05AE                     	movf	0+(___flmul@a)+03h,w
  3040  05AE  0827               	andlw	080h
  3041  05AF  3980               	movwf	(??___flmul+0)+0
  3042  05B0  00A8               	movf	(??___flmul+0)+0,w
  3043  05B1  0828               	xorwf	(___flmul@sign),f
  3044  05B2  06AD               	line	40
  3045                           	
  3046                           l1102:	
  3047  05B3                     	lslf	0+(___flmul@a)+03h,w
  3048  05B3  3527               	movwf	(??___flmul+0)+0
  3049  05B4  00A8               	movf	(??___flmul+0)+0,w
  3050  05B5  0828               	movwf	(___flmul@aexp)
  3051  05B6  00B2               	line	41
  3052                           	
  3053                           l1104:	
  3054  05B7                     	btfss	0+(___flmul@a)+02h,(7)&7
  3055  05B7  1FA6               	goto	u861
  3056  05B8  2DBA               	goto	u860
  3057  05B9  2DBB               u861:
  3058  05BA                     	goto	l1108
  3059  05BA  2DBD               u860:
  3060  05BB                     	line	42
  3061                           	
  3062                           l1106:	
  3063  05BB                     	bsf	(___flmul@aexp)+(0/8),(0)&7
  3064  05BB  1432               	goto	l1108
  3065  05BC  2DBD               	line	43
  3066                           	
  3067                           l557:	
  3068  05BD                     	line	45
  3069                           	
  3070                           l1108:	
  3071  05BD                     	movf	((___flmul@aexp)),w
  3072  05BD  0832               	btfsc	status,2
  3073  05BE  1903               	goto	u871
  3074  05BF  2DC1               	goto	u870
  3075  05C0  2DC2               u871:
  3076  05C1                     	goto	l1116
  3077  05C1  2DD2               u870:
  3078  05C2                     	line	48
  3079                           	
  3080                           l1110:	
  3081  05C2                     		incf	((___flmul@aexp)),w
  3082  05C2  0A32               	btfss	status,2
  3083  05C3  1D03               	goto	u881
  3084  05C4  2DC6               	goto	u880
  3085  05C5  2DC7               u881:
  3086  05C6                     	goto	l1114
  3087  05C6  2DD0               u880:
  3088  05C7                     	line	50
  3089                           	
  3090                           l1112:	
  3091  05C7                     	movlw	0x0
  3092  05C7  3000               	movwf	(___flmul@a+3)
  3093  05C8  00A7               	movlw	0x0
  3094  05C9  3000               	movwf	(___flmul@a+2)
  3095  05CA  00A6               	movlw	0x0
  3096  05CB  3000               	movwf	(___flmul@a+1)
  3097  05CC  00A5               	movlw	0x0
  3098  05CD  3000               	movwf	(___flmul@a)
  3099  05CE  00A4               
  3100                           	goto	l1114
  3101  05CF  2DD0               	line	51
  3102                           	
  3103                           l559:	
  3104  05D0                     	line	53
  3105                           	
  3106                           l1114:	
  3107  05D0                     	bsf	(___flmul@a)+(23/8),(23)&7
  3108  05D0  17A6               	line	54
  3109                           	goto	l1118
  3110  05D1  2DDB               	line	55
  3111                           	
  3112                           l558:	
  3113  05D2                     	line	57
  3114                           	
  3115                           l1116:	
  3116  05D2                     	movlw	0x0
  3117  05D2  3000               	movwf	(___flmul@a+3)
  3118  05D3  00A7               	movlw	0x0
  3119  05D4  3000               	movwf	(___flmul@a+2)
  3120  05D5  00A6               	movlw	0x0
  3121  05D6  3000               	movwf	(___flmul@a+1)
  3122  05D7  00A5               	movlw	0x0
  3123  05D8  3000               	movwf	(___flmul@a)
  3124  05D9  00A4               
  3125                           	goto	l1118
  3126  05DA  2DDB               	line	58
  3127                           	
  3128                           l560:	
  3129  05DB                     	line	65
  3130                           	
  3131                           l1118:	
  3132  05DB                     	movf	((___flmul@aexp)),w
  3133  05DB  0832               	btfsc	status,2
  3134  05DC  1903               	goto	u891
  3135  05DD  2DDF               	goto	u890
  3136  05DE  2DE0               u891:
  3137  05DF                     	goto	l1122
  3138  05DF  2DE6               u890:
  3139  05E0                     	
  3140                           l1120:	
  3141  05E0                     	movf	((___flmul@bexp)),w
  3142  05E0  0833               	btfss	status,2
  3143  05E1  1D03               	goto	u901
  3144  05E2  2DE4               	goto	u900
  3145  05E3  2DE5               u901:
  3146  05E4                     	goto	l1126
  3147  05E4  2DF0               u900:
  3148  05E5                     	goto	l1122
  3149  05E5  2DE6               	
  3150                           l563:	
  3151  05E6                     	line	66
  3152                           	
  3153                           l1122:	
  3154  05E6                     	movlw	0x0
  3155  05E6  3000               	movwf	(?___flmul+3)
  3156  05E7  00A3               	movlw	0x0
  3157  05E8  3000               	movwf	(?___flmul+2)
  3158  05E9  00A2               	movlw	0x0
  3159  05EA  3000               	movwf	(?___flmul+1)
  3160  05EB  00A1               	movlw	0x0
  3161  05EC  3000               	movwf	(?___flmul)
  3162  05ED  00A0               
  3163                           	goto	l564
  3164  05EE  2FEA               	
  3165                           l1124:	
  3166  05EF                     	goto	l564
  3167  05EF  2FEA               	line	67
  3168                           	
  3169                           l561:	
  3170  05F0                     	line	119
  3171                           	
  3172                           l1126:	
  3173  05F0                     	movf	(___flmul@b),w
  3174  05F0  0820               	movwf	(??___flmul+0)+0
  3175  05F1  00A8               	movf	(??___flmul+0)+0,w
  3176  05F2  0828               	movwf	(__Umul8_16@multiplicand)
  3177  05F3  00F0               	movf	0+(___flmul@a)+02h,w
  3178  05F4  0826               	fcall	__Umul8_16
  3179  05F5  3182  2251  3185   	movf	(1+(?__Umul8_16)),w
  3180  05F8  0871               	movlb 0	; select bank0
  3181  05F9  0020               	movwf	(___flmul@temp+1)
  3182  05FA  00B9               	movf	(0+(?__Umul8_16)),w
  3183  05FB  0870               	movwf	(___flmul@temp)
  3184  05FC  00B8               	line	120
  3185                           	
  3186                           l1128:	
  3187  05FD                     	movf	(___flmul@temp),w
  3188  05FD  0838               	movwf	(??___flmul+0)+0
  3189  05FE  00A8               	clrf	(??___flmul+0)+0+1
  3190  05FF  01A9               	clrf	(??___flmul+0)+0+2
  3191  0600  01AA               	clrf	(??___flmul+0)+0+3
  3192  0601  01AB               	movf	3+(??___flmul+0)+0,w
  3193  0602  082B               	movwf	(___flmul@grs+3)
  3194  0603  00B1               	movf	2+(??___flmul+0)+0,w
  3195  0604  082A               	movwf	(___flmul@grs+2)
  3196  0605  00B0               	movf	1+(??___flmul+0)+0,w
  3197  0606  0829               	movwf	(___flmul@grs+1)
  3198  0607  00AF               	movf	0+(??___flmul+0)+0,w
  3199  0608  0828               	movwf	(___flmul@grs)
  3200  0609  00AE               
  3201                           	line	121
  3202                           	
  3203                           l1130:	
  3204  060A                     	movf	0+(___flmul@temp)+01h,w
  3205  060A  0839               	movwf	(??___flmul+0)+0
  3206  060B  00A8               	clrf	(??___flmul+0)+0+1
  3207  060C  01A9               	clrf	(??___flmul+0)+0+2
  3208  060D  01AA               	clrf	(??___flmul+0)+0+3
  3209  060E  01AB               	movf	3+(??___flmul+0)+0,w
  3210  060F  082B               	movwf	(___flmul@prod+3)
  3211  0610  00B7               	movf	2+(??___flmul+0)+0,w
  3212  0611  082A               	movwf	(___flmul@prod+2)
  3213  0612  00B6               	movf	1+(??___flmul+0)+0,w
  3214  0613  0829               	movwf	(___flmul@prod+1)
  3215  0614  00B5               	movf	0+(??___flmul+0)+0,w
  3216  0615  0828               	movwf	(___flmul@prod)
  3217  0616  00B4               
  3218                           	line	122
  3219                           	movf	0+(___flmul@b)+01h,w
  3220  0617  0821               	movwf	(??___flmul+0)+0
  3221  0618  00A8               	movf	(??___flmul+0)+0,w
  3222  0619  0828               	movwf	(__Umul8_16@multiplicand)
  3223  061A  00F0               	movf	0+(___flmul@a)+01h,w
  3224  061B  0825               	fcall	__Umul8_16
  3225  061C  3182  2251  3185   	movf	(1+(?__Umul8_16)),w
  3226  061F  0871               	movlb 0	; select bank0
  3227  0620  0020               	movwf	(___flmul@temp+1)
  3228  0621  00B9               	movf	(0+(?__Umul8_16)),w
  3229  0622  0870               	movwf	(___flmul@temp)
  3230  0623  00B8               	line	123
  3231                           	
  3232                           l1132:	
  3233  0624                     	movf	(___flmul@temp),w
  3234  0624  0838               	movwf	(??___flmul+0)+0
  3235  0625  00A8               	clrf	(??___flmul+0)+0+1
  3236  0626  01A9               	clrf	(??___flmul+0)+0+2
  3237  0627  01AA               	clrf	(??___flmul+0)+0+3
  3238  0628  01AB               	movf	0+(??___flmul+0)+0,w
  3239  0629  0828               	addwf	(___flmul@grs),f
  3240  062A  07AE               	movf	1+(??___flmul+0)+0,w
  3241  062B  0829               	addwfc	(___flmul@grs+1),f
  3242  062C  3DAF               	movf	2+(??___flmul+0)+0,w
  3243  062D  082A               	addwfc	(___flmul@grs+2),f
  3244  062E  3DB0               	movf	3+(??___flmul+0)+0,w
  3245  062F  082B               	addwfc	(___flmul@grs+3),f
  3246  0630  3DB1               	line	124
  3247                           	
  3248                           l1134:	
  3249  0631                     	movf	0+(___flmul@temp)+01h,w
  3250  0631  0839               	movwf	(??___flmul+0)+0
  3251  0632  00A8               	clrf	(??___flmul+0)+0+1
  3252  0633  01A9               	clrf	(??___flmul+0)+0+2
  3253  0634  01AA               	clrf	(??___flmul+0)+0+3
  3254  0635  01AB               	movf	0+(??___flmul+0)+0,w
  3255  0636  0828               	addwf	(___flmul@prod),f
  3256  0637  07B4               	movf	1+(??___flmul+0)+0,w
  3257  0638  0829               	addwfc	(___flmul@prod+1),f
  3258  0639  3DB5               	movf	2+(??___flmul+0)+0,w
  3259  063A  082A               	addwfc	(___flmul@prod+2),f
  3260  063B  3DB6               	movf	3+(??___flmul+0)+0,w
  3261  063C  082B               	addwfc	(___flmul@prod+3),f
  3262  063D  3DB7               	line	125
  3263                           	movf	0+(___flmul@b)+02h,w
  3264  063E  0822               	movwf	(??___flmul+0)+0
  3265  063F  00A8               	movf	(??___flmul+0)+0,w
  3266  0640  0828               	movwf	(__Umul8_16@multiplicand)
  3267  0641  00F0               	movf	(___flmul@a),w
  3268  0642  0824               	fcall	__Umul8_16
  3269  0643  3182  2251  3185   	movf	(1+(?__Umul8_16)),w
  3270  0646  0871               	movlb 0	; select bank0
  3271  0647  0020               	movwf	(___flmul@temp+1)
  3272  0648  00B9               	movf	(0+(?__Umul8_16)),w
  3273  0649  0870               	movwf	(___flmul@temp)
  3274  064A  00B8               	line	126
  3275                           	
  3276                           l1136:	
  3277  064B                     	movf	(___flmul@temp),w
  3278  064B  0838               	movwf	(??___flmul+0)+0
  3279  064C  00A8               	clrf	(??___flmul+0)+0+1
  3280  064D  01A9               	clrf	(??___flmul+0)+0+2
  3281  064E  01AA               	clrf	(??___flmul+0)+0+3
  3282  064F  01AB               	movf	0+(??___flmul+0)+0,w
  3283  0650  0828               	addwf	(___flmul@grs),f
  3284  0651  07AE               	movf	1+(??___flmul+0)+0,w
  3285  0652  0829               	addwfc	(___flmul@grs+1),f
  3286  0653  3DAF               	movf	2+(??___flmul+0)+0,w
  3287  0654  082A               	addwfc	(___flmul@grs+2),f
  3288  0655  3DB0               	movf	3+(??___flmul+0)+0,w
  3289  0656  082B               	addwfc	(___flmul@grs+3),f
  3290  0657  3DB1               	line	127
  3291                           	
  3292                           l1138:	
  3293  0658                     	movf	0+(___flmul@temp)+01h,w
  3294  0658  0839               	movwf	(??___flmul+0)+0
  3295  0659  00A8               	clrf	(??___flmul+0)+0+1
  3296  065A  01A9               	clrf	(??___flmul+0)+0+2
  3297  065B  01AA               	clrf	(??___flmul+0)+0+3
  3298  065C  01AB               	movf	0+(??___flmul+0)+0,w
  3299  065D  0828               	addwf	(___flmul@prod),f
  3300  065E  07B4               	movf	1+(??___flmul+0)+0,w
  3301  065F  0829               	addwfc	(___flmul@prod+1),f
  3302  0660  3DB5               	movf	2+(??___flmul+0)+0,w
  3303  0661  082A               	addwfc	(___flmul@prod+2),f
  3304  0662  3DB6               	movf	3+(??___flmul+0)+0,w
  3305  0663  082B               	addwfc	(___flmul@prod+3),f
  3306  0664  3DB7               	line	128
  3307                           	
  3308                           l1140:	
  3309  0665                     	movlw	08h
  3310  0665  3008               u915:
  3311  0666                     	lslf	(___flmul@grs),f
  3312  0666  35AE               	rlf	(___flmul@grs+1),f
  3313  0667  0DAF               	rlf	(___flmul@grs+2),f
  3314  0668  0DB0               	rlf	(___flmul@grs+3),f
  3315  0669  0DB1               	decfsz	wreg,f
  3316  066A  0B89               	goto	u915
  3317  066B  2E66               	line	129
  3318                           	
  3319                           l1142:	
  3320  066C                     	movf	0+(___flmul@b)+01h,w
  3321  066C  0821               	movwf	(??___flmul+0)+0
  3322  066D  00A8               	movf	(??___flmul+0)+0,w
  3323  066E  0828               	movwf	(__Umul8_16@multiplicand)
  3324  066F  00F0               	movf	(___flmul@a),w
  3325  0670  0824               	fcall	__Umul8_16
  3326  0671  3182  2251  3185   	movf	(1+(?__Umul8_16)),w
  3327  0674  0871               	movlb 0	; select bank0
  3328  0675  0020               	movwf	(___flmul@temp+1)
  3329  0676  00B9               	movf	(0+(?__Umul8_16)),w
  3330  0677  0870               	movwf	(___flmul@temp)
  3331  0678  00B8               	line	130
  3332                           	
  3333                           l1144:	
  3334  0679                     	movf	(___flmul@temp),w
  3335  0679  0838               	addwf	(___flmul@grs),f
  3336  067A  07AE               	movf	(___flmul@temp+1),w
  3337  067B  0839               	addwfc	(___flmul@grs+1),f
  3338  067C  3DAF               	movlw	0
  3339  067D  3000               	addwfc	(___flmul@grs+2),f
  3340  067E  3DB0               	addwfc	(___flmul@grs+3),f
  3341  067F  3DB1               	line	131
  3342                           	
  3343                           l1146:	
  3344  0680                     	movf	(___flmul@b),w
  3345  0680  0820               	movwf	(??___flmul+0)+0
  3346  0681  00A8               	movf	(??___flmul+0)+0,w
  3347  0682  0828               	movwf	(__Umul8_16@multiplicand)
  3348  0683  00F0               	movf	0+(___flmul@a)+01h,w
  3349  0684  0825               	fcall	__Umul8_16
  3350  0685  3182  2251  3185   	movf	(1+(?__Umul8_16)),w
  3351  0688  0871               	movlb 0	; select bank0
  3352  0689  0020               	movwf	(___flmul@temp+1)
  3353  068A  00B9               	movf	(0+(?__Umul8_16)),w
  3354  068B  0870               	movwf	(___flmul@temp)
  3355  068C  00B8               	line	132
  3356                           	
  3357                           l1148:	
  3358  068D                     	movf	(___flmul@temp),w
  3359  068D  0838               	addwf	(___flmul@grs),f
  3360  068E  07AE               	movf	(___flmul@temp+1),w
  3361  068F  0839               	addwfc	(___flmul@grs+1),f
  3362  0690  3DAF               	movlw	0
  3363  0691  3000               	addwfc	(___flmul@grs+2),f
  3364  0692  3DB0               	addwfc	(___flmul@grs+3),f
  3365  0693  3DB1               	line	133
  3366                           	
  3367                           l1150:	
  3368  0694                     	movlw	08h
  3369  0694  3008               u925:
  3370  0695                     	lslf	(___flmul@grs),f
  3371  0695  35AE               	rlf	(___flmul@grs+1),f
  3372  0696  0DAF               	rlf	(___flmul@grs+2),f
  3373  0697  0DB0               	rlf	(___flmul@grs+3),f
  3374  0698  0DB1               	decfsz	wreg,f
  3375  0699  0B89               	goto	u925
  3376  069A  2E95               	line	134
  3377                           	movf	(___flmul@b),w
  3378  069B  0820               	movwf	(??___flmul+0)+0
  3379  069C  00A8               	movf	(??___flmul+0)+0,w
  3380  069D  0828               	movwf	(__Umul8_16@multiplicand)
  3381  069E  00F0               	movf	(___flmul@a),w
  3382  069F  0824               	fcall	__Umul8_16
  3383  06A0  3182  2251  3185   	movf	(1+(?__Umul8_16)),w
  3384  06A3  0871               	movlb 0	; select bank0
  3385  06A4  0020               	movwf	(___flmul@temp+1)
  3386  06A5  00B9               	movf	(0+(?__Umul8_16)),w
  3387  06A6  0870               	movwf	(___flmul@temp)
  3388  06A7  00B8               	line	135
  3389                           	
  3390                           l1152:	
  3391  06A8                     	movf	(___flmul@temp),w
  3392  06A8  0838               	addwf	(___flmul@grs),f
  3393  06A9  07AE               	movf	(___flmul@temp+1),w
  3394  06AA  0839               	addwfc	(___flmul@grs+1),f
  3395  06AB  3DAF               	movlw	0
  3396  06AC  3000               	addwfc	(___flmul@grs+2),f
  3397  06AD  3DB0               	addwfc	(___flmul@grs+3),f
  3398  06AE  3DB1               	line	136
  3399                           	
  3400                           l1154:	
  3401  06AF                     	movf	0+(___flmul@b)+01h,w
  3402  06AF  0821               	movwf	(??___flmul+0)+0
  3403  06B0  00A8               	movf	(??___flmul+0)+0,w
  3404  06B1  0828               	movwf	(__Umul8_16@multiplicand)
  3405  06B2  00F0               	movf	0+(___flmul@a)+02h,w
  3406  06B3  0826               	fcall	__Umul8_16
  3407  06B4  3182  2251  3185   	movf	(1+(?__Umul8_16)),w
  3408  06B7  0871               	movlb 0	; select bank0
  3409  06B8  0020               	movwf	(___flmul@temp+1)
  3410  06B9  00B9               	movf	(0+(?__Umul8_16)),w
  3411  06BA  0870               	movwf	(___flmul@temp)
  3412  06BB  00B8               	line	137
  3413                           	movf	(___flmul@temp),w
  3414  06BC  0838               	addwf	(___flmul@prod),f
  3415  06BD  07B4               	movf	(___flmul@temp+1),w
  3416  06BE  0839               	addwfc	(___flmul@prod+1),f
  3417  06BF  3DB5               	movlw	0
  3418  06C0  3000               	addwfc	(___flmul@prod+2),f
  3419  06C1  3DB6               	addwfc	(___flmul@prod+3),f
  3420  06C2  3DB7               	line	138
  3421                           	
  3422                           l1156:	
  3423  06C3                     	movf	0+(___flmul@b)+02h,w
  3424  06C3  0822               	movwf	(??___flmul+0)+0
  3425  06C4  00A8               	movf	(??___flmul+0)+0,w
  3426  06C5  0828               	movwf	(__Umul8_16@multiplicand)
  3427  06C6  00F0               	movf	0+(___flmul@a)+01h,w
  3428  06C7  0825               	fcall	__Umul8_16
  3429  06C8  3182  2251  3185   	movf	(1+(?__Umul8_16)),w
  3430  06CB  0871               	movlb 0	; select bank0
  3431  06CC  0020               	movwf	(___flmul@temp+1)
  3432  06CD  00B9               	movf	(0+(?__Umul8_16)),w
  3433  06CE  0870               	movwf	(___flmul@temp)
  3434  06CF  00B8               	line	139
  3435                           	
  3436                           l1158:	
  3437  06D0                     	movf	(___flmul@temp),w
  3438  06D0  0838               	addwf	(___flmul@prod),f
  3439  06D1  07B4               	movf	(___flmul@temp+1),w
  3440  06D2  0839               	addwfc	(___flmul@prod+1),f
  3441  06D3  3DB5               	movlw	0
  3442  06D4  3000               	addwfc	(___flmul@prod+2),f
  3443  06D5  3DB6               	addwfc	(___flmul@prod+3),f
  3444  06D6  3DB7               	line	140
  3445                           	movf	0+(___flmul@b)+02h,w
  3446  06D7  0822               	movwf	(??___flmul+0)+0
  3447  06D8  00A8               	movf	(??___flmul+0)+0,w
  3448  06D9  0828               	movwf	(__Umul8_16@multiplicand)
  3449  06DA  00F0               	movf	0+(___flmul@a)+02h,w
  3450  06DB  0826               	fcall	__Umul8_16
  3451  06DC  3182  2251  3185   	movf	(1+(?__Umul8_16)),w
  3452  06DF  0871               	movlb 0	; select bank0
  3453  06E0  0020               	movwf	(___flmul@temp+1)
  3454  06E1  00B9               	movf	(0+(?__Umul8_16)),w
  3455  06E2  0870               	movwf	(___flmul@temp)
  3456  06E3  00B8               	line	141
  3457                           	
  3458                           l1160:	
  3459  06E4                     	movf	(___flmul@temp),w
  3460  06E4  0838               	movwf	((??___flmul+0)+0)
  3461  06E5  00A8               	movf	(___flmul@temp+1),w
  3462  06E6  0839               	movwf	((??___flmul+0)+0+1)
  3463  06E7  00A9               	clrf	((??___flmul+0)+0+2)
  3464  06E8  01AA               	clrf	((??___flmul+0)+0+3)
  3465  06E9  01AB               	movlw	08h
  3466  06EA  3008               u935:
  3467  06EB                     	lslf	(??___flmul+0)+0,f
  3468  06EB  35A8               	rlf	(??___flmul+0)+1,f
  3469  06EC  0DA9               	rlf	(??___flmul+0)+2,f
  3470  06ED  0DAA               	rlf	(??___flmul+0)+3,f
  3471  06EE  0DAB               u930:
  3472  06EF                     	decfsz	wreg,f
  3473  06EF  0B89               	goto	u935
  3474  06F0  2EEB               	movf	0+(??___flmul+0)+0,w
  3475  06F1  0828               	addwf	(___flmul@prod),f
  3476  06F2  07B4               	movf	1+(??___flmul+0)+0,w
  3477  06F3  0829               	addwfc	(___flmul@prod+1),f
  3478  06F4  3DB5               	movf	2+(??___flmul+0)+0,w
  3479  06F5  082A               	addwfc	(___flmul@prod+2),f
  3480  06F6  3DB6               	movf	3+(??___flmul+0)+0,w
  3481  06F7  082B               	addwfc	(___flmul@prod+3),f
  3482  06F8  3DB7               	line	145
  3483                           	
  3484                           l1162:	
  3485  06F9                     	movf	(___flmul@grs),w
  3486  06F9  082E               	movwf	(??___flmul+0)+0
  3487  06FA  00A8               	movf	(___flmul@grs+1),w
  3488  06FB  082F               	movwf	((??___flmul+0)+0+1)
  3489  06FC  00A9               	movf	(___flmul@grs+2),w
  3490  06FD  0830               	movwf	((??___flmul+0)+0+2)
  3491  06FE  00AA               	movf	(___flmul@grs+3),w
  3492  06FF  0831               	movwf	((??___flmul+0)+0+3)
  3493  0700  00AB               	movlw	018h
  3494  0701  3018               u945:
  3495  0702                     	lsrf	(??___flmul+0)+3,f
  3496  0702  36AB               	rrf	(??___flmul+0)+2,f
  3497  0703  0CAA               	rrf	(??___flmul+0)+1,f
  3498  0704  0CA9               	rrf	(??___flmul+0)+0,f
  3499  0705  0CA8               u940:
  3500  0706                     	decfsz	wreg,f
  3501  0706  0B89               	goto	u945
  3502  0707  2F02               	movf	0+(??___flmul+0)+0,w
  3503  0708  0828               	addwf	(___flmul@prod),f
  3504  0709  07B4               	movf	1+(??___flmul+0)+0,w
  3505  070A  0829               	addwfc	(___flmul@prod+1),f
  3506  070B  3DB5               	movf	2+(??___flmul+0)+0,w
  3507  070C  082A               	addwfc	(___flmul@prod+2),f
  3508  070D  3DB6               	movf	3+(??___flmul+0)+0,w
  3509  070E  082B               	addwfc	(___flmul@prod+3),f
  3510  070F  3DB7               	line	146
  3511                           	
  3512                           l1164:	
  3513  0710                     	movlw	08h
  3514  0710  3008               u955:
  3515  0711                     	lslf	(___flmul@grs),f
  3516  0711  35AE               	rlf	(___flmul@grs+1),f
  3517  0712  0DAF               	rlf	(___flmul@grs+2),f
  3518  0713  0DB0               	rlf	(___flmul@grs+3),f
  3519  0714  0DB1               	decfsz	wreg,f
  3520  0715  0B89               	goto	u955
  3521  0716  2F11               	line	149
  3522                           	
  3523                           l1166:	
  3524  0717                     	movf	(___flmul@bexp),w
  3525  0717  0833               	addwf	(___flmul@aexp),w
  3526  0718  0732               	movwf	(??___flmul+0)+0
  3527  0719  00A8               	clrf	(??___flmul+0)+0+1
  3528  071A  01A9               	rlf	1+(??___flmul+0)+0,f
  3529  071B  0DA9               	
  3530                           	movf	0+(??___flmul+0)+0,w
  3531  071C  0828               	addlw	082h
  3532  071D  3E82               	movwf	(___flmul@temp)
  3533  071E  00B8               	movlw	0FFh
  3534  071F  30FF               	addwfc	1+(??___flmul+0)+0,w
  3535  0720  3D29               	movwf	1+(___flmul@temp)
  3536  0721  00B9               	line	152
  3537                           	goto	l1178
  3538  0722  2F3C               	
  3539                           l566:	
  3540  0723                     	line	153
  3541                           	
  3542                           l1168:	
  3543  0723                     	movlw	01h
  3544  0723  3001               u965:
  3545  0724                     	lslf	(___flmul@prod),f
  3546  0724  35B4               	rlf	(___flmul@prod+1),f
  3547  0725  0DB5               	rlf	(___flmul@prod+2),f
  3548  0726  0DB6               	rlf	(___flmul@prod+3),f
  3549  0727  0DB7               	decfsz	wreg,f
  3550  0728  0B89               	goto	u965
  3551  0729  2F24               	line	154
  3552                           	
  3553                           l1170:	
  3554  072A                     	btfss	(___flmul@grs+3),(31)&7
  3555  072A  1FB1               	goto	u971
  3556  072B  2F2D               	goto	u970
  3557  072C  2F2E               u971:
  3558  072D                     	goto	l1174
  3559  072D  2F30               u970:
  3560  072E                     	line	155
  3561                           	
  3562                           l1172:	
  3563  072E                     	bsf	(___flmul@prod)+(0/8),(0)&7
  3564  072E  1434               	goto	l1174
  3565  072F  2F30               	line	156
  3566                           	
  3567                           l567:	
  3568  0730                     	line	157
  3569                           	
  3570                           l1174:	
  3571  0730                     	movlw	01h
  3572  0730  3001               u985:
  3573  0731                     	lslf	(___flmul@grs),f
  3574  0731  35AE               	rlf	(___flmul@grs+1),f
  3575  0732  0DAF               	rlf	(___flmul@grs+2),f
  3576  0733  0DB0               	rlf	(___flmul@grs+3),f
  3577  0734  0DB1               	decfsz	wreg,f
  3578  0735  0B89               	goto	u985
  3579  0736  2F31               	line	158
  3580                           	
  3581                           l1176:	
  3582  0737                     	movlw	0FFh
  3583  0737  30FF               	addwf	(___flmul@temp),f
  3584  0738  07B8               	movlw	0FFh
  3585  0739  30FF               	addwfc	(___flmul@temp+1),f
  3586  073A  3DB9               	goto	l1178
  3587  073B  2F3C               	line	159
  3588                           	
  3589                           l565:	
  3590  073C                     	line	152
  3591                           	
  3592                           l1178:	
  3593  073C                     	btfss	(___flmul@prod+2),(23)&7
  3594  073C  1FB6               	goto	u991
  3595  073D  2F3F               	goto	u990
  3596  073E  2F40               u991:
  3597  073F                     	goto	l1168
  3598  073F  2F23               u990:
  3599  0740                     	goto	l1180
  3600  0740  2F41               	
  3601                           l568:	
  3602  0741                     	line	163
  3603                           	
  3604                           l1180:	
  3605  0741                     	clrf	(___flmul@aexp)
  3606  0741  01B2               	line	164
  3607                           	
  3608                           l1182:	
  3609  0742                     	btfss	(___flmul@grs+3),(31)&7
  3610  0742  1FB1               	goto	u1001
  3611  0743  2F45               	goto	u1000
  3612  0744  2F46               u1001:
  3613  0745                     	goto	l1190
  3614  0745  2F66               u1000:
  3615  0746                     	line	165
  3616                           	
  3617                           l1184:	
  3618  0746                     	movlw	0FFh
  3619  0746  30FF               	andwf	(___flmul@grs),w
  3620  0747  052E               	movwf	(??___flmul+0)+0
  3621  0748  00A8               	movlw	0FFh
  3622  0749  30FF               	andwf	(___flmul@grs+1),w
  3623  074A  052F               	movwf	((??___flmul+0)+0+1)
  3624  074B  00A9               	movlw	0FFh
  3625  074C  30FF               	andwf	(___flmul@grs+2),w
  3626  074D  0530               	movwf	((??___flmul+0)+0+2)
  3627  074E  00AA               	movlw	07Fh
  3628  074F  307F               	andwf	(___flmul@grs+3),w
  3629  0750  0531               	movwf	((??___flmul+0)+0+3)
  3630  0751  00AB               	movf	3+(??___flmul+0)+0,w
  3631  0752  082B               	iorwf	2+(??___flmul+0)+0,w
  3632  0753  042A               	iorwf	1+(??___flmul+0)+0,w
  3633  0754  0429               	iorwf	0+(??___flmul+0)+0,w
  3634  0755  0428               	skipnz
  3635  0756  1903               	goto	u1011
  3636  0757  2F59               	goto	u1010
  3637  0758  2F5A               u1011:
  3638  0759                     	goto	l570
  3639  0759  2F5D               u1010:
  3640  075A                     	line	166
  3641                           	
  3642                           l1186:	
  3643  075A                     	clrf	(___flmul@aexp)
  3644  075A  01B2               	incf	(___flmul@aexp),f
  3645  075B  0AB2               	line	167
  3646                           	goto	l1190
  3647  075C  2F66               	line	168
  3648                           	
  3649                           l570:	
  3650  075D                     	line	169
  3651                           	btfss	(___flmul@prod),(0)&7
  3652  075D  1C34               	goto	u1021
  3653  075E  2F60               	goto	u1020
  3654  075F  2F61               u1021:
  3655  0760                     	goto	l1190
  3656  0760  2F66               u1020:
  3657  0761                     	line	170
  3658                           	
  3659                           l1188:	
  3660  0761                     	clrf	(___flmul@aexp)
  3661  0761  01B2               	incf	(___flmul@aexp),f
  3662  0762  0AB2               	goto	l1190
  3663  0763  2F66               	line	171
  3664                           	
  3665                           l572:	
  3666  0764                     	goto	l1190
  3667  0764  2F66               	line	172
  3668                           	
  3669                           l571:	
  3670  0765                     	goto	l1190
  3671  0765  2F66               	line	173
  3672                           	
  3673                           l569:	
  3674  0766                     	line	174
  3675                           	
  3676                           l1190:	
  3677  0766                     	movf	((___flmul@aexp)),w
  3678  0766  0832               	btfsc	status,2
  3679  0767  1903               	goto	u1031
  3680  0768  2F6A               	goto	u1030
  3681  0769  2F6B               u1031:
  3682  076A                     	goto	l1200
  3683  076A  2F95               u1030:
  3684  076B                     	line	175
  3685                           	
  3686                           l1192:	
  3687  076B                     	movlw	01h
  3688  076B  3001               	addwf	(___flmul@prod),f
  3689  076C  07B4               	movlw	0
  3690  076D  3000               	addwfc	(___flmul@prod+1),f
  3691  076E  3DB5               	movlw	0
  3692  076F  3000               	addwfc	(___flmul@prod+2),f
  3693  0770  3DB6               	movlw	0
  3694  0771  3000               	addwfc	(___flmul@prod+3),f
  3695  0772  3DB7               	line	176
  3696                           	
  3697                           l1194:	
  3698  0773                     	btfss	(___flmul@prod+3),(24)&7
  3699  0773  1C37               	goto	u1041
  3700  0774  2F76               	goto	u1040
  3701  0775  2F77               u1041:
  3702  0776                     	goto	l1200
  3703  0776  2F95               u1040:
  3704  0777                     	line	177
  3705                           	
  3706                           l1196:	
  3707  0777                     	movf	(___flmul@prod),w
  3708  0777  0834               	movwf	(??___flmul+0)+0
  3709  0778  00A8               	movf	(___flmul@prod+1),w
  3710  0779  0835               	movwf	((??___flmul+0)+0+1)
  3711  077A  00A9               	movf	(___flmul@prod+2),w
  3712  077B  0836               	movwf	((??___flmul+0)+0+2)
  3713  077C  00AA               	movf	(___flmul@prod+3),w
  3714  077D  0837               	movwf	((??___flmul+0)+0+3)
  3715  077E  00AB               	movlw	01h
  3716  077F  3001               	movwf	(??___flmul+4)+0
  3717  0780  00AC               u1055:
  3718  0781                     	asrf	(??___flmul+0)+3,f
  3719  0781  37AB               	rrf	(??___flmul+0)+2,f
  3720  0782  0CAA               	rrf	(??___flmul+0)+1,f
  3721  0783  0CA9               	rrf	(??___flmul+0)+0,f
  3722  0784  0CA8               u1050:
  3723  0785                     	decfsz	(??___flmul+4)+0,f
  3724  0785  0BAC               	goto	u1055
  3725  0786  2F81               	movf	3+(??___flmul+0)+0,w
  3726  0787  082B               	movwf	(___flmul@prod+3)
  3727  0788  00B7               	movf	2+(??___flmul+0)+0,w
  3728  0789  082A               	movwf	(___flmul@prod+2)
  3729  078A  00B6               	movf	1+(??___flmul+0)+0,w
  3730  078B  0829               	movwf	(___flmul@prod+1)
  3731  078C  00B5               	movf	0+(??___flmul+0)+0,w
  3732  078D  0828               	movwf	(___flmul@prod)
  3733  078E  00B4               
  3734                           	line	178
  3735                           	
  3736                           l1198:	
  3737  078F                     	movlw	01h
  3738  078F  3001               	addwf	(___flmul@temp),f
  3739  0790  07B8               	movlw	0
  3740  0791  3000               	addwfc	(___flmul@temp+1),f
  3741  0792  3DB9               	goto	l1200
  3742  0793  2F95               	line	179
  3743                           	
  3744                           l574:	
  3745  0794                     	goto	l1200
  3746  0794  2F95               	line	180
  3747                           	
  3748                           l573:	
  3749  0795                     	line	183
  3750                           	
  3751                           l1200:	
  3752  0795                     	movf	(___flmul@temp+1),w
  3753  0795  0839               	xorlw	80h
  3754  0796  3A80               	movwf	(??___flmul+0)+0
  3755  0797  00A8               	movlw	(0)^80h
  3756  0798  3080               	subwf	(??___flmul+0)+0,w
  3757  0799  0228               	skipz
  3758  079A  1D03               	goto	u1065
  3759  079B  2F9E               	movlw	0FFh
  3760  079C  30FF               	subwf	(___flmul@temp),w
  3761  079D  0238               u1065:
  3762  079E                     
  3763                           	skipc
  3764  079E  1C03               	goto	u1061
  3765  079F  2FA1               	goto	u1060
  3766  07A0  2FA2               u1061:
  3767  07A1                     	goto	l1204
  3768  07A1  2FAC               u1060:
  3769  07A2                     	line	184
  3770                           	
  3771                           l1202:	
  3772  07A2                     	movlw	07Fh
  3773  07A2  307F               	movlb 0	; select bank0
  3774  07A3  0020               	movwf	(___flmul@prod+3)
  3775  07A4  00B7               	movlw	080h
  3776  07A5  3080               	movwf	(___flmul@prod+2)
  3777  07A6  00B6               	movlw	0
  3778  07A7  3000               	movwf	(___flmul@prod+1)
  3779  07A8  00B5               	movlw	0
  3780  07A9  3000               	movwf	(___flmul@prod)
  3781  07AA  00B4               
  3782                           	line	185
  3783                           	goto	l576
  3784  07AB  2FDD               	line	187
  3785                           	
  3786                           l575:	
  3787  07AC                     	
  3788                           l1204:	
  3789  07AC                     	movlb 0	; select bank0
  3790  07AC  0020               	movf	(___flmul@temp+1),w
  3791  07AD  0839               	xorlw	80h
  3792  07AE  3A80               	movwf	(??___flmul+0)+0
  3793  07AF  00A8               	movlw	(0)^80h
  3794  07B0  3080               	subwf	(??___flmul+0)+0,w
  3795  07B1  0228               	skipz
  3796  07B2  1D03               	goto	u1075
  3797  07B3  2FB6               	movlw	01h
  3798  07B4  3001               	subwf	(___flmul@temp),w
  3799  07B5  0238               u1075:
  3800  07B6                     
  3801                           	skipnc
  3802  07B6  1803               	goto	u1071
  3803  07B7  2FB9               	goto	u1070
  3804  07B8  2FBA               u1071:
  3805  07B9                     	goto	l1210
  3806  07B9  2FC5               u1070:
  3807  07BA                     	line	188
  3808                           	
  3809                           l1206:	
  3810  07BA                     	movlw	high highword(0)
  3811  07BA  3000               	movlb 0	; select bank0
  3812  07BB  0020               	movwf	(___flmul@prod+3)
  3813  07BC  00B7               	movlw	low highword(0)
  3814  07BD  3000               	movwf	(___flmul@prod+2)
  3815  07BE  00B6               	movlw	high(0)
  3816  07BF  3000               	movwf	(___flmul@prod+1)
  3817  07C0  00B5               	movlw	low(0)
  3818  07C1  3000               	movwf	(___flmul@prod)
  3819  07C2  00B4               
  3820                           	line	190
  3821                           	
  3822                           l1208:	
  3823  07C3                     	clrf	(___flmul@sign)
  3824  07C3  01AD               	line	191
  3825                           	goto	l576
  3826  07C4  2FDD               	line	192
  3827                           	
  3828                           l577:	
  3829  07C5                     	line	194
  3830                           	
  3831                           l1210:	
  3832  07C5                     	movlb 0	; select bank0
  3833  07C5  0020               	movf	(___flmul@temp),w
  3834  07C6  0838               	movwf	(??___flmul+0)+0
  3835  07C7  00A8               	movf	(??___flmul+0)+0,w
  3836  07C8  0828               	movwf	(___flmul@bexp)
  3837  07C9  00B3               	line	195
  3838                           	movlw	0FFh
  3839  07CA  30FF               	andwf	(___flmul@prod),f
  3840  07CB  05B4               	movlw	0FFh
  3841  07CC  30FF               	andwf	(___flmul@prod+1),f
  3842  07CD  05B5               	movlw	07Fh
  3843  07CE  307F               	andwf	(___flmul@prod+2),f
  3844  07CF  05B6               	movlw	0
  3845  07D0  3000               	andwf	(___flmul@prod+3),f
  3846  07D1  05B7               	line	196
  3847                           	
  3848                           l1212:	
  3849  07D2                     	btfss	(___flmul@bexp),(0)&7
  3850  07D2  1C33               	goto	u1081
  3851  07D3  2FD5               	goto	u1080
  3852  07D4  2FD6               u1081:
  3853  07D5                     	goto	l1216
  3854  07D5  2FD8               u1080:
  3855  07D6                     	line	197
  3856                           	
  3857                           l1214:	
  3858  07D6                     	bsf	0+(___flmul@prod)+02h+(7/8),(7)&7
  3859  07D6  17B6               	goto	l1216
  3860  07D7  2FD8               	line	198
  3861                           	
  3862                           l579:	
  3863  07D8                     	line	199
  3864                           	
  3865                           l1216:	
  3866  07D8                     	lsrf	(___flmul@bexp),w
  3867  07D8  3633               	movwf	(??___flmul+0)+0
  3868  07D9  00A8               	movf	(??___flmul+0)+0,w
  3869  07DA  0828               	movwf	0+(___flmul@prod)+03h
  3870  07DB  00B7               	goto	l576
  3871  07DC  2FDD               	line	200
  3872                           	
  3873                           l578:	
  3874  07DD                     	
  3875                           l576:	
  3876  07DD                     	line	201
  3877                           	movf	(___flmul@sign),w
  3878  07DD  082D               	movwf	(??___flmul+0)+0
  3879  07DE  00A8               	movf	(??___flmul+0)+0,w
  3880  07DF  0828               	iorwf	0+(___flmul@prod)+03h,f
  3881  07E0  04B7               	line	203
  3882                           	
  3883                           l1218:	
  3884  07E1                     	movf	(___flmul@prod+3),w
  3885  07E1  0837               	movwf	(?___flmul+3)
  3886  07E2  00A3               	movf	(___flmul@prod+2),w
  3887  07E3  0836               	movwf	(?___flmul+2)
  3888  07E4  00A2               	movf	(___flmul@prod+1),w
  3889  07E5  0835               	movwf	(?___flmul+1)
  3890  07E6  00A1               	movf	(___flmul@prod),w
  3891  07E7  0834               	movwf	(?___flmul)
  3892  07E8  00A0               
  3893                           	goto	l564
  3894  07E9  2FEA               	
  3895                           l1220:	
  3896  07EA                     	line	205
  3897                           	
  3898                           l564:	
  3899  07EA                     	return
  3900  07EA  0008               	opt stack 0
  3901                           GLOBAL	__end_of___flmul
  3902                           	__end_of___flmul:
  3903  07EB                     	signat	___flmul,8316
  3904                           	global	__Umul8_16
  3905                           
  3906 ;; *************** function __Umul8_16 *****************
  3907 ;; Defined at:
  3908 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8_16.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;  multiplier      1    wreg     unsigned char 
  3911 ;;  multiplicand    1    0[COMMON] unsigned char 
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;  multiplier      1    8[COMMON] unsigned char 
  3914 ;;  word_mpld       2    6[COMMON] unsigned int 
  3915 ;;  product         2    4[COMMON] unsigned int 
  3916 ;; Return value:  Size  Location     Type
  3917 ;;                  2    0[COMMON] unsigned int 
  3918 ;; Registers used:
  3919 ;;		wreg, status,2, status,0
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMMON   BANK0   BANK1
  3925 ;;      Params:         2       0       0
  3926 ;;      Locals:         5       0       0
  3927 ;;      Temps:          2       0       0
  3928 ;;      Totals:         9       0       0
  3929 ;;Total ram usage:        9 bytes
  3930 ;; Hardware stack levels used:    1
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		___flmul
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           psect	text9,local,class=CODE,delta=2,merge=1,group=1
  3938                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8_16.c"
  3939                           	line	4
  3940                           global __ptext9
  3941                           __ptext9:	;psect for function __Umul8_16
  3942  0251                     psect	text9
  3943                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8_16.c"
  3944                           	line	4
  3945                           	global	__size_of__Umul8_16
  3946                           	__size_of__Umul8_16	equ	__end_of__Umul8_16-__Umul8_16
  3947  0026                     	
  3948                           __Umul8_16:	
  3949  0251                     ;incstack = 0
  3950                           	opt	stack 14
  3951                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3952                           ;__Umul8_16@multiplier stored from wreg
  3953                           	movwf	(__Umul8_16@multiplier)
  3954  0251  00F8               	line	5
  3955                           	
  3956                           l972:	
  3957  0252                     	clrf	(__Umul8_16@product)
  3958  0252  01F4               	clrf	(__Umul8_16@product+1)
  3959  0253  01F5               	line	6
  3960                           	
  3961                           l974:	
  3962  0254                     	movf	(__Umul8_16@multiplicand),w
  3963  0254  0870               	movwf	(??__Umul8_16+0)+0
  3964  0255  00F2               	clrf	(??__Umul8_16+0)+0+1
  3965  0256  01F3               	movf	0+(??__Umul8_16+0)+0,w
  3966  0257  0872               	movwf	(__Umul8_16@word_mpld)
  3967  0258  00F6               	movf	1+(??__Umul8_16+0)+0,w
  3968  0259  0873               	movwf	(__Umul8_16@word_mpld+1)
  3969  025A  00F7               	goto	l976
  3970  025B  2A5C               	line	50
  3971                           	
  3972                           l601:	
  3973  025C                     	line	51
  3974                           	
  3975                           l976:	
  3976  025C                     	btfss	(__Umul8_16@multiplier),(0)&7
  3977  025C  1C78               	goto	u671
  3978  025D  2A5F               	goto	u670
  3979  025E  2A60               u671:
  3980  025F                     	goto	l602
  3981  025F  2A64               u670:
  3982  0260                     	line	52
  3983                           	
  3984                           l978:	
  3985  0260                     	movf	(__Umul8_16@word_mpld),w
  3986  0260  0876               	addwf	(__Umul8_16@product),f
  3987  0261  07F4               	movf	(__Umul8_16@word_mpld+1),w
  3988  0262  0877               	addwfc	(__Umul8_16@product+1),f
  3989  0263  3DF5               	line	53
  3990                           	
  3991                           l602:	
  3992  0264                     	line	54
  3993                           	movlw	01h
  3994  0264  3001               	
  3995                           u685:
  3996  0265                     	lslf	(__Umul8_16@word_mpld),f
  3997  0265  35F6               	rlf	(__Umul8_16@word_mpld+1),f
  3998  0266  0DF7               	decfsz	wreg,f
  3999  0267  0B89               	goto	u685
  4000  0268  2A65               	line	55
  4001                           	clrc
  4002  0269  1003               	rrf	(__Umul8_16@multiplier),f
  4003  026A  0CF8               
  4004                           	line	56
  4005                           	
  4006                           l980:	
  4007  026B                     	movf	((__Umul8_16@multiplier)),w
  4008  026B  0878               	btfss	status,2
  4009  026C  1D03               	goto	u691
  4010  026D  2A6F               	goto	u690
  4011  026E  2A70               u691:
  4012  026F                     	goto	l976
  4013  026F  2A5C               u690:
  4014  0270                     	goto	l982
  4015  0270  2A71               	
  4016                           l603:	
  4017  0271                     	line	59
  4018                           	
  4019                           l982:	
  4020  0271                     	movf	(__Umul8_16@product+1),w
  4021  0271  0875               	movwf	(?__Umul8_16+1)
  4022  0272  00F1               	movf	(__Umul8_16@product),w
  4023  0273  0874               	movwf	(?__Umul8_16)
  4024  0274  00F0               	goto	l604
  4025  0275  2A76               	
  4026                           l984:	
  4027  0276                     	line	60
  4028                           	
  4029                           l604:	
  4030  0276                     	return
  4031  0276  0008               	opt stack 0
  4032                           GLOBAL	__end_of__Umul8_16
  4033                           	__end_of__Umul8_16:
  4034  0277                     	signat	__Umul8_16,8314
  4035                           global	___latbits
  4036                           ___latbits	equ	0
  4037  0000                     	global	btemp
  4038                           	btemp set 07Eh
  4039  007E                     
  4040                           	DABS	1,126,2	;btemp
  4041                           	global	wtemp0
  4042                           	wtemp0 set btemp+0
  4043  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     42      52
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    _main->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    4076
                                             37 BANK0      5     5      0
                            ___flmul
                            ___fltol
                           ___xxtofl
                               _down
                          _downInner
                           _test_bit
                                 _up
                            _upInner
 ---------------------------------------------------------------------------------
 (1) _upInner                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _up                                                   2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _test_bit                                             6     2      4     956
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _downInner                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _down                                                 2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     305
                                             26 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2417
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _down
   _downInner
   _test_bit
   _up
   _upInner

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      42       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2A      34       6       65.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      42       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Mar 26 04:23:32 2021

             __CFG_CP$ON 0000                        _i 004D                        _u 004E  
                      _x 0050                        _y 004F                       l50 02BD  
                     l43 020C                       l51 02B1                       l60 0292  
                     l52 02C2                       l61 0286                       l53 02CC  
                     l62 0297                       l46 0250                       l70 0450  
                     l63 02A1                       l71 04E4                       l56 022E  
                     l80 057F                       l72 04AB                       l49 02AC  
                     l81 057F                       l73 04D0                       l74 0578  
                     l59 0281                       l75 0516                       l76 0574  
                     l68 0423                       l77 053B                       l69 04E9  
                     l78 0560                       l79 057E              __CFG_CPD$ON 0000  
                     _up 022F      __Umul8_16@word_mpld 0076                      l360 02EB  
                    l601 025C                      l361 0361                      l602 0264  
                    l370 0350                      l362 0330                      l603 0271  
                    l371 0361                      l363 031E                      l604 0276  
                    l364 031F                      l365 032F                      l366 0351  
                    ?_up 0070                      l367 0340                      l560 05DB  
                    l368 034A                      l561 05F0                      l553 0590  
                    l369 0341                      l570 075D                      l554 05A5  
                    l571 0765                      l563 05E6                      l555 05A3  
                    l572 0764                      l564 07EA                      l556 05AE  
                    l573 0795                      l565 073C                      l557 05BD  
                    l574 0794                      l566 0723                      l558 05D2  
                    l590 03AF                      l582 037C                      l575 07AC  
                    l567 0730                      l559 05D0                      l591 03C9  
                    l583 0384                      l576 07DD                      l568 0741  
                    l592 03D4                      l584 0396                      l577 07C5  
                    l569 0766                      l593 03CA                      l585 0415  
                    l578 07DD                      l586 03A7                      l579 07D8  
                    l595 03DF                      l587 039B                      l596 03DF  
                    l588 03AE                      l597 03EB                      l589 03C2  
                    l598 040C                      l980 026B                      l972 0252  
                    l982 0271                      l974 0254                      l990 022F  
                    l984 0276                      l976 025C                      l992 0232  
                    l978 0260                      l986 01FB                      l994 0240  
                    l988 020C                      l996 0245                      l998 0247  
                    _RA0 0060                      _RA1 0061                      _RA4 0064  
                    _RA5 0065                      u710 02C2                      u711 02C1  
                    u720 0297                      u704 0203                      u721 0296  
                    u705 0201                      u810 034F                      u730 02E1  
                    u811 034E                      u731 02E0                      u900 05E5  
                    u820 0356                      u740 02F8                      u901 05E4  
                    u821 0355                      u805 0342                      u670 0260  
                    u830 058E                      u750 030D                      u671 025F  
                    u831 058D                      u751 030C                      u840 0595  
                    u760 0314                      u841 0594                      u761 0313  
                    u745 02F4                      u690 0270                      u930 06EF  
                    u850 059A                      u691 026F                      u915 0666  
                    u851 0599                      u940 0706                      u860 05BB  
                    u780 032E                      u685 0265                      u925 0695  
                    u861 05BA                      u781 032D                      u870 05C2  
                    u790 0336                      u935 06EB                      u871 05C1  
                    u791 0335                      u775 0320                      u880 05C7  
                    u945 0702                      u881 05C6                      u970 072E  
                    u890 05E0                      u971 072D                      u955 0711  
                    u891 05DF                      u965 0724                      u990 0740  
                    u991 073F                      u985 0731                      _sek 0051  
                    _qqq 0053                      _www 0052             __CFG_BORV$LO 0000  
                    wreg 0009             ___flmul@aexp 0032             ___flmul@bexp 0033  
           ___flmul@sign 002D             ___flmul@temp 0038             ___flmul@prod 0034  
                   ??_up 0070             __CFG_LVP$OFF 0000             ___fltol@exp1 0044  
                   l1000 0248                     l1002 024C                     l1010 02B1  
                   l1100 05AE                     l1020 0210                     l1012 02B9  
                   l1004 02A2                     l1110 05C2                     l1102 05B3  
                   l1030 022A                     l1022 021E                     l1014 02BD  
                   l1006 02A5                     l1200 0795                     l1120 05E0  
                   l1112 05C7                     l1104 05B7                     l1024 0223  
                   l1040 028E                     l1032 0277                     l1016 02C4  
                   l1008 02A8                     l1210 07C5                     l1202 07A2  
                   l1130 060A                     l1122 05E6                     l1114 05D0  
                   l1106 05BB                     l1050 02EA                     l1026 0225  
                   l1018 020D                     l1042 0292                     l1034 027A  
                   l1220 07EA                     l1212 07D2                     l1204 07AC  
                   l1140 0665                     l1132 0624                     l1124 05EF  
                   l1116 05D2                     l1108 05BD                     l1060 0309  
                   l1052 02EB                     l1028 0226                     l1044 0299  
                   l1036 027D                     l1300 04D0                     l1214 07D6  
                   l1206 07BA                     l1150 0694                     l1142 066C  
                   l1134 0631                     l1126 05F0                     l1118 05DB  
                   l1062 030D                     l1070 0330                     l1054 02FE  
                   l1046 02CD                     l1230 038C                     l1222 0363  
                   l1038 0286                     l1310 0509                     l1302 04D9  
                   l1216 07D8                     l1208 07C3                     l1160 06E4  
                   l1152 06A8                     l1144 0679                     l1136 064B  
                   l1128 05FD                     l1080 0356                     l1072 0336  
                   l1064 0314                     l1056 02FF                     l1048 02E1  
                   l1240 03AF                     l1232 0395                     l1224 0368  
                   l1320 0535                     l1312 050C                     l1304 04DE  
                   l1218 07E1                     l1170 072A                     l1162 06F9  
                   l1154 06AF                     l1146 0680                     l1138 0658  
                   l1090 0590                     l1082 0580                     l1074 033F  
                   l1066 031D                     l1058 0307                     l1250 03D8  
                   l1242 03B3                     l1234 0396                     l1226 036C  
                   l1330 0560                     l1322 0538                     l1314 050E  
                   l1306 04E5                     l1180 0741                     l1172 072E  
                   l1164 0710                     l1156 06C3                     l1148 068D  
                   l1092 0595                     l1084 0586                     l1076 0341  
                   l1068 031F                     l1260 040A                     l1252 03E3  
                   l1244 03BB                     l1236 039B                     l1228 037C  
                   l1332 0569                     l1324 053B                     l1316 0515  
                   l1308 04E9                     l1190 0766                     l1182 0742  
                   l1174 0730                     l1166 0717                     l1158 06D0  
                   l1094 059A                     l1086 058A                     l1078 0351  
                   l1262 040C                     l1254 03ED                     l1246 03CA  
                   l1238 03A7                     l1334 056E                     l1326 055A  
                   l1318 0516                     l1270 041B                     l1192 076B  
                   l1184 0746                     l1176 0737                     l1168 0723  
                   l1096 05A3                     l1088 058E                     l1264 0415  
                   l1256 0401                     l1248 03D4                     l1336 0575  
                   l1328 055D                     l1280 0446                     l1272 041D  
                   l1194 0773                     l1186 075A                     l1178 073C  
                   l1098 05A5                     l1258 0406                     l1290 0472  
                   l1282 0448                     l1274 041F                     l1266 0416  
                   l1196 0777                     l1188 0761                     l1292 0474  
                   l1284 044F                     l1276 0423                     l1268 0419  
                   l1198 078F                     l1294 04AB                     l1286 0450  
                   l1278 0443                     l1296 04CA                     l1288 046F  
                   l1298 04CD                     u1000 0746                     u1001 0745  
                   u1010 075A                     u1011 0759                     u1020 0761  
                   u1100 036C                     u1021 0760                     u1101 036B  
                   u1030 076B                     u1110 038C                     u1031 076A  
                   u1111 038B                     u1040 0777                     u1200 03F7  
                   u1041 0776                     u1050 0785                     u1210 0406  
                   u1130 03AD                     u1211 0405                     u1131 03AC  
                   u1060 07A2                     u1220 040A                     u1300 0535  
                   u1061 07A1                     u1221 0409                     u1205 03F3  
                   u1125 03A0                     u1301 0534                     u1070 07BA  
                   u1150 03C8                     u1310 055A                     u1230 0443  
                   u1071 07B9                     u1055 0781                     u1151 03C7  
                   u1311 0559                     u1231 0442                     u1080 07D6  
                   u1320 0574                     u1240 044E                     u1081 07D5  
                   u1065 079E                     u1145 03BC                     u1321 0573  
                   u1305 0531                     u1241 044D                     u1170 03D8  
                   u1090 0368                     u1250 046F                     u1075 07B6  
                   u1171 03D7                     u1091 0367                     u1315 0556  
                   u1251 046E                     u1235 043F                     u1180 03DE  
                   u1260 04CA                     u1181 03DD                     u1165 03CD  
                   u1261 04C9                     u1190 03E3                     u1270 04E4  
                   u1191 03E2                     u1271 04E3                     u1255 046B  
                   u1280 0509                     u1281 0508                     u1337 04D4  
                   u1265 04C6                     u1290 0514                     u1347 0564  
                   u1291 0513                     u1357 02B4                     u1285 0505  
                   u1367 0239                     u1377 0289                     u1387 0217  
           __CFG_WRT$OFF 0000                     _main 0416                     _down 020D  
                   _qqq1 004A                     _time 004C                     btemp 007E  
                   _www1 004B            __CFG_BOREN$ON 0000                     start 0001  
          __CFG_IESO$OFF 0000            ___fltol@sign1 0043                    ?_main 0070  
                  ?_down 0070            __CFG_WDTE$OFF 0000          __end_of___flmul 07EB  
        __end_of___fltol 0362                    _PORTA 000C                    _TRISA 008C  
         __CFG_FCMEN$OFF 0000           test_bit@aValue 0070          __end_of_upInner 02CD  
                  status 0003                    wtemp0 007E           __CFG_MCLRE$OFF 0000  
        __initialization 07EB             __end_of_main 0580             __end_of_down 022F  
                 ??_main 0045                   ??_down 0070           __CFG_PLLEN$OFF 0000  
                 _ADCON0 009D                   _ANSELA 018C                   _OSCCON 0099  
       __end_of___xxtofl 0416           __CFG_PWRTE$OFF 0000           __CFG_STVREN$ON 0000  
              ??___flmul 0028                ??___fltol 003E          test_bit@aNumber 0072  
     __size_of__Umul8_16 0026                ??_upInner 0070         __end_of_test_bit 020D  
           ___xxtofl@arg 007A             ___xxtofl@exp 0079             ___xxtofl@val 0070  
__end_of__initialization 07FE               ___fltol@f1 003A           __pcstackCOMMON 0070  
           __pidataBANK0 01F8               __end_of_up 0251               __pbssBANK0 004A  
     __size_of_downInner 002B        __end_of__Umul8_16 0277               __pmaintext 0416  
              ?___xxtofl 0070                ?_test_bit 0070                  ___flmul 0580  
                ___fltol 02CD        __end_of_downInner 02A2                  __ptext1 02A2  
                __ptext2 022F                  __ptext3 01FB                  __ptext4 0277  
                __ptext5 020D                  __ptext6 0362                  __ptext7 02CD  
                __ptext8 0580                  __ptext9 0251               ??___xxtofl 0074  
                _upInner 02A2     end_of_initialization 07FE               ??_test_bit 0074  
       __CFG_FOSC$INTOSC 0000            ___xxtofl@sign 0078              ___flmul@grs 002E  
    start_initialization 07EB                __Umul8_16 0251              __pdataBANK0 0051  
              ___flmul@a 0024                ___flmul@b 0020                ___latbits 0000  
          __pcstackBANK0 0020        __size_of___xxtofl 00B4                 ?___flmul 0020  
               ?___fltol 003A               ?__Umul8_16 0070        __size_of_test_bit 0012  
              _downInner 0277                 ?_upInner 0070              __size_of_up 0022  
             ?_downInner 0070              ??__Umul8_16 0072         __size_of___flmul 026B  
       __size_of___fltol 0095                 ___xxtofl 0362         __size_of_upInner 002B  
          __size_of_main 016A            __size_of_down 0022                 _test_bit 01FB  
            ??_downInner 0070        __CFG_CLKOUTEN$OFF 0000   __Umul8_16@multiplicand 0070  
   __Umul8_16@multiplier 0078        __Umul8_16@product 0074  
