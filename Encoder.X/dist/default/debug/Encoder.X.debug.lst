

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Mar 18 21:33:25 2021

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC12F1822 Definitions
    37                           ; 
    38  0008                     fsr0h equ 05h
    39  0005                     fsr0l equ 04h
    40  0004                     fsr1h equ 07h
    41  0007                     fsr1l equ 06h
    42  0006                     indf equ 00h
    43  0000                     indf0 equ 00h
    44  0000                     indf1 equ 01h
    45  0001                     intcon equ 0Bh
    46  000B                     pc equ 02h
    47  0002                     pcl equ 02h
    48  0002                     pclath equ 0Ah
    49  000A                     status equ 03h
    50  0003                     wreg equ 09h
    51  0009                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     pushw	macro
    88                           	movwi fsr1++
    89                           	endm
    90  0000                     popw	macro
    91                           	moviw --fsr1
    92                           	endm
    93  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
    94                           INDF0 equ 00h ;# 
    95  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
    96                           INDF1 equ 01h ;# 
    97  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
    98                           PCL equ 02h ;# 
    99  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   100                           STATUS equ 03h ;# 
   101  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   102                           FSR0L equ 04h ;# 
   103  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   104                           FSR0H equ 05h ;# 
   105  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   106                           FSR1L equ 06h ;# 
   107  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   108                           FSR1H equ 07h ;# 
   109  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   110                           BSR equ 08h ;# 
   111  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   112                           WREG equ 09h ;# 
   113  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   114                           PCLATH equ 0Ah ;# 
   115  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   116                           INTCON equ 0Bh ;# 
   117  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   118                           PORTA equ 0Ch ;# 
   119  000C                     # 721 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   120                           PIR1 equ 011h ;# 
   121  0011                     # 783 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   122                           PIR2 equ 012h ;# 
   123  0012                     # 823 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   124                           TMR0 equ 015h ;# 
   125  0015                     # 843 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   126                           TMR1 equ 016h ;# 
   127  0016                     # 850 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   128                           TMR1L equ 016h ;# 
   129  0016                     # 870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   130                           TMR1H equ 017h ;# 
   131  0017                     # 890 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   132                           T1CON equ 018h ;# 
   133  0018                     # 962 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   134                           T1GCON equ 019h ;# 
   135  0019                     # 1039 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   136                           TMR2 equ 01Ah ;# 
   137  001A                     # 1059 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   138                           PR2 equ 01Bh ;# 
   139  001B                     # 1079 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   140                           T2CON equ 01Ch ;# 
   141  001C                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   142                           CPSCON0 equ 01Eh ;# 
   143  001E                     # 1210 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   144                           CPSCON1 equ 01Fh ;# 
   145  001F                     # 1244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   146                           TRISA equ 08Ch ;# 
   147  008C                     # 1294 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   148                           PIE1 equ 091h ;# 
   149  0091                     # 1356 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   150                           PIE2 equ 092h ;# 
   151  0092                     # 1396 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   152                           OPTION_REG equ 095h ;# 
   153  0095                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   154                           PCON equ 096h ;# 
   155  0096                     # 1530 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   156                           WDTCON equ 097h ;# 
   157  0097                     # 1589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   158                           OSCTUNE equ 098h ;# 
   159  0098                     # 1647 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   160                           OSCCON equ 099h ;# 
   161  0099                     # 1719 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   162                           OSCSTAT equ 09Ah ;# 
   163  009A                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   164                           ADRES equ 09Bh ;# 
   165  009B                     # 1788 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   166                           ADRESL equ 09Bh ;# 
   167  009B                     # 1808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   168                           ADRESH equ 09Ch ;# 
   169  009C                     # 1828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   170                           ADCON0 equ 09Dh ;# 
   171  009D                     # 1917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   172                           ADCON1 equ 09Eh ;# 
   173  009E                     # 1983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   174                           LATA equ 010Ch ;# 
   175  010C                     # 2028 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   176                           CM1CON0 equ 0111h ;# 
   177  0111                     # 2085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   178                           CM1CON1 equ 0112h ;# 
   179  0112                     # 2139 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   180                           CMOUT equ 0115h ;# 
   181  0115                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   182                           BORCON equ 0116h ;# 
   183  0116                     # 2186 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   184                           FVRCON equ 0117h ;# 
   185  0117                     # 2262 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   186                           DACCON0 equ 0118h ;# 
   187  0118                     # 2317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   188                           DACCON1 equ 0119h ;# 
   189  0119                     # 2369 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   190                           SRCON0 equ 011Ah ;# 
   191  011A                     # 2440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   192                           SRCON1 equ 011Bh ;# 
   193  011B                     # 2492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   194                           APFCON equ 011Dh ;# 
   195  011D                     # 2497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   196                           APFCON0 equ 011Dh ;# 
   197  011D                     # 2634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   198                           ANSELA equ 018Ch ;# 
   199  018C                     # 2681 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   200                           EEADR equ 0191h ;# 
   201  0191                     # 2688 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   202                           EEADRL equ 0191h ;# 
   203  0191                     # 2708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   204                           EEADRH equ 0192h ;# 
   205  0192                     # 2728 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   206                           EEDAT equ 0193h ;# 
   207  0193                     # 2735 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   208                           EEDATL equ 0193h ;# 
   209  0193                     # 2740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   210                           EEDATA equ 0193h ;# 
   211  0193                     # 2773 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   212                           EEDATH equ 0194h ;# 
   213  0194                     # 2793 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   214                           EECON1 equ 0195h ;# 
   215  0195                     # 2855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   216                           EECON2 equ 0196h ;# 
   217  0196                     # 2875 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   218                           RCREG equ 0199h ;# 
   219  0199                     # 2895 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   220                           TXREG equ 019Ah ;# 
   221  019A                     # 2915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   222                           SP1BRG equ 019Bh ;# 
   223  019B                     # 2922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   224                           SP1BRGL equ 019Bh ;# 
   225  019B                     # 2927 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   226                           SPBRG equ 019Bh ;# 
   227  019B                     # 2931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   228                           SPBRGL equ 019Bh ;# 
   229  019B                     # 2976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   230                           SP1BRGH equ 019Ch ;# 
   231  019C                     # 2981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   232                           SPBRGH equ 019Ch ;# 
   233  019C                     # 3014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   234                           RCSTA equ 019Dh ;# 
   235  019D                     # 3076 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   236                           TXSTA equ 019Eh ;# 
   237  019E                     # 3138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   238                           BAUDCON equ 019Fh ;# 
   239  019F                     # 3190 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   240                           WPUA equ 020Ch ;# 
   241  020C                     # 3248 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   242                           SSP1BUF equ 0211h ;# 
   243  0211                     # 3253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   244                           SSPBUF equ 0211h ;# 
   245  0211                     # 3286 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   246                           SSP1ADD equ 0212h ;# 
   247  0212                     # 3291 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   248                           SSPADD equ 0212h ;# 
   249  0212                     # 3324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   250                           SSP1MSK equ 0213h ;# 
   251  0213                     # 3329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   252                           SSPMSK equ 0213h ;# 
   253  0213                     # 3362 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   254                           SSP1STAT equ 0214h ;# 
   255  0214                     # 3367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   256                           SSPSTAT equ 0214h ;# 
   257  0214                     # 3484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   258                           SSP1CON1 equ 0215h ;# 
   259  0215                     # 3489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   260                           SSPCON1 equ 0215h ;# 
   261  0215                     # 3493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   262                           SSPCON equ 0215h ;# 
   263  0215                     # 3688 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   264                           SSP1CON2 equ 0216h ;# 
   265  0216                     # 3693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   266                           SSPCON2 equ 0216h ;# 
   267  0216                     # 3810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   268                           SSP1CON3 equ 0217h ;# 
   269  0217                     # 3815 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   270                           SSPCON3 equ 0217h ;# 
   271  0217                     # 3932 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   272                           CCPR1 equ 0291h ;# 
   273  0291                     # 3939 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   274                           CCPR1L equ 0291h ;# 
   275  0291                     # 3959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   276                           CCPR1H equ 0292h ;# 
   277  0292                     # 3979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   278                           CCP1CON equ 0293h ;# 
   279  0293                     # 4061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   280                           PWM1CON equ 0294h ;# 
   281  0294                     # 4131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   282                           CCP1AS equ 0295h ;# 
   283  0295                     # 4136 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   284                           ECCP1AS equ 0295h ;# 
   285  0295                     # 4293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   286                           PSTR1CON equ 0296h ;# 
   287  0296                     # 4337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   288                           IOCAP equ 0391h ;# 
   289  0391                     # 4395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   290                           IOCAN equ 0392h ;# 
   291  0392                     # 4453 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   292                           IOCAF equ 0393h ;# 
   293  0393                     # 4511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   294                           CLKRCON equ 039Ah ;# 
   295  039A                     # 4587 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   296                           MDCON equ 039Ch ;# 
   297  039C                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   298                           MDSRC equ 039Dh ;# 
   299  039D                     # 4691 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   300                           MDCARL equ 039Eh ;# 
   301  039E                     # 4756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   302                           MDCARH equ 039Fh ;# 
   303  039F                     # 4821 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   304                           STATUS_SHAD equ 0FE4h ;# 
   305  0FE4                     # 4853 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   306                           WREG_SHAD equ 0FE5h ;# 
   307  0FE5                     # 4873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   308                           BSR_SHAD equ 0FE6h ;# 
   309  0FE6                     # 4893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   310                           PCLATH_SHAD equ 0FE7h ;# 
   311  0FE7                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   312                           FSR0L_SHAD equ 0FE8h ;# 
   313  0FE8                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   314                           FSR0H_SHAD equ 0FE9h ;# 
   315  0FE9                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   316                           FSR1L_SHAD equ 0FEAh ;# 
   317  0FEA                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   318                           FSR1H_SHAD equ 0FEBh ;# 
   319  0FEB                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   320                           STKPTR equ 0FEDh ;# 
   321  0FED                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   322                           TOSL equ 0FEEh ;# 
   323  0FEE                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   324                           TOSH equ 0FEFh ;# 
   325  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   326                           INDF0 equ 00h ;# 
   327  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   328                           INDF1 equ 01h ;# 
   329  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   330                           PCL equ 02h ;# 
   331  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   332                           STATUS equ 03h ;# 
   333  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   334                           FSR0L equ 04h ;# 
   335  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   336                           FSR0H equ 05h ;# 
   337  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   338                           FSR1L equ 06h ;# 
   339  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   340                           FSR1H equ 07h ;# 
   341  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   342                           BSR equ 08h ;# 
   343  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   344                           WREG equ 09h ;# 
   345  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   346                           PCLATH equ 0Ah ;# 
   347  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   348                           INTCON equ 0Bh ;# 
   349  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   350                           PORTA equ 0Ch ;# 
   351  000C                     # 721 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   352                           PIR1 equ 011h ;# 
   353  0011                     # 783 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   354                           PIR2 equ 012h ;# 
   355  0012                     # 823 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   356                           TMR0 equ 015h ;# 
   357  0015                     # 843 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   358                           TMR1 equ 016h ;# 
   359  0016                     # 850 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   360                           TMR1L equ 016h ;# 
   361  0016                     # 870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   362                           TMR1H equ 017h ;# 
   363  0017                     # 890 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   364                           T1CON equ 018h ;# 
   365  0018                     # 962 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   366                           T1GCON equ 019h ;# 
   367  0019                     # 1039 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   368                           TMR2 equ 01Ah ;# 
   369  001A                     # 1059 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   370                           PR2 equ 01Bh ;# 
   371  001B                     # 1079 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   372                           T2CON equ 01Ch ;# 
   373  001C                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   374                           CPSCON0 equ 01Eh ;# 
   375  001E                     # 1210 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   376                           CPSCON1 equ 01Fh ;# 
   377  001F                     # 1244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   378                           TRISA equ 08Ch ;# 
   379  008C                     # 1294 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   380                           PIE1 equ 091h ;# 
   381  0091                     # 1356 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   382                           PIE2 equ 092h ;# 
   383  0092                     # 1396 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   384                           OPTION_REG equ 095h ;# 
   385  0095                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   386                           PCON equ 096h ;# 
   387  0096                     # 1530 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   388                           WDTCON equ 097h ;# 
   389  0097                     # 1589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   390                           OSCTUNE equ 098h ;# 
   391  0098                     # 1647 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   392                           OSCCON equ 099h ;# 
   393  0099                     # 1719 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   394                           OSCSTAT equ 09Ah ;# 
   395  009A                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   396                           ADRES equ 09Bh ;# 
   397  009B                     # 1788 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   398                           ADRESL equ 09Bh ;# 
   399  009B                     # 1808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   400                           ADRESH equ 09Ch ;# 
   401  009C                     # 1828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   402                           ADCON0 equ 09Dh ;# 
   403  009D                     # 1917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   404                           ADCON1 equ 09Eh ;# 
   405  009E                     # 1983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   406                           LATA equ 010Ch ;# 
   407  010C                     # 2028 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   408                           CM1CON0 equ 0111h ;# 
   409  0111                     # 2085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   410                           CM1CON1 equ 0112h ;# 
   411  0112                     # 2139 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   412                           CMOUT equ 0115h ;# 
   413  0115                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   414                           BORCON equ 0116h ;# 
   415  0116                     # 2186 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   416                           FVRCON equ 0117h ;# 
   417  0117                     # 2262 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   418                           DACCON0 equ 0118h ;# 
   419  0118                     # 2317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   420                           DACCON1 equ 0119h ;# 
   421  0119                     # 2369 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   422                           SRCON0 equ 011Ah ;# 
   423  011A                     # 2440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   424                           SRCON1 equ 011Bh ;# 
   425  011B                     # 2492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   426                           APFCON equ 011Dh ;# 
   427  011D                     # 2497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   428                           APFCON0 equ 011Dh ;# 
   429  011D                     # 2634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   430                           ANSELA equ 018Ch ;# 
   431  018C                     # 2681 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   432                           EEADR equ 0191h ;# 
   433  0191                     # 2688 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   434                           EEADRL equ 0191h ;# 
   435  0191                     # 2708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   436                           EEADRH equ 0192h ;# 
   437  0192                     # 2728 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   438                           EEDAT equ 0193h ;# 
   439  0193                     # 2735 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   440                           EEDATL equ 0193h ;# 
   441  0193                     # 2740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   442                           EEDATA equ 0193h ;# 
   443  0193                     # 2773 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   444                           EEDATH equ 0194h ;# 
   445  0194                     # 2793 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   446                           EECON1 equ 0195h ;# 
   447  0195                     # 2855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   448                           EECON2 equ 0196h ;# 
   449  0196                     # 2875 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   450                           RCREG equ 0199h ;# 
   451  0199                     # 2895 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   452                           TXREG equ 019Ah ;# 
   453  019A                     # 2915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   454                           SP1BRG equ 019Bh ;# 
   455  019B                     # 2922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   456                           SP1BRGL equ 019Bh ;# 
   457  019B                     # 2927 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   458                           SPBRG equ 019Bh ;# 
   459  019B                     # 2931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   460                           SPBRGL equ 019Bh ;# 
   461  019B                     # 2976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   462                           SP1BRGH equ 019Ch ;# 
   463  019C                     # 2981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   464                           SPBRGH equ 019Ch ;# 
   465  019C                     # 3014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   466                           RCSTA equ 019Dh ;# 
   467  019D                     # 3076 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   468                           TXSTA equ 019Eh ;# 
   469  019E                     # 3138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   470                           BAUDCON equ 019Fh ;# 
   471  019F                     # 3190 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   472                           WPUA equ 020Ch ;# 
   473  020C                     # 3248 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   474                           SSP1BUF equ 0211h ;# 
   475  0211                     # 3253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   476                           SSPBUF equ 0211h ;# 
   477  0211                     # 3286 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   478                           SSP1ADD equ 0212h ;# 
   479  0212                     # 3291 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   480                           SSPADD equ 0212h ;# 
   481  0212                     # 3324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   482                           SSP1MSK equ 0213h ;# 
   483  0213                     # 3329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   484                           SSPMSK equ 0213h ;# 
   485  0213                     # 3362 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   486                           SSP1STAT equ 0214h ;# 
   487  0214                     # 3367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   488                           SSPSTAT equ 0214h ;# 
   489  0214                     # 3484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   490                           SSP1CON1 equ 0215h ;# 
   491  0215                     # 3489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   492                           SSPCON1 equ 0215h ;# 
   493  0215                     # 3493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   494                           SSPCON equ 0215h ;# 
   495  0215                     # 3688 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   496                           SSP1CON2 equ 0216h ;# 
   497  0216                     # 3693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   498                           SSPCON2 equ 0216h ;# 
   499  0216                     # 3810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   500                           SSP1CON3 equ 0217h ;# 
   501  0217                     # 3815 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   502                           SSPCON3 equ 0217h ;# 
   503  0217                     # 3932 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   504                           CCPR1 equ 0291h ;# 
   505  0291                     # 3939 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   506                           CCPR1L equ 0291h ;# 
   507  0291                     # 3959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   508                           CCPR1H equ 0292h ;# 
   509  0292                     # 3979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   510                           CCP1CON equ 0293h ;# 
   511  0293                     # 4061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   512                           PWM1CON equ 0294h ;# 
   513  0294                     # 4131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   514                           CCP1AS equ 0295h ;# 
   515  0295                     # 4136 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   516                           ECCP1AS equ 0295h ;# 
   517  0295                     # 4293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   518                           PSTR1CON equ 0296h ;# 
   519  0296                     # 4337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   520                           IOCAP equ 0391h ;# 
   521  0391                     # 4395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   522                           IOCAN equ 0392h ;# 
   523  0392                     # 4453 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   524                           IOCAF equ 0393h ;# 
   525  0393                     # 4511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   526                           CLKRCON equ 039Ah ;# 
   527  039A                     # 4587 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   528                           MDCON equ 039Ch ;# 
   529  039C                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   530                           MDSRC equ 039Dh ;# 
   531  039D                     # 4691 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   532                           MDCARL equ 039Eh ;# 
   533  039E                     # 4756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   534                           MDCARH equ 039Fh ;# 
   535  039F                     # 4821 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   536                           STATUS_SHAD equ 0FE4h ;# 
   537  0FE4                     # 4853 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   538                           WREG_SHAD equ 0FE5h ;# 
   539  0FE5                     # 4873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   540                           BSR_SHAD equ 0FE6h ;# 
   541  0FE6                     # 4893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   542                           PCLATH_SHAD equ 0FE7h ;# 
   543  0FE7                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   544                           FSR0L_SHAD equ 0FE8h ;# 
   545  0FE8                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   546                           FSR0H_SHAD equ 0FE9h ;# 
   547  0FE9                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   548                           FSR1L_SHAD equ 0FEAh ;# 
   549  0FEA                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   550                           FSR1H_SHAD equ 0FEBh ;# 
   551  0FEB                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   552                           STKPTR equ 0FEDh ;# 
   553  0FED                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   554                           TOSL equ 0FEEh ;# 
   555  0FEE                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1822.h"
   556                           TOSH equ 0FEFh ;# 
   557  0FEF                     	FNCALL	_main,_down
   558                           	FNCALL	_main,_test_bit
   559                           	FNCALL	_main,_up
   560                           	FNROOT	_main
   561                           	global	_www
   562                           	global	_qqq
   563                           	global	_u
   564                           	global	_PORTA
   565                           _PORTA	set	0xC
   566  000C                     	global	_RA4
   567                           _RA4	set	0x64
   568  0064                     	global	_RA5
   569                           _RA5	set	0x65
   570  0065                     	global	_RA1
   571                           _RA1	set	0x61
   572  0061                     	global	_RA0
   573                           _RA0	set	0x60
   574  0060                     	global	_TRISA
   575                           _TRISA	set	0x8C
   576  008C                     	global	_ADCON0
   577                           _ADCON0	set	0x9D
   578  009D                     	global	_OSCCON
   579                           _OSCCON	set	0x99
   580  0099                     	global	_ANSELA
   581                           _ANSELA	set	0x18C
   582  018C                     ; #config settings
   583                           global __CFG_FOSC$INTOSC
   584                           __CFG_FOSC$INTOSC equ 0x0
   585  0000                     global __CFG_WDTE$OFF
   586                           __CFG_WDTE$OFF equ 0x0
   587  0000                     global __CFG_PWRTE$OFF
   588                           __CFG_PWRTE$OFF equ 0x0
   589  0000                     global __CFG_MCLRE$OFF
   590                           __CFG_MCLRE$OFF equ 0x0
   591  0000                     global __CFG_CP$ON
   592                           __CFG_CP$ON equ 0x0
   593  0000                     global __CFG_CPD$ON
   594                           __CFG_CPD$ON equ 0x0
   595  0000                     global __CFG_BOREN$ON
   596                           __CFG_BOREN$ON equ 0x0
   597  0000                     global __CFG_CLKOUTEN$OFF
   598                           __CFG_CLKOUTEN$OFF equ 0x0
   599  0000                     global __CFG_IESO$OFF
   600                           __CFG_IESO$OFF equ 0x0
   601  0000                     global __CFG_FCMEN$OFF
   602                           __CFG_FCMEN$OFF equ 0x0
   603  0000                     global __CFG_WRT$OFF
   604                           __CFG_WRT$OFF equ 0x0
   605  0000                     global __CFG_PLLEN$OFF
   606                           __CFG_PLLEN$OFF equ 0x0
   607  0000                     global __CFG_STVREN$ON
   608                           __CFG_STVREN$ON equ 0x0
   609  0000                     global __CFG_BORV$LO
   610                           __CFG_BORV$LO equ 0x0
   611  0000                     global __CFG_LVP$OFF
   612                           __CFG_LVP$OFF equ 0x0
   613  0000                     	file	"C:\Users\User\AppData\Local\Temp\s4qo."
   614                           	line	#
   615                           psect cinit,class=CODE,delta=2
   616                           global start_initialization
   617                           start_initialization:
   618  07F7                     
   619                           global __initialization
   620                           __initialization:
   621  07F7                     psect	bssCOMMON,class=COMMON,space=1,noexec
   622                           global __pbssCOMMON
   623                           __pbssCOMMON:
   624  007A                     _www:
   625  007A                            ds      1
   626  007A                     
   627                           _qqq:
   628  007B                            ds      1
   629  007B                     
   630                           _u:
   631  007C                            ds      1
   632  007C                     
   633                           _x:
   634  007D                            ds      1
   635  007D                     
   636                           psect	bssBANK0,class=BANK0,space=1,noexec
   637                           global __pbssBANK0
   638                           __pbssBANK0:
   639  0020                     _i:
   640  0020                            ds      1
   641  0020                     
   642                           _y:
   643  0021                            ds      1
   644  0021                     
   645                           	file	"C:\Users\User\AppData\Local\Temp\s4qo."
   646                           	line	#
   647                           ; Clear objects allocated to COMMON
   648                           psect cinit,class=CODE,delta=2,merge=1
   649                           	global __pbssCOMMON
   650                           	clrf	((__pbssCOMMON)+0)&07Fh
   651  07F7  01FA               	clrf	((__pbssCOMMON)+1)&07Fh
   652  07F8  01FB               	clrf	((__pbssCOMMON)+2)&07Fh
   653  07F9  01FC               	clrf	((__pbssCOMMON)+3)&07Fh
   654  07FA  01FD               ; Clear objects allocated to BANK0
   655                           psect cinit,class=CODE,delta=2,merge=1
   656                           	global __pbssBANK0
   657                           	movlb 0	; select bank0
   658  07FB  0020               	clrf	((__pbssBANK0)+0)&07Fh
   659  07FC  01A0               	clrf	((__pbssBANK0)+1)&07Fh
   660  07FD  01A1               psect cinit,class=CODE,delta=2,merge=1
   661                           global end_of_initialization,__end_of__initialization
   662                           
   663                           ;End of C runtime variable initialization code
   664                           
   665                           end_of_initialization:
   666  07FE                     __end_of__initialization:
   667  07FE                     movlb 0
   668  07FE  0020               ljmp _main	;jump to C main() function
   669  07FF  2E92               psect	cstackCOMMON,class=COMMON,space=1,noexec
   670                           global __pcstackCOMMON
   671                           __pcstackCOMMON:
   672  0070                     ?_up:	; 1 bytes @ 0x0
   673  0070                     ??_up:	; 1 bytes @ 0x0
   674  0070                     ?_down:	; 1 bytes @ 0x0
   675  0070                     ??_down:	; 1 bytes @ 0x0
   676  0070                     ?_main:	; 1 bytes @ 0x0
   677  0070                     	global	?_test_bit
   678                           ?_test_bit:	; 2 bytes @ 0x0
   679  0070                     	global	test_bit@aValue
   680                           test_bit@aValue:	; 2 bytes @ 0x0
   681  0070                     	ds	2
   682  0070                     	global	test_bit@aNumber
   683                           test_bit@aNumber:	; 2 bytes @ 0x2
   684  0072                     	ds	2
   685  0072                     ??_test_bit:	; 1 bytes @ 0x4
   686  0074                     	ds	2
   687  0074                     ??_main:	; 1 bytes @ 0x6
   688  0076                     	ds	4
   689  0076                     ;!
   690                           ;!Data Sizes:
   691                           ;!    Strings     0
   692                           ;!    Constant    0
   693                           ;!    Data        0
   694                           ;!    BSS         6
   695                           ;!    Persistent  0
   696                           ;!    Stack       0
   697                           ;!
   698                           ;!Auto Spaces:
   699                           ;!    Space          Size  Autos    Used
   700                           ;!    COMMON           14     10      14
   701                           ;!    BANK0            80      0       2
   702                           ;!    BANK1            32      0       0
   703                           
   704                           ;!
   705                           ;!Pointer List with Targets:
   706                           ;!
   707                           ;!    None.
   708                           
   709                           
   710                           ;!
   711                           ;!Critical Paths under _main in COMMON
   712                           ;!
   713                           ;!    _main->_test_bit
   714                           ;!
   715                           ;!Critical Paths under _main in BANK0
   716                           ;!
   717                           ;!    None.
   718                           ;!
   719                           ;!Critical Paths under _main in BANK1
   720                           ;!
   721                           ;!    None.
   722                           
   723 ;;
   724 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   725 ;;
   726                           
   727                           ;!
   728                           ;!Call Graph Tables:
   729                           ;!
   730                           ;! ---------------------------------------------------------------------------------
   731                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   732                           ;! ---------------------------------------------------------------------------------
   733                           ;! (0) _main                                                 4     4      0    1260
   734                           ;!                                              6 COMMON     4     4      0
   735                           ;!                               _down
   736                           ;!                           _test_bit
   737                           ;!                                 _up
   738                           ;! ---------------------------------------------------------------------------------
   739                           ;! (1) _up                                                   2     2      0       0
   740                           ;!                                              0 COMMON     2     2      0
   741                           ;! ---------------------------------------------------------------------------------
   742                           ;! (1) _test_bit                                             6     2      4    1260
   743                           ;!                                              0 COMMON     6     2      4
   744                           ;! ---------------------------------------------------------------------------------
   745                           ;! (1) _down                                                 2     2      0       0
   746                           ;!                                              0 COMMON     2     2      0
   747                           ;! ---------------------------------------------------------------------------------
   748                           ;! Estimated maximum stack depth 1
   749                           ;! ---------------------------------------------------------------------------------
   750                           ;!
   751                           ;! Call Graph Graphs:
   752                           ;!
   753                           ;! _main (ROOT)
   754                           ;!   _down
   755                           ;!   _test_bit
   756                           ;!   _up
   757                           ;!
   758                           
   759                           ;! Address spaces:
   760                           
   761                           ;!Name               Size   Autos  Total    Cost      Usage
   762                           ;!BIGRAM              70      0       0       0        0.0%
   763                           ;!EEDATA             100      0       0       0        0.0%
   764                           ;!NULL                 0      0       0       0        0.0%
   765                           ;!CODE                 0      0       0       0        0.0%
   766                           ;!BITCOMMON            E      0       0       1        0.0%
   767                           ;!BITSFR0              0      0       0       1        0.0%
   768                           ;!SFR0                 0      0       0       1        0.0%
   769                           ;!COMMON               E      A       E       2      100.0%
   770                           ;!BITSFR1              0      0       0       2        0.0%
   771                           ;!SFR1                 0      0       0       2        0.0%
   772                           ;!BITSFR2              0      0       0       3        0.0%
   773                           ;!SFR2                 0      0       0       3        0.0%
   774                           ;!STACK                0      0       0       3        0.0%
   775                           ;!BITSFR3              0      0       0       4        0.0%
   776                           ;!SFR3                 0      0       0       4        0.0%
   777                           ;!ABS                  0      0      10       4        0.0%
   778                           ;!BITBANK0            50      0       0       5        0.0%
   779                           ;!BITSFR4              0      0       0       5        0.0%
   780                           ;!SFR4                 0      0       0       5        0.0%
   781                           ;!BANK0               50      0       2       6        2.5%
   782                           ;!BITSFR5              0      0       0       6        0.0%
   783                           ;!SFR5                 0      0       0       6        0.0%
   784                           ;!BITBANK1            20      0       0       7        0.0%
   785                           ;!BITSFR6              0      0       0       7        0.0%
   786                           ;!SFR6                 0      0       0       7        0.0%
   787                           ;!BANK1               20      0       0       8        0.0%
   788                           ;!BITSFR7              0      0       0       8        0.0%
   789                           ;!SFR7                 0      0       0       8        0.0%
   790                           ;!BITSFR8              0      0       0       9        0.0%
   791                           ;!SFR8                 0      0       0       9        0.0%
   792                           ;!DATA                 0      0      10       9        0.0%
   793                           ;!BITSFR9              0      0       0      10        0.0%
   794                           ;!SFR9                 0      0       0      10        0.0%
   795                           ;!BITSFR10             0      0       0      11        0.0%
   796                           ;!SFR10                0      0       0      11        0.0%
   797                           ;!BITSFR11             0      0       0      12        0.0%
   798                           ;!SFR11                0      0       0      12        0.0%
   799                           ;!BITSFR12             0      0       0      13        0.0%
   800                           ;!SFR12                0      0       0      13        0.0%
   801                           ;!BITSFR13             0      0       0      14        0.0%
   802                           ;!SFR13                0      0       0      14        0.0%
   803                           ;!BITSFR14             0      0       0      15        0.0%
   804                           ;!SFR14                0      0       0      15        0.0%
   805                           ;!BITSFR15             0      0       0      16        0.0%
   806                           ;!SFR15                0      0       0      16        0.0%
   807                           ;!BITSFR16             0      0       0      17        0.0%
   808                           ;!SFR16                0      0       0      17        0.0%
   809                           ;!BITSFR17             0      0       0      18        0.0%
   810                           ;!SFR17                0      0       0      18        0.0%
   811                           ;!BITSFR18             0      0       0      19        0.0%
   812                           ;!SFR18                0      0       0      19        0.0%
   813                           ;!BITSFR19             0      0       0      20        0.0%
   814                           ;!SFR19                0      0       0      20        0.0%
   815                           ;!BITSFR20             0      0       0      21        0.0%
   816                           ;!SFR20                0      0       0      21        0.0%
   817                           ;!BITSFR21             0      0       0      22        0.0%
   818                           ;!SFR21                0      0       0      22        0.0%
   819                           ;!BITSFR22             0      0       0      23        0.0%
   820                           ;!SFR22                0      0       0      23        0.0%
   821                           ;!BITSFR23             0      0       0      24        0.0%
   822                           ;!SFR23                0      0       0      24        0.0%
   823                           ;!BITSFR24             0      0       0      25        0.0%
   824                           ;!SFR24                0      0       0      25        0.0%
   825                           ;!BITSFR25             0      0       0      26        0.0%
   826                           ;!SFR25                0      0       0      26        0.0%
   827                           ;!BITSFR26             0      0       0      27        0.0%
   828                           ;!SFR26                0      0       0      27        0.0%
   829                           ;!BITSFR27             0      0       0      28        0.0%
   830                           ;!SFR27                0      0       0      28        0.0%
   831                           ;!BITSFR28             0      0       0      29        0.0%
   832                           ;!SFR28                0      0       0      29        0.0%
   833                           ;!BITSFR29             0      0       0      30        0.0%
   834                           ;!SFR29                0      0       0      30        0.0%
   835                           ;!BITSFR30             0      0       0      31        0.0%
   836                           ;!SFR30                0      0       0      31        0.0%
   837                           ;!BITSFR31             0      0       0      32        0.0%
   838                           ;!SFR31                0      0       0      32        0.0%
   839                           
   840                           	global	_main
   841                           
   842 ;; *************** function _main *****************
   843 ;; Defined at:
   844 ;;		line 59 in file "Encoder.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;		None
   847 ;; Auto vars:     Size  Location     Type
   848 ;;		None
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		wreg, status,2, status,0, pclath, cstack
   853 ;; Tracked objects:
   854 ;;		On entry : B1F/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMMON   BANK0   BANK1
   858 ;;      Params:         0       0       0
   859 ;;      Locals:         0       0       0
   860 ;;      Temps:          4       0       0
   861 ;;      Totals:         4       0       0
   862 ;;Total ram usage:        4 bytes
   863 ;; Hardware stack levels required when called:    1
   864 ;; This function calls:
   865 ;;		_down
   866 ;;		_test_bit
   867 ;;		_up
   868 ;; This function is called by:
   869 ;;		Startup code after reset
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1,group=0
   873                           	file	"Encoder.c"
   874                           	line	59
   875                           global __pmaintext
   876                           __pmaintext:	;psect for function _main
   877  0692                     psect	maintext
   878                           	file	"Encoder.c"
   879                           	line	59
   880                           	global	__size_of_main
   881                           	__size_of_main	equ	__end_of_main-_main
   882  0165                     	
   883                           _main:	
   884  0692                     ;incstack = 0
   885                           	opt	stack 15
   886                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   887                           	line	60
   888                           	
   889                           l682:	
   890  0692                     ;Encoder.c: 60:                 if (RA5 == (test_bit(qqq, 0))) {
   891                           	movlw	low(0F0h)
   892  0692  30F0               	movlb 1	; select bank1
   893  0693  0021               	movwf	(153)^080h	;volatile
   894  0694  0099               	line	61
   895                           	
   896                           l684:	
   897  0695                     ;Encoder.c: 61: 
   898                           	movlb 3	; select bank3
   899  0695  0023               	clrf	(396)^0180h	;volatile
   900  0696  018C               	line	62
   901                           	
   902                           l686:	
   903  0697                     ;Encoder.c: 62:                 } else {
   904                           	movlb 1	; select bank1
   905  0697  0021               	clrf	(157)^080h	;volatile
   906  0698  019D               	line	63
   907                           ;Encoder.c: 63:                     u = 1000;
   908                           	movlw	low(03h)
   909  0699  3003               	movlb 0	; select bank0
   910  069A  0020               	movwf	(12)	;volatile
   911  069B  008C               	line	64
   912                           ;Encoder.c: 64:                 }
   913                           	movlw	low(030h)
   914  069C  3030               	movlb 1	; select bank1
   915  069D  0021               	movwf	(140)^080h	;volatile
   916  069E  008C               	goto	l688
   917  069F  2EA0               	line	65
   918                           ;Encoder.c: 65:             }
   919                           	
   920                           l46:	
   921  06A0                     	line	68
   922                           	
   923                           l688:	
   924  06A0                     ;Encoder.c: 68:             down();
   925                           	movf	(_qqq),w
   926  06A0  087B               	movwf	(??_main+0)+0
   927  06A1  00F6               	clrf	(??_main+0)+0+1
   928  06A2  01F7               	movf	0+(??_main+0)+0,w
   929  06A3  0876               	movwf	(test_bit@aValue)
   930  06A4  00F0               	movf	1+(??_main+0)+0,w
   931  06A5  0877               	movwf	(test_bit@aValue+1)
   932  06A6  00F1               	movlw	0
   933  06A7  3000               	movwf	(test_bit@aNumber)
   934  06A8  00F2               	movwf	(test_bit@aNumber+1)
   935  06A9  00F3               	fcall	_test_bit
   936  06AA  3186  2680  3186   	clrc
   937  06AD  1003               	movlb 0	; select bank0
   938  06AE  0020               	btfsc	(101/8),(101)&7	;volatile
   939  06AF  1A8C               	setc
   940  06B0  1403               	movlw	0
   941  06B1  3000               	addwfc	wreg,w
   942  06B2  3D09               	movwf	(??_main+2)+0
   943  06B3  00F8               	clrf	(??_main+2)+0+1
   944  06B4  01F9               	movf	(1+(?_test_bit)),w
   945  06B5  0871               	xorwf	1+(??_main+2)+0,w
   946  06B6  0679               	skipz
   947  06B7  1D03               	goto	u135
   948  06B8  2EBB               	movf	(0+(?_test_bit)),w
   949  06B9  0870               	xorwf	0+(??_main+2)+0,w
   950  06BA  0678               u135:
   951  06BB                     
   952                           	skipz
   953  06BB  1D03               	goto	u131
   954  06BC  2EBE               	goto	u130
   955  06BD  2EBF               u131:
   956  06BE                     	goto	l47
   957  06BE  2EFD               u130:
   958  06BF                     	line	69
   959                           	
   960                           l690:	
   961  06BF                     ;Encoder.c: 69:         }
   962                           	clrf	(_u)
   963  06BF  01FC               	
   964                           l692:	
   965  06C0                     	movlw	low(09h)
   966  06C0  3009               	subwf	(_u),w
   967  06C1  027C               	skipc
   968  06C2  1C03               	goto	u141
   969  06C3  2EC5               	goto	u140
   970  06C4  2EC6               u141:
   971  06C5                     	goto	l696
   972  06C5  2EC8               u140:
   973  06C6                     	goto	l49
   974  06C6  2EF8               	
   975                           l694:	
   976  06C7                     	goto	l49
   977  06C7  2EF8               	
   978                           l48:	
   979  06C8                     	line	70
   980                           	
   981                           l696:	
   982  06C8                     ;Encoder.c: 70:         if (RA4 == (test_bit(www, 0))) {
   983                           	movf	(_qqq),w
   984  06C8  087B               	movwf	(??_main+0)+0
   985  06C9  00F6               	clrf	(??_main+0)+0+1
   986  06CA  01F7               	movf	0+(??_main+0)+0,w
   987  06CB  0876               	movwf	(test_bit@aValue)
   988  06CC  00F0               	movf	1+(??_main+0)+0,w
   989  06CD  0877               	movwf	(test_bit@aValue+1)
   990  06CE  00F1               	movlw	0
   991  06CF  3000               	movwf	(test_bit@aNumber)
   992  06D0  00F2               	movwf	(test_bit@aNumber+1)
   993  06D1  00F3               	fcall	_test_bit
   994  06D2  3186  2680  3186   	clrc
   995  06D5  1003               	movlb 0	; select bank0
   996  06D6  0020               	btfsc	(100/8),(100)&7	;volatile
   997  06D7  1A0C               	setc
   998  06D8  1403               	movlw	0
   999  06D9  3000               	addwfc	wreg,w
  1000  06DA  3D09               	movwf	(??_main+2)+0
  1001  06DB  00F8               	clrf	(??_main+2)+0+1
  1002  06DC  01F9               	movf	(1+(?_test_bit)),w
  1003  06DD  0871               	xorwf	1+(??_main+2)+0,w
  1004  06DE  0679               	skipz
  1005  06DF  1D03               	goto	u155
  1006  06E0  2EE3               	movf	(0+(?_test_bit)),w
  1007  06E1  0870               	xorwf	0+(??_main+2)+0,w
  1008  06E2  0678               u155:
  1009  06E3                     
  1010                           	skipz
  1011  06E3  1D03               	goto	u151
  1012  06E4  2EE6               	goto	u150
  1013  06E5  2EE7               u151:
  1014  06E6                     	goto	l700
  1015  06E6  2EE9               u150:
  1016  06E7                     	goto	l702
  1017  06E7  2EEE               	line	72
  1018                           	
  1019                           l698:	
  1020  06E8                     ;Encoder.c: 72:                 if (RA5 == (test_bit(www, 0))) {
  1021                           	goto	l702
  1022  06E8  2EEE               	
  1023                           l50:	
  1024  06E9                     	line	73
  1025                           	
  1026                           l700:	
  1027  06E9                     ;Encoder.c: 73: 
  1028                           	movlw	low(0Ah)
  1029  06E9  300A               	movwf	(??_main+0)+0
  1030  06EA  00F6               	movf	(??_main+0)+0,w
  1031  06EB  0876               	movwf	(_u)
  1032  06EC  00FC               	goto	l702
  1033  06ED  2EEE               	line	74
  1034                           ;Encoder.c: 74:                 } else {
  1035                           	
  1036                           l51:	
  1037  06EE                     	line	75
  1038                           	
  1039                           l702:	
  1040  06EE                     ;Encoder.c: 75:                     u = 1000;
  1041                           	movlw	low(01h)
  1042  06EE  3001               	movwf	(??_main+0)+0
  1043  06EF  00F6               	movf	(??_main+0)+0,w
  1044  06F0  0876               	addwf	(_u),f
  1045  06F1  07FC               	
  1046                           l704:	
  1047  06F2                     	movlw	low(09h)
  1048  06F2  3009               	subwf	(_u),w
  1049  06F3  027C               	skipc
  1050  06F4  1C03               	goto	u161
  1051  06F5  2EF7               	goto	u160
  1052  06F6  2EF8               u161:
  1053  06F7                     	goto	l696
  1054  06F7  2EC8               u160:
  1055  06F8                     	
  1056                           l49:	
  1057  06F8                     	line	76
  1058                           ;Encoder.c: 76:                 }
  1059                           	comf	(_qqq),f
  1060  06F8  09FB               	line	77
  1061                           ;Encoder.c: 77:             }
  1062                           	comf	(_www),f
  1063  06F9  09FA               	line	78
  1064                           	
  1065                           l706:	
  1066  06FA                     ;Encoder.c: 78:             qqq = ~qqq;
  1067                           	fcall	_up
  1068  06FA  3186  266F  3186   	line	79
  1069                           ;Encoder.c: 79:             www = ~www;
  1070                           	
  1071                           l47:	
  1072  06FD                     	line	80
  1073                           ;Encoder.c: 80:             down();
  1074                           	movf	(_www),w
  1075  06FD  087A               	movwf	(??_main+0)+0
  1076  06FE  00F6               	clrf	(??_main+0)+0+1
  1077  06FF  01F7               	movf	0+(??_main+0)+0,w
  1078  0700  0876               	movwf	(test_bit@aValue)
  1079  0701  00F0               	movf	1+(??_main+0)+0,w
  1080  0702  0877               	movwf	(test_bit@aValue+1)
  1081  0703  00F1               	movlw	0
  1082  0704  3000               	movwf	(test_bit@aNumber)
  1083  0705  00F2               	movwf	(test_bit@aNumber+1)
  1084  0706  00F3               	fcall	_test_bit
  1085  0707  3186  2680  3186   	clrc
  1086  070A  1003               	movlb 0	; select bank0
  1087  070B  0020               	btfsc	(101/8),(101)&7	;volatile
  1088  070C  1A8C               	setc
  1089  070D  1403               	movlw	0
  1090  070E  3000               	addwfc	wreg,w
  1091  070F  3D09               	movwf	(??_main+2)+0
  1092  0710  00F8               	clrf	(??_main+2)+0+1
  1093  0711  01F9               	movf	(1+(?_test_bit)),w
  1094  0712  0871               	xorwf	1+(??_main+2)+0,w
  1095  0713  0679               	skipz
  1096  0714  1D03               	goto	u175
  1097  0715  2F18               	movf	(0+(?_test_bit)),w
  1098  0716  0870               	xorwf	0+(??_main+2)+0,w
  1099  0717  0678               u175:
  1100  0718                     
  1101                           	skipz
  1102  0718  1D03               	goto	u171
  1103  0719  2F1B               	goto	u170
  1104  071A  2F1C               u171:
  1105  071B                     	goto	l52
  1106  071B  2F4F               u170:
  1107  071C                     	line	81
  1108                           	
  1109                           l708:	
  1110  071C                     ;Encoder.c: 81:         }
  1111                           	clrf	(_u)
  1112  071C  01FC               	goto	l712
  1113  071D  2F1F               	
  1114                           l710:	
  1115  071E                     	goto	l54
  1116  071E  2F4A               	
  1117                           l53:	
  1118  071F                     	line	82
  1119                           	
  1120                           l712:	
  1121  071F                     ;Encoder.c: 82:     }
  1122                           	movf	(_www),w
  1123  071F  087A               	movwf	(??_main+0)+0
  1124  0720  00F6               	clrf	(??_main+0)+0+1
  1125  0721  01F7               	movf	0+(??_main+0)+0,w
  1126  0722  0876               	movwf	(test_bit@aValue)
  1127  0723  00F0               	movf	1+(??_main+0)+0,w
  1128  0724  0877               	movwf	(test_bit@aValue+1)
  1129  0725  00F1               	movlw	0
  1130  0726  3000               	movwf	(test_bit@aNumber)
  1131  0727  00F2               	movwf	(test_bit@aNumber+1)
  1132  0728  00F3               	fcall	_test_bit
  1133  0729  3186  2680  3186   	clrc
  1134  072C  1003               	movlb 0	; select bank0
  1135  072D  0020               	btfsc	(100/8),(100)&7	;volatile
  1136  072E  1A0C               	setc
  1137  072F  1403               	movlw	0
  1138  0730  3000               	addwfc	wreg,w
  1139  0731  3D09               	movwf	(??_main+2)+0
  1140  0732  00F8               	clrf	(??_main+2)+0+1
  1141  0733  01F9               	movf	(1+(?_test_bit)),w
  1142  0734  0871               	xorwf	1+(??_main+2)+0,w
  1143  0735  0679               	skipz
  1144  0736  1D03               	goto	u185
  1145  0737  2F3A               	movf	(0+(?_test_bit)),w
  1146  0738  0870               	xorwf	0+(??_main+2)+0,w
  1147  0739  0678               u185:
  1148  073A                     
  1149                           	skipz
  1150  073A  1D03               	goto	u181
  1151  073B  2F3D               	goto	u180
  1152  073C  2F3E               u181:
  1153  073D                     	goto	l716
  1154  073D  2F40               u180:
  1155  073E                     	goto	l718
  1156  073E  2F45               	line	84
  1157                           	
  1158                           l714:	
  1159  073F                     ;Encoder.c: 84: 
  1160                           	goto	l718
  1161  073F  2F45               	
  1162                           l55:	
  1163  0740                     	line	85
  1164                           	
  1165                           l716:	
  1166  0740                     ;Encoder.c: 85: 
  1167                           	movlw	low(0E8h)
  1168  0740  30E8               	movwf	(??_main+0)+0
  1169  0741  00F6               	movf	(??_main+0)+0,w
  1170  0742  0876               	movwf	(_u)
  1171  0743  00FC               	goto	l718
  1172  0744  2F45               	line	86
  1173                           ;Encoder.c: 86: }
  1174                           	
  1175                           l56:	
  1176  0745                     	line	87
  1177                           	
  1178                           l718:	
  1179  0745                     	movlw	low(01h)
  1180  0745  3001               	movwf	(??_main+0)+0
  1181  0746  00F6               	movf	(??_main+0)+0,w
  1182  0747  0876               	addwf	(_u),f
  1183  0748  07FC               	goto	l712
  1184  0749  2F1F               	
  1185                           l54:	
  1186  074A                     	line	88
  1187                           	comf	(_qqq),f
  1188  074A  09FB               	line	89
  1189                           	comf	(_www),f
  1190  074B  09FA               	line	90
  1191                           	
  1192                           l720:	
  1193  074C                     	fcall	_up
  1194  074C  3186  266F  3186   	line	91
  1195                           	
  1196                           l52:	
  1197  074F                     	line	92
  1198                           	movf	(_qqq),w
  1199  074F  087B               	movwf	(??_main+0)+0
  1200  0750  00F6               	clrf	(??_main+0)+0+1
  1201  0751  01F7               	movf	0+(??_main+0)+0,w
  1202  0752  0876               	movwf	(test_bit@aValue)
  1203  0753  00F0               	movf	1+(??_main+0)+0,w
  1204  0754  0877               	movwf	(test_bit@aValue+1)
  1205  0755  00F1               	movlw	0
  1206  0756  3000               	movwf	(test_bit@aNumber)
  1207  0757  00F2               	movwf	(test_bit@aNumber+1)
  1208  0758  00F3               	fcall	_test_bit
  1209  0759  3186  2680  3186   	clrc
  1210  075C  1003               	movlb 0	; select bank0
  1211  075D  0020               	btfsc	(100/8),(100)&7	;volatile
  1212  075E  1A0C               	setc
  1213  075F  1403               	movlw	0
  1214  0760  3000               	addwfc	wreg,w
  1215  0761  3D09               	movwf	(??_main+2)+0
  1216  0762  00F8               	clrf	(??_main+2)+0+1
  1217  0763  01F9               	movf	(1+(?_test_bit)),w
  1218  0764  0871               	xorwf	1+(??_main+2)+0,w
  1219  0765  0679               	skipz
  1220  0766  1D03               	goto	u195
  1221  0767  2F6A               	movf	(0+(?_test_bit)),w
  1222  0768  0870               	xorwf	0+(??_main+2)+0,w
  1223  0769  0678               u195:
  1224  076A                     
  1225                           	skipz
  1226  076A  1D03               	goto	u191
  1227  076B  2F6D               	goto	u190
  1228  076C  2F6E               u191:
  1229  076D                     	goto	l57
  1230  076D  2FA1               u190:
  1231  076E                     	line	93
  1232                           	
  1233                           l722:	
  1234  076E                     	clrf	(_u)
  1235  076E  01FC               	goto	l726
  1236  076F  2F71               	
  1237                           l724:	
  1238  0770                     	goto	l59
  1239  0770  2F9C               	
  1240                           l58:	
  1241  0771                     	line	94
  1242                           	
  1243                           l726:	
  1244  0771                     	movf	(_qqq),w
  1245  0771  087B               	movwf	(??_main+0)+0
  1246  0772  00F6               	clrf	(??_main+0)+0+1
  1247  0773  01F7               	movf	0+(??_main+0)+0,w
  1248  0774  0876               	movwf	(test_bit@aValue)
  1249  0775  00F0               	movf	1+(??_main+0)+0,w
  1250  0776  0877               	movwf	(test_bit@aValue+1)
  1251  0777  00F1               	movlw	0
  1252  0778  3000               	movwf	(test_bit@aNumber)
  1253  0779  00F2               	movwf	(test_bit@aNumber+1)
  1254  077A  00F3               	fcall	_test_bit
  1255  077B  3186  2680  3186   	clrc
  1256  077E  1003               	movlb 0	; select bank0
  1257  077F  0020               	btfsc	(101/8),(101)&7	;volatile
  1258  0780  1A8C               	setc
  1259  0781  1403               	movlw	0
  1260  0782  3000               	addwfc	wreg,w
  1261  0783  3D09               	movwf	(??_main+2)+0
  1262  0784  00F8               	clrf	(??_main+2)+0+1
  1263  0785  01F9               	movf	(1+(?_test_bit)),w
  1264  0786  0871               	xorwf	1+(??_main+2)+0,w
  1265  0787  0679               	skipz
  1266  0788  1D03               	goto	u205
  1267  0789  2F8C               	movf	(0+(?_test_bit)),w
  1268  078A  0870               	xorwf	0+(??_main+2)+0,w
  1269  078B  0678               u205:
  1270  078C                     
  1271                           	skipz
  1272  078C  1D03               	goto	u201
  1273  078D  2F8F               	goto	u200
  1274  078E  2F90               u201:
  1275  078F                     	goto	l730
  1276  078F  2F92               u200:
  1277  0790                     	goto	l732
  1278  0790  2F97               	line	96
  1279                           	
  1280                           l728:	
  1281  0791                     	goto	l732
  1282  0791  2F97               	
  1283                           l60:	
  1284  0792                     	line	97
  1285                           	
  1286                           l730:	
  1287  0792                     	movlw	low(0E8h)
  1288  0792  30E8               	movwf	(??_main+0)+0
  1289  0793  00F6               	movf	(??_main+0)+0,w
  1290  0794  0876               	movwf	(_u)
  1291  0795  00FC               	goto	l732
  1292  0796  2F97               	line	98
  1293                           	
  1294                           l61:	
  1295  0797                     	line	99
  1296                           	
  1297                           l732:	
  1298  0797                     	movlw	low(01h)
  1299  0797  3001               	movwf	(??_main+0)+0
  1300  0798  00F6               	movf	(??_main+0)+0,w
  1301  0799  0876               	addwf	(_u),f
  1302  079A  07FC               	goto	l726
  1303  079B  2F71               	
  1304                           l59:	
  1305  079C                     	line	100
  1306                           	comf	(_qqq),f
  1307  079C  09FB               	line	101
  1308                           	comf	(_www),f
  1309  079D  09FA               	line	102
  1310                           	
  1311                           l734:	
  1312  079E                     	fcall	_down
  1313  079E  3186  265E  3186   	line	103
  1314                           	
  1315                           l57:	
  1316  07A1                     	line	104
  1317                           	movf	(_www),w
  1318  07A1  087A               	movwf	(??_main+0)+0
  1319  07A2  00F6               	clrf	(??_main+0)+0+1
  1320  07A3  01F7               	movf	0+(??_main+0)+0,w
  1321  07A4  0876               	movwf	(test_bit@aValue)
  1322  07A5  00F0               	movf	1+(??_main+0)+0,w
  1323  07A6  0877               	movwf	(test_bit@aValue+1)
  1324  07A7  00F1               	movlw	0
  1325  07A8  3000               	movwf	(test_bit@aNumber)
  1326  07A9  00F2               	movwf	(test_bit@aNumber+1)
  1327  07AA  00F3               	fcall	_test_bit
  1328  07AB  3186  2680  3186   	clrc
  1329  07AE  1003               	movlb 0	; select bank0
  1330  07AF  0020               	btfsc	(100/8),(100)&7	;volatile
  1331  07B0  1A0C               	setc
  1332  07B1  1403               	movlw	0
  1333  07B2  3000               	addwfc	wreg,w
  1334  07B3  3D09               	movwf	(??_main+2)+0
  1335  07B4  00F8               	clrf	(??_main+2)+0+1
  1336  07B5  01F9               	movf	(1+(?_test_bit)),w
  1337  07B6  0871               	xorwf	1+(??_main+2)+0,w
  1338  07B7  0679               	skipz
  1339  07B8  1D03               	goto	u215
  1340  07B9  2FBC               	movf	(0+(?_test_bit)),w
  1341  07BA  0870               	xorwf	0+(??_main+2)+0,w
  1342  07BB  0678               u215:
  1343  07BC                     
  1344                           	skipz
  1345  07BC  1D03               	goto	u211
  1346  07BD  2FBF               	goto	u210
  1347  07BE  2FC0               u211:
  1348  07BF                     	goto	l688
  1349  07BF  2EA0               u210:
  1350  07C0                     	line	105
  1351                           	
  1352                           l736:	
  1353  07C0                     	clrf	(_u)
  1354  07C0  01FC               	goto	l740
  1355  07C1  2FC3               	
  1356                           l738:	
  1357  07C2                     	goto	l64
  1358  07C2  2FEE               	
  1359                           l63:	
  1360  07C3                     	line	106
  1361                           	
  1362                           l740:	
  1363  07C3                     	movf	(_www),w
  1364  07C3  087A               	movwf	(??_main+0)+0
  1365  07C4  00F6               	clrf	(??_main+0)+0+1
  1366  07C5  01F7               	movf	0+(??_main+0)+0,w
  1367  07C6  0876               	movwf	(test_bit@aValue)
  1368  07C7  00F0               	movf	1+(??_main+0)+0,w
  1369  07C8  0877               	movwf	(test_bit@aValue+1)
  1370  07C9  00F1               	movlw	0
  1371  07CA  3000               	movwf	(test_bit@aNumber)
  1372  07CB  00F2               	movwf	(test_bit@aNumber+1)
  1373  07CC  00F3               	fcall	_test_bit
  1374  07CD  3186  2680  3186   	clrc
  1375  07D0  1003               	movlb 0	; select bank0
  1376  07D1  0020               	btfsc	(101/8),(101)&7	;volatile
  1377  07D2  1A8C               	setc
  1378  07D3  1403               	movlw	0
  1379  07D4  3000               	addwfc	wreg,w
  1380  07D5  3D09               	movwf	(??_main+2)+0
  1381  07D6  00F8               	clrf	(??_main+2)+0+1
  1382  07D7  01F9               	movf	(1+(?_test_bit)),w
  1383  07D8  0871               	xorwf	1+(??_main+2)+0,w
  1384  07D9  0679               	skipz
  1385  07DA  1D03               	goto	u225
  1386  07DB  2FDE               	movf	(0+(?_test_bit)),w
  1387  07DC  0870               	xorwf	0+(??_main+2)+0,w
  1388  07DD  0678               u225:
  1389  07DE                     
  1390                           	skipz
  1391  07DE  1D03               	goto	u221
  1392  07DF  2FE1               	goto	u220
  1393  07E0  2FE2               u221:
  1394  07E1                     	goto	l744
  1395  07E1  2FE4               u220:
  1396  07E2                     	goto	l746
  1397  07E2  2FE9               	line	108
  1398                           	
  1399                           l742:	
  1400  07E3                     	goto	l746
  1401  07E3  2FE9               	
  1402                           l65:	
  1403  07E4                     	line	109
  1404                           	
  1405                           l744:	
  1406  07E4                     	movlw	low(0E8h)
  1407  07E4  30E8               	movwf	(??_main+0)+0
  1408  07E5  00F6               	movf	(??_main+0)+0,w
  1409  07E6  0876               	movwf	(_u)
  1410  07E7  00FC               	goto	l746
  1411  07E8  2FE9               	line	110
  1412                           	
  1413                           l66:	
  1414  07E9                     	line	111
  1415                           	
  1416                           l746:	
  1417  07E9                     	movlw	low(01h)
  1418  07E9  3001               	movwf	(??_main+0)+0
  1419  07EA  00F6               	movf	(??_main+0)+0,w
  1420  07EB  0876               	addwf	(_u),f
  1421  07EC  07FC               	goto	l740
  1422  07ED  2FC3               	
  1423                           l64:	
  1424  07EE                     	line	112
  1425                           	comf	(_qqq),f
  1426  07EE  09FB               	line	113
  1427                           	comf	(_www),f
  1428  07EF  09FA               	line	114
  1429                           	
  1430                           l748:	
  1431  07F0                     	fcall	_down
  1432  07F0  3186  265E  3186   	goto	l688
  1433  07F3  2EA0               	line	115
  1434                           	
  1435                           l62:	
  1436  07F4                     	goto	l688
  1437  07F4  2EA0               	line	116
  1438                           	
  1439                           l67:	
  1440  07F5                     	goto	l688
  1441  07F5  2EA0               	
  1442                           l68:	
  1443  07F6                     	line	120
  1444                           	
  1445                           l69:	
  1446  07F6                     	global	start
  1447                           	ljmp	start
  1448  07F6  2801               	opt stack 0
  1449                           GLOBAL	__end_of_main
  1450                           	__end_of_main:
  1451  07F7                     	signat	_main,89
  1452                           	global	_up
  1453                           
  1454 ;; *************** function _up *****************
  1455 ;; Defined at:
  1456 ;;		line 47 in file "Encoder.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;		None
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;		None
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  1    wreg      void 
  1463 ;; Registers used:
  1464 ;;		wreg
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMMON   BANK0   BANK1
  1470 ;;      Params:         0       0       0
  1471 ;;      Locals:         0       0       0
  1472 ;;      Temps:          2       0       0
  1473 ;;      Totals:         2       0       0
  1474 ;;Total ram usage:        2 bytes
  1475 ;; Hardware stack levels used:    1
  1476 ;; This function calls:
  1477 ;;		Nothing
  1478 ;; This function is called by:
  1479 ;;		_main
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1483                           	line	47
  1484                           global __ptext1
  1485                           __ptext1:	;psect for function _up
  1486  066F                     psect	text1
  1487                           	file	"Encoder.c"
  1488                           	line	47
  1489                           	global	__size_of_up
  1490                           	__size_of_up	equ	__end_of_up-_up
  1491  0011                     	
  1492                           _up:	
  1493  066F                     ;incstack = 0
  1494                           	opt	stack 15
  1495                           ; Regs used in _up: [wreg]
  1496                           	line	48
  1497                           	
  1498                           l598:	
  1499  066F                     ;Encoder.c: 48:                 if (RA4 == (test_bit(www, 0))) {
  1500                           	movlb 0	; select bank0
  1501  066F  0020               	bcf	(96/8),(96)&7	;volatile
  1502  0670  100C               	line	49
  1503                           	
  1504                           l600:	
  1505  0671                     ;Encoder.c: 49: 
  1506                           	opt asmopt_push
  1507                           opt asmopt_off
  1508                           movlw  5
  1509  0671  3005               movwf	((??_up+0)+0+1),f
  1510  0672  00F1               movlw	15
  1511  0673  300F               movwf	((??_up+0)+0),f
  1512  0674  00F0               	movlw	241
  1513  0675  30F1               u237:
  1514  0676                     decfsz	wreg
  1515  0676  0B89               	goto	u237
  1516  0677  2E76               	decfsz	((??_up+0)+0),f
  1517  0678  0BF0               	goto	u237
  1518  0679  2E76               	decfsz	((??_up+0)+0+1),f
  1519  067A  0BF1               	goto	u237
  1520  067B  2E76               	nop
  1521  067C  0000               opt asmopt_pop
  1522                           
  1523                           	line	50
  1524                           	
  1525                           l602:	
  1526  067D                     ;Encoder.c: 50:                 } else {
  1527                           	movlb 0	; select bank0
  1528  067D  0020               	bsf	(96/8),(96)&7	;volatile
  1529  067E  140C               	line	51
  1530                           	
  1531                           l38:	
  1532  067F                     	return
  1533  067F  0008               	opt stack 0
  1534                           GLOBAL	__end_of_up
  1535                           	__end_of_up:
  1536  0680                     	signat	_up,89
  1537                           	global	_test_bit
  1538                           
  1539 ;; *************** function _test_bit *****************
  1540 ;; Defined at:
  1541 ;;		line 43 in file "Encoder.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  aValue          2    0[COMMON] unsigned int 
  1544 ;;  aNumber         2    2[COMMON] unsigned int 
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;		None
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  2    0[COMMON] unsigned int 
  1549 ;; Registers used:
  1550 ;;		wreg, status,2, status,0
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMMON   BANK0   BANK1
  1556 ;;      Params:         4       0       0
  1557 ;;      Locals:         0       0       0
  1558 ;;      Temps:          2       0       0
  1559 ;;      Totals:         6       0       0
  1560 ;;Total ram usage:        6 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; This function calls:
  1563 ;;		Nothing
  1564 ;; This function is called by:
  1565 ;;		_main
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1569                           	line	43
  1570                           global __ptext2
  1571                           __ptext2:	;psect for function _test_bit
  1572  0680                     psect	text2
  1573                           	file	"Encoder.c"
  1574                           	line	43
  1575                           	global	__size_of_test_bit
  1576                           	__size_of_test_bit	equ	__end_of_test_bit-_test_bit
  1577  0012                     	
  1578                           _test_bit:	
  1579  0680                     ;incstack = 0
  1580                           	opt	stack 15
  1581                           ; Regs used in _test_bit: [wreg+status,2+status,0]
  1582                           	line	44
  1583                           	
  1584                           l678:	
  1585  0680                     ;Encoder.c: 44:             up();
  1586                           	movlw	01h
  1587  0680  3001               	movwf	(??_test_bit+0)+0
  1588  0681  00F4               	movlw	0
  1589  0682  3000               	movwf	(??_test_bit+0)+0+1
  1590  0683  00F5               	incf	(test_bit@aNumber),w
  1591  0684  0A72               	goto	u124
  1592  0685  2E88               u125:
  1593  0686                     	lslf	(??_test_bit+0)+0,f
  1594  0686  35F4               	rlf	(??_test_bit+0)+1,f
  1595  0687  0DF5               u124:
  1596  0688                     	decfsz	wreg,f
  1597  0688  0B89               	goto	u125
  1598  0689  2E86               	movf	(test_bit@aValue),w
  1599  068A  0870               	andwf	0+(??_test_bit+0)+0,w
  1600  068B  0574               	movwf	(?_test_bit)
  1601  068C  00F0               	movf	(test_bit@aValue+1),w
  1602  068D  0871               	andwf	1+(??_test_bit+0)+0,w
  1603  068E  0575               	movwf	1+(?_test_bit)
  1604  068F  00F1               	goto	l35
  1605  0690  2E91               	
  1606                           l680:	
  1607  0691                     	line	45
  1608                           	
  1609                           l35:	
  1610  0691                     	return
  1611  0691  0008               	opt stack 0
  1612                           GLOBAL	__end_of_test_bit
  1613                           	__end_of_test_bit:
  1614  0692                     	signat	_test_bit,8314
  1615                           	global	_down
  1616                           
  1617 ;; *************** function _down *****************
  1618 ;; Defined at:
  1619 ;;		line 53 in file "Encoder.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;		None
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;		None
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      void 
  1626 ;; Registers used:
  1627 ;;		wreg
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMMON   BANK0   BANK1
  1633 ;;      Params:         0       0       0
  1634 ;;      Locals:         0       0       0
  1635 ;;      Temps:          2       0       0
  1636 ;;      Totals:         2       0       0
  1637 ;;Total ram usage:        2 bytes
  1638 ;; Hardware stack levels used:    1
  1639 ;; This function calls:
  1640 ;;		Nothing
  1641 ;; This function is called by:
  1642 ;;		_main
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1646                           	line	53
  1647                           global __ptext3
  1648                           __ptext3:	;psect for function _down
  1649  065E                     psect	text3
  1650                           	file	"Encoder.c"
  1651                           	line	53
  1652                           	global	__size_of_down
  1653                           	__size_of_down	equ	__end_of_down-_down
  1654  0011                     	
  1655                           _down:	
  1656  065E                     ;incstack = 0
  1657                           	opt	stack 15
  1658                           ; Regs used in _down: [wreg]
  1659                           	line	54
  1660                           	
  1661                           l604:	
  1662  065E                     ;Encoder.c: 54:             qqq = ~qqq;
  1663                           	movlb 0	; select bank0
  1664  065E  0020               	bcf	(97/8),(97)&7	;volatile
  1665  065F  108C               	line	55
  1666                           	
  1667                           l606:	
  1668  0660                     ;Encoder.c: 55:             www = ~www;
  1669                           	opt asmopt_push
  1670                           opt asmopt_off
  1671                           movlw  5
  1672  0660  3005               movwf	((??_down+0)+0+1),f
  1673  0661  00F1               movlw	15
  1674  0662  300F               movwf	((??_down+0)+0),f
  1675  0663  00F0               	movlw	241
  1676  0664  30F1               u247:
  1677  0665                     decfsz	wreg
  1678  0665  0B89               	goto	u247
  1679  0666  2E65               	decfsz	((??_down+0)+0),f
  1680  0667  0BF0               	goto	u247
  1681  0668  2E65               	decfsz	((??_down+0)+0+1),f
  1682  0669  0BF1               	goto	u247
  1683  066A  2E65               	nop
  1684  066B  0000               opt asmopt_pop
  1685                           
  1686                           	line	56
  1687                           	
  1688                           l608:	
  1689  066C                     ;Encoder.c: 56:             up();
  1690                           	movlb 0	; select bank0
  1691  066C  0020               	bsf	(97/8),(97)&7	;volatile
  1692  066D  148C               	line	57
  1693                           	
  1694                           l41:	
  1695  066E                     	return
  1696  066E  0008               	opt stack 0
  1697                           GLOBAL	__end_of_down
  1698                           	__end_of_down:
  1699  066F                     	signat	_down,89
  1700                           global	___latbits
  1701                           ___latbits	equ	0
  1702  0000                     	global	btemp
  1703                           	btemp set 07Eh
  1704  007E                     
  1705                           	DABS	1,126,2	;btemp
  1706                           	global	wtemp0
  1707                           	wtemp0 set btemp+0
  1708  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80      0       2
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_test_bit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1260
                                              6 COMMON     4     4      0
                               _down
                           _test_bit
                                 _up
 ---------------------------------------------------------------------------------
 (1) _up                                                   2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _test_bit                                             6     2      4    1260
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _down                                                 2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _down
   _test_bit
   _up

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      10       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       2       6        2.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      10       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Mar 18 21:33:25 2021

             __CFG_CP$ON 0000                        _i 0020                        _u 007C  
                      _x 007D                        _y 0021                       l41 066E  
                     l50 06E9                       l35 0691                       l51 06EE  
                     l60 0792                       l52 074F                       l61 0797  
                     l53 071F                       l38 067F                       l62 07F4  
                     l54 074A                       l46 06A0                       l63 07C3  
                     l55 0740                       l47 06FD                       l64 07EE  
                     l56 0745                       l48 06C8                       l65 07E4  
                     l57 07A1                       l49 06F8                       l66 07E9  
                     l58 0771                       l67 07F5                       l59 079C  
                     l68 07F6                       l69 07F6              __CFG_CPD$ON 0000  
                     _up 066F                      l600 0671                      l602 067D  
                    l604 065E                      l700 06E9                      l606 0660  
                    l710 071E                      l702 06EE                      ?_up 0070  
                    l608 066C                      l720 074C                      l712 071F  
                    l704 06F2                      l730 0792                      l722 076E  
                    l714 073F                      l706 06FA                      l740 07C3  
                    l732 0797                      l724 0770                      l716 0740  
                    l708 071C                      l742 07E3                      l734 079E  
                    l726 0771                      l718 0745                      l680 0691  
                    l744 07E4                      l736 07C0                      l728 0791  
                    l746 07E9                      l738 07C2                      l690 06BF  
                    l682 0692                      l748 07F0                      l692 06C0  
                    l684 0695                      l678 0680                      l598 066F  
                    l694 06C7                      l686 0697                      l696 06C8  
                    l688 06A0                      l698 06E8                      _RA0 0060  
                    _RA1 0061                      _RA4 0064                      _RA5 0065  
                    u200 0790                      u201 078F                      u210 07C0  
                    u130 06BF                      u211 07BF                      u131 06BE  
                    u124 0688                      u220 07E2                      u140 06C6  
                    u125 0686                      u221 07E1                      u205 078C  
                    u141 06C5                      u150 06E7                      u215 07BC  
                    u151 06E6                      u135 06BB                      u160 06F8  
                    u225 07DE                      u161 06F7                      u170 071C  
                    u171 071B                      u155 06E3                      u180 073E  
                    u237 0676                      u181 073D                      u190 076E  
                    u247 0665                      u191 076D                      u175 0718  
                    u185 073A                      u195 076A                      _qqq 007B  
                    _www 007A             __CFG_BORV$LO 0000                      wreg 0009  
                   ??_up 0070             __CFG_LVP$OFF 0000             __CFG_WRT$OFF 0000  
                   _main 0692                     _down 065E                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0001            __CFG_IESO$OFF 0000  
                  ?_main 0070                    ?_down 0070            __CFG_WDTE$OFF 0000  
                  _PORTA 000C                    _TRISA 008C           __CFG_FCMEN$OFF 0000  
         test_bit@aValue 0070                    wtemp0 007E           __CFG_MCLRE$OFF 0000  
        __initialization 07F7             __end_of_main 07F7             __end_of_down 066F  
                 ??_main 0076                   ??_down 0070           __CFG_PLLEN$OFF 0000  
                 _ADCON0 009D                   _ANSELA 018C                   _OSCCON 0099  
         __CFG_PWRTE$OFF 0000           __CFG_STVREN$ON 0000          test_bit@aNumber 0072  
       __end_of_test_bit 0692  __end_of__initialization 07FE           __pcstackCOMMON 0070  
             __end_of_up 0680               __pbssBANK0 0020               __pmaintext 0692  
              ?_test_bit 0070                  __ptext1 066F                  __ptext2 0680  
                __ptext3 065E     end_of_initialization 07FE               ??_test_bit 0074  
       __CFG_FOSC$INTOSC 0000      start_initialization 07F7              __pbssCOMMON 007A  
              ___latbits 0000        __size_of_test_bit 0012              __size_of_up 0011  
          __size_of_main 0165            __size_of_down 0011                 _test_bit 0680  
      __CFG_CLKOUTEN$OFF 0000  
